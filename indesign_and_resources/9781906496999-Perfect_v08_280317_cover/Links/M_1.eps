%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.0%%For: (William Perrens) ()%%Title: (M.eps)%%CreationDate: 12/18/10 5:03 PM%%BoundingBox: 4 4 95 95%%HiResBoundingBox: 4.61377 4.60742 94.582 94.5737%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 50.5 48.7129 50.5 48.7129%AI3_TileBox: -229.8936 -330.3936 329.1064 452.6064%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 99.2126 99.2126%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -65.6665 124.2129 6 1402 919 18 0 0 50 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 24992 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA8A87D7D5252FD04272027272720522852527D7DA8A8FD64%FFA87D5252F827F827F827F827F827F827F827F827F827F827F827F82727%7D7DA8A8FD5CFF7D7D2727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F827275252A8A8FD56FF7D522027F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27527DA8FD50FFA87DFD0427202727272027272720272727202727272027%27272027272720272727202727272027272720272727202752A8FD4CFF84%2727F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F8527DFD48FF7D522727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8FD0427A8FD44FFA82727F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F8527DFD40%FFA852272720272727202727272027272720272727202727272027272720%272727202727272027272720272727202727272027272720272727202727%272027272752A8FD3DFF5227F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F87DA8FD39FFA8FD0427F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8277DFD36FFA852F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F82752FD34FFA85227272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%27272027272720FD0427A8FD31FF7D27F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F87DFD2FFF52272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8%272727F8272727F8272727F8272727F8272727F8272727F8272727F87DFD%2DFF2727F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F852A8FD2AFF%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%2727202727272027272720272727202727272027272720272752A8FD27FF%A82727F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827A8%FD25FFA82727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727A8FD23FFA8F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827A8FD22FFFD0427202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272052A8FD20FF2727F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F828A8FD%1EFF28272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F852FD1DFF5227F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F859FD1BFF7D272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%202727272027277DFD19FF7D27F827F827F827F827F827F827F82727FD0D%522827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F82728FD0552F827F827F827F827F827F8%27F827F827F827F827F827F8A8FD18FF27F8272727F8272727F8272727F8%2727FD0FFF5227F8272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F827272752FD06FF7DF8272727F8272727%F8272727F8272727F8272727F82727FD17FF52F827F827F827F827F827F8%27F827F87DFD0FFFA8F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F8A8FD07FF52F827F827F8%27F827F827F827F827F827F827F827F82752FD15FFA82727202727272027%272720272727202753FD10FF7D2027272720272727202727272027272720%272727202727272027272720272727202727272027277DFD09FF7D272720%272727202727272027272720272727202727277DFD14FF2727F827F827F8%27F827F827F827F827F87DFD10FFA827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827A8FD0AFF7DF8%27F827F827F827F827F827F827F827F827F827F827A8FD12FF5227F82727%27F8272727F8272727F827272752FD11FF5227F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F827272752FD0CFF7D%2727F8272727F8272727F8272727F8272727F827277DFD11FF7D27F827F8%27F827F827F827F827F827F827F87DFD11FFA8F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F8A8FD0DFF%53F827F827F827F827F827F827F827F827F827F827F8A8FD10FF52272720%27272720272727202727272027272752FD12FF7D20272727202727272027%272720272727202727272027272720272727202727272027277DFD0FFF7D%202727272027272720272727202727272027272752FD0FFF7EF827F827F8%27F827F827F827F827F827F827F87DFD12FFA827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827A8FD10FF52F8%27F827F827F827F827F827F827F827F827F8277DFD0EFF2727F8272727F8%272727F8272727F8272727F82752FD13FF5227F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F827272752FD12FF7DF8272727%F8272727F8272727F8272727F8272752FD0DFF7D27F827F827F827F827F8%27F827F827F827F827F87DFD13FFA8F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F8A8FD13FF52F827F827F827F8%27F827F827F827F827F827F87DFD0CFF5227272027272720272727202727%2720272727202753FD14FF7D202727272027272720272727202727272027%2727202727272027272720272752FD14FF52272727202727272027272720%27272720FD0427FD0BFF84F827F827F827F827F827F827F827F827F827F8%27F87DFD14FFA827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827A8FD14FF7DF827F827F827F827F827F827F827F827F8%27F8277DFD0AFF5227F8272727F8272727F8272727F8272727F827272752%FD15FF5227F8272727F8272727F8272727F8272727F8272727F8272727F8%27272752FD15FF5227F8272727F8272727F8272727F8272727F8272752FD%09FF7E27F827F827F827F827F827F827F827F827F827F827F87DFD15FFA8%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8A8%FD15FF7DF827F827F827F827F827F827F827F827F827F827F8A8FD08FF7D%2727202727272027272720272727202727272027272752FD16FF7D202727%27202727272027272720272727202727272027272720272752FD16FF5327%202727272027272720272727202727272027272752FD08FF2727F827F827%F827F827F827F827F827F827F827F827F87DFD16FFA827F827F827F827F8%27F827F827F827F827F827F827F827F827F827A8FD16FF7DF827F827F827%F827F827F827F827F827F827F827F827A8FD06FF7D27F8272727F8272727%F8272727F8272727F8272727F82752FD17FF5227F8272727F8272727F827%2727F8272727F8272727F827272752FD17FF52272727F8272727F8272727%F8272727F8272727F82727A8FD06FF52F827F827F827F827F827F827F827%F827F827F827F827F87DFD17FFA8F827F827F827F827F827F827F827F827%F827F827F827F827F8A8FD17FF7DF827F827F827F827F827F827F827F827%F827F827F82752FD06FF2727202727272027272720272727202727272027%2727202753FD0BFFA8FD0CFF7D2027272720272727202727272027272720%27272720272752FD0CFFA8FD0BFF52272727202727272027272720272727%2027272720272727A8FD04FF7D27F827F827F827F827F827F827F827F827%F827F827F827F87DFD0BFF7D7DFD0BFFA827F827F827F827F827F827F827%F827F827F827F827F827A8FD0BFF7D7DFD0BFF7DF827F827F827F827F827%F827F827F827F827F827F827F87EFD04FF7DF8272727F8272727F8272727%F8272727F8272727F827272752FD0BFF7D27FD0CFF5227F8272727F82727%27F8272727F8272727F827272752FD0CFF527DFD0BFF5227F8272727F827%2727F8272727F8272727F8272727F82752FD04FF2727F827F827F827F827%F827F827F827F827F827F827F827F87DFD0BFF7DF87DFD0BFFA8F827F827%F827F827F827F827F827F827F827F827F8A8FD0BFFA8F87EFD0BFF7DF827%F827F827F827F827F827F827F827F827F827F827F827FFFFFFA827202727%27202727272027272720272727202727272027272752FD0BFF7D2727FD0C%FF7D2027272720272727202727272027272720272752FD0CFF52277DFD0B%FF53272027272720272727202727272027272720272727202727A8FFFF7D%F827F827F827F827F827F827F827F827F827F827F827F827F87DFD0BFF7D%F8277DFD0BFFA827F827F827F827F827F827F827F827F827F827A8FD0BFF%A827F8A8FD0BFF7DF827F827F827F827F827F827F827F827F827F827F827%F8277DFFFF52272727F8272727F8272727F8272727F8272727F8272727F8%2752FD0BFF7D27F852FD0CFF5227F8272727F8272727F8272727F8272727%52FD0CFF5227277DFD0BFF52272727F8272727F8272727F8272727F82727%27F8272727F87DFFFF52F827F827F827F827F827F827F827F827F827F827%F827F827F87DFD0BFF7EF827F87DFD0BFFA8F827F827F827F827F827F827%F827F827F8A8FD0BFFA8F827F87DFD0BFF7DF827F827F827F827F827F827%F827F827F827F827F827F82727FFFFFD0427202727272027272720272727%2027272720272727202753FD0BFF7D27202752FD0CFF7D20272727202727%272027272720272752FD0CFF522727277DFD0BFF52272727202727272027%27272027272720272727202727272027FFA827F827F827F827F827F827F8%27F827F827F827F827F827F827F87DFD0BFFA8F827F8277DFD0BFFA827F8%27F827F827F827F827F827F8277DFD0BFFA827F827F87DFD0BFF7DF827F8%27F827F827F827F827F827F827F827F827F827F827F8A8A82727F8272727%F8272727F8272727F8272727F8272727F827272752FD0BFF7D272727F852%FD0CFF5227F8272727F8272727F827272752FD0CFF522727F8277DFD0BFF%5227F8272727F8272727F8272727F8272727F8272727F82727277D5227F8%27F827F827F827F827F827F827F827F827F827F827F827F87DFD0BFF7DF8%27F827F8A8FD0BFFA8F827F827F827F827F827F827F8A8FD0BFFA8F827F8%27F87EFD0BFF7DF827F827F827F827F827F827F827F827F827F827F827F8%27F87D7D2727202727272027272720272727202727272027272720272727%52FD0BFF7D272727202728FD0CFF7D202727272027272720272752FD0CFF%5227272720277DFD0BFF5327202727272027272720272727202727272027%272720272727525227F827F827F827F827F827F827F827F827F827F827F8%27F827F87DFD0BFF7DF827F827F8277DFD0BFFA827F827F827F827F827F8%277DFD0BFFA827F827F827F8A8FD0BFF7DF827F827F827F827F827F827F8%27F827F827F827F827F827F85252F8272727F8272727F8272727F8272727%F8272727F8272727F82752FD0BFF7D27F8272727F852FD0CFF5227F82727%27F827272752FD0CFF522727F82727277DFD0BFF52272727F8272727F827%2727F8272727F8272727F8272727F8FD0427F827F827F827F827F827F827%F827F827F827F827F827F827F87DFD0BFF7EF827F827F827F8A8FD0BFFA8%F827F827F827F827F8A8FD0BFFA8F827F827F827F87DFD0BFF7DF827F827%F827F827F827F827F827F827F827F827F827F827F8272720272727202727%2720272727202727272027272720272727202753FD0BFF7D272027272720%2728FD0CFF522027272720272752FD0CFF52272727202727277DFD0BFF52%2727272027272720272727202727272027272720272727202727F827F827%F827F827F827F827F827F827F827F827F827F827F827F87DFD0BFFA8F827%F827F827F8277DFD0BFFA827F827F827F8277DFD0BFFA827F827F827F827%F87DFD0BFF7DF827F827F827F827F827F827F827F827F827F827F827F827%F8FD0427F8272727F8272727F8272727F8272727F8272727F827272752FD%0BFF7D272727F8272727F852FD0CFF5227F827272752FD0CFF522727F827%2727F8277DFD0BFF5227F8272727F8272727F8272727F8272727F8272727%F8272727F8F827F827F827F827F827F827F827F827F827F827F827F827F8%27F87DFD0BFF7DF827F827F827F827F8A8FD0BFFA8F827F827F8A8FD0BFF%A8F827F827F827F827F87EFD0BFF7DF827F827F827F827F827F827F827F8%27F827F827F827F827F8FD04272027272720272727202727272027272720%2727272027272752FD0BFF7D27272720272727202728FD0CFF5220272752%FD0CFF522727272027272720277DFD0BFF53272027272720272727202727%2720272727202727272027272720F827F827F827F827F827F827F827F827%F827F827F827F827F827F87DFD0BFF7DF827F827F827F827F8277DFD0BFF%A827F8277DFD0BFFA827F827F827F827F827F8A8FD0BFF7DF827F827F827%F827F827F827F827F827F827F827F827F827F82727F8272727F8272727F8%272727F8272727F8272727F8272727F82752FD0BFF7D27F8272727F82727%27F852FD0CFF522752FD0CFF522727F8272727F82727277DFD0BFF522727%27F8272727F8272727F8272727F8272727F8272727F82727F827F827F827%F827F827F827F827F827F827F827F827F827F827F87DFD0BFF7EF827F827%F827F827F827F884FD0BFFA8F8A8FD0BFFA8F827F827F827F827F827F87D%FD0BFF7DF827F827F827F827F827F827F827F827F827F827F827F827F827%52202727272027272720272727202727272027272720272727202753FD0B%FF7D272027272720272727202752FD0CFF7DFD0CFF522727272027272720%2727277DFD0BFF5227272720272727202727272027272720272727202727%2720FD0427F827F827F827F827F827F827F827F827F827F827F827F827F8%7DFD0BFFA8F827F827F827F827F827F8277DFD17FFA827F827F827F827F8%27F827F87DFD0BFF7DF827F827F827F827F827F827F827F827F827F827F8%27F827F852522727F8272727F8272727F8272727F8272727F8272727F827%272752FD0BFF7D272727F8272727F8272727F852FD17FF522727F8272727%F8272727F8277DFD0BFF5227F8272727F8272727F8272727F8272727F827%2727F8272727525227F827F827F827F827F827F827F827F827F827F827F8%27F827F87DFD0BFF7DF827F827F827F827F827F827F8A8FD15FFA8F827F8%27F827F827F827F827F87EFD0BFF7DF827F827F827F827F827F827F827F8%27F827F827F827F827F8537D272720272727202727272027272720272727%202727272027272752FD0BFF7D2727272027272720272727202752FD15FF%52272727202727272027272720277DFD0BFF532720272727202727272027%27272027272720272727202727277D7D27F827F827F827F827F827F827F8%27F827F827F827F827F827F87DFD0BFF7DF827F827F827F827F827F827F8%277DFD13FFA827F827F827F827F827F827F827F8A8FD0BFF7DF827F827F8%27F827F827F827F827F827F827F827F827F827F87EA8F8272727F8272727%F8272727F8272727F8272727F8272727F82752FD0BFF7D27F8272727F827%2727F8272727F852FD13FF522727F8272727F8272727F82727277DFD0BFF%52272727F8272727F8272727F8272727F8272727F8272727F827A8A827F8%27F827F827F827F827F827F827F827F827F827F827F827F87DFD0BFF7EF8%27F827F827F827F827F827F827F8A8FD11FFA8F827F827F827F827F827F8%27F827F87DFD0BFF7DF827F827F827F827F827F827F827F827F827F827F8%27F827F8FFFFFD0427202727272027272720272727202727272027272720%2753FD0BFF7D27202727272027272720272727202752FD11FF5227272720%27272720272727202727277DFD0BFF522727272027272720272727202727%2720272727202727272052FFFF53F827F827F827F827F827F827F827F827%F827F827F827F827F87DFD0BFFA8F827F827F827F827F827F827F827F827%7DFD0FFFA827F827F827F827F827F827F827F827F87DFD0BFF7DF827F827%F827F827F827F827F827F827F827F827F827F82752FFFF7D27F8272727F8%272727F8272727F8272727F8272727F827272752FD0BFF7D272727F82727%27F8272727F8272727F852FD0FFF522727F8272727F8272727F8272727F8%277DFD0BFF5227F8272727F8272727F8272727F8272727F8272727F82727%7DFFFFA8F827F827F827F827F827F827F827F827F827F827F827F827F87D%FD0BFF7DF827F827F827F827F827F827F827F827F87DFD0DA87DF827F827%F827F827F827F827F827F827F87EFD0BFF7DF827F827F827F827F827F827%F827F827F827F827F827F827A8FFFFFF5220272727202727272027272720%272727202727272027272752FD0BFF7D2727272027272720272727202727%2720FD0F272027272720272727202727272027272720277DFD0BFF532720%27272720272727202727272027272720272727202727FD04FF5227F827F8%27F827F827F827F827F827F827F827F827F827F87DFD0BFF7DF827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F8A8FD0BFF7DF827F827F827F827F827F8%27F827F827F827F827F827F87DFD04FFA82727F8272727F8272727F82727%27F8272727F8272727F82752FD0BFF7D27F8272727F8272727F8272727F8%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727%27F82727277DFD0BFF52272727F8272727F8272727F8272727F8272727F8%2727277DFD04FFA827F827F827F827F827F827F827F827F827F827F827F8%27F87DFD0BFF7EF827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F87DFD0BFF%7DF827F827F827F827F827F827F827F827F827F827F82720FD06FF522720%27272720272727202727272027272720272727202753FD0BFF7D27202727%272027272720272727202727272027272720272727202727272027272720%2727272027272720272727202727277DFD0BFF5227272720272727202727%27202727272027272720272752FD06FFA8F827F827F827F827F827F827F8%27F827F827F827F827F87DFD0BFFA8F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F87DFD0BFF7DF827F827F827F827F827F827F827F827F827F827F8%277DFD06FFA8272727F8272727F8272727F8272727F8272727F827272752%FD0BFF7D272727F8272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F8277DFD0BFF5227F8%272727F8272727F8272727F8272727F8FD0427FD08FF5227F827F827F827%F827F827F827F827F827F827F827F87DFD0BFF7DF827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F87EFD0BFF7DF827F827F827F827F827F827F827F827%F827F827F853FD08FFA82727202727272027272720272727202727272027%272752FD0BFF7D2727272027272720272727202727272027272720272727%20272727202727272027272720272727202727272027272720277DFD0BFF%53272027272720272727202727272027272720272727A8FD09FF52F827F8%27F827F827F827F827F827F827F827F827F87DFD0BFF7DF827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F8A8FD0BFF7DF827F827F827F827F827F827F8%27F827F827F82728FD0AFF7D272727F8272727F8272727F8272727F82727%27F82752FD0BFF7D27F8272727F8272727F8272727F8272727F8272727F8%272727F8272727F8272727F8272727F8272727F8272727F82727277DFD0B%FF52272727F8272727F8272727F8272727F8272727F8A8FD0BFF2727F827%F827F827F827F827F827F827F827F827F87DFD0BFF7EF827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F87DFD0BFF7DF827F827F827F827F827F827F827%F827F827F828A8FD0BFFA827272027272720272727202727272027272720%2753FD0BFF7D272027272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727277DFD0BFF52%272727202727272027272720272727202727277DFD0DFF52F827F827F827%F827F827F827F827F827F827F87DFD0BFFA8F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F87DFD0BFF7DF827F827F827F827F827F827F827F827F827%27FD0EFF7D272727F8272727F8272727F8272727F827272752FD0BFF7D27%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8277DFD0BFF5227F8272727F827%2727F8272727F8272727F8A8FD0FFF2727F827F827F827F827F827F827F8%27F827F87DFD0BFF7DF827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F8A8FD%0BFF7DF827F827F827F827F827F827F827F827F852FD10FFA82727202727%2720272727202727272027272752FD0BFF7D272727202727272027272720%272727202727272027272720272727202727272027272720272727202727%272027272720277DFD0BFF7D2720272727202727272027272720272727A8%FD11FF7DF827F827F827F827F827F827F827F827F8277DFFA9FFA8FFA9FF%A8FFA852F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F852A8FFA8FFA9FF%A8FFA9FFA852F827F827F827F827F827F827F827F82752FD12FFA8272727%F8272727F8272727F8272727F8FD0F27F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8FD0B27F8272727F8272727F8272727F8FD0427FD14FF7D27F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F87DFD15FF522720272727202727272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%2027277DFD17FF2727F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827A8FD17FFA82727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727A8FD19FF7DF827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F8277DFD1BFF7D2027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%20272727202752FD1DFF52F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F82727FD1FFF52F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F82727FD20FF%A827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F82727FD22FFA8272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%27272027272720FD0427FD24FFA827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F82727A8FD25FFA8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8FD0427FD28FFA827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F82727A8FD2AFF52202727272027272720%272727202727272027272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%2727272027272720272727202752FD2DFF52F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F82752FD2FFF7DF8272727F8272727F8272727F8272727F8%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8%277DFD31FFA82727F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F8277EFD34FF52272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%2727202727272027277DFD37FF7D27F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F82727A8FD3AFF7DF8%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727%27F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8%272727F82752FD3DFFA82727F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F8527DFD40FF7D5220272727202727272027%272720272727202727272027272720272727202727272027272720272727%20272727202727272027272720272727202727A8FD44FF7D2727F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F8527DFD48FF7D522727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F827272752A8FD4CFFA85227F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827217DA8FD50FFA8A85227202727272027272720272727%202727272027272720272727202727272027272720272727202727527DFD%56FFA87E5252F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F82727537DFD5DFFA97D7DFD0427F8272727F8272727F827%2727F8272727F8FD042752527DA8FD64FFA8A87D7D52522727F827F827F8%27F827275252535284A8FD34FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp5 Bn%AI5_BeginGradient: (Linear Gradient 1)(Linear Gradient 1) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient 2)(Linear Gradient 2) 0 4 Bd[<05060606070708080909090A0A0B0B0C0C0C0D0D0E0E0E0F0F1010111111121213131314141515161616171718181819191A1A1A1B1B1C1C1C1D1D1E1E1E1F1F20202021212222222323242424252525262627272728282829292A2A2A2B2B2C2C2C2D2D2D2E2E2E2F2F30303031313132323233333434343535353636363737373838383939393A3A3A3B3B3B3C3C3C3D3D3D3E3E3E3F3F3F4040404041414142424243434343444444454545454646464747474748484848494949494A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D><47474746464545454444434343424241414140403F3F3F3E3E3E3D3D3C3C3C3B3B3A3A3A3939393838373737363635353534343433333232323131313030302F2F2E2E2E2D2D2D2C2C2C2B2B2A2A2A29292928282827272726262525252424242323232222222121212020201F1F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A1919191818181717171716161615151514141413131313121212111111111010100F0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0909090908080808080707070707060606060605050505><B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929191908F8E8D8C8B8A89888786858483828181807F7E7D7C7B7A79787776767574737271706F6E6D6D6C6B6A69686766656564636261605F5E5E5D5C5B5A5958585756555453535251504F4E4E4D4C4B4A494948474645454443424141403F3E3D3D3C3B3A3A393837373635343433323131302F2E2E2D2C2C2B2A2A2928272726252524232322212120201F1E1E1D1D1C1B1B1A1A1919181717161615151414141313121212>01 %_Br<4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605><05060708090A0B0C0D0E0F101112131415161718191A1B1C1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434344454647><EBEAE9E8E8E7E6E5E5E4E3E2E2E1E0DFDFDEDDDCDCDBDAD9D9D8D7D6D6D5D4D3D3D2D1D0D0CFCECDCDCCCBCACAC9C8C7C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBBBAB9B8B8>01 %_Br<999999989898979797979696969695959594949494939393929292919191909090908F8F8F8E8E8E8D8D8D8C8C8C8C8B8B8B8A8A8A898989888888878787868686858585848484848383838282828181818080807F7F7F7E7E7E7D7D7D7C7C7C7B7B7B7A7A7A79797978787877777776767675757574747473737272727171717070706F6F6F6E6E6E6D6D6D6C6C6C6B6B6B6A6A6A69696968686867676666666565656464646363636262626161616060605F5F5E5E5E5D5D5D5C5C5C5B5B5B5A5A5A595959585857575756565655555554545453535252525151515050504F4F4F4E4E4E4D4D4C4C4C4B4B4B4A4A><14141414141414141414141414141414141413131313131313131313131313131313131212121212121212121212121212121211111111111111111111111111111111101010101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090808080808080808080808080808080707070707070707070707070707060606060606060606060606060606050505050505><0D0D0E0F0F1011121313141516161718191A1B1B1C1D1E1F2020212223242525262728292A2B2C2C2D2E2F30313233333435363738393A3B3B3C3D3E3F40414243444545464748494A4B4C4D4E4F50505152535455565758595A5B5C5C5D5E5F606162636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7D7E7F7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEB>01 %_Br[0.3 0.02 0.07 0 1 50 100 %_BS%_0.3 0.02 0.07 0 1 50 100 Bs0.02 0.28 0.72 0 1 43.038 71.3483 %_BS%_0.02 0.28 0.72 0 1 43.038 71.3483 Bs0.29 0.02 0.92 0 1 50 30.8989 %_BS%_0.29 0.02 0.92 0 1 50 30.8989 Bs0.6 0.08 0.05 0 1 52.5253 0 %_BS%_0.6 0.08 0.05 0 1 52.5253 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 1)(Radial Gradient 1) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[1 0 50 0 %_BS%_1 0 50 0 Bs0 0 50 100 %_BS%_0 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 2)(Radial Gradient 2) 1 2 Bd[<0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3><A0A0A1A1A2A2A2A3A3A4A4A4A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAABABACACACADADAEAEAEAFAFB0B0B0B1B1B2B2B2B3B3B4B4B4B5B5B6B6B7B7B7B8B8B9B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E6>01 %_Br[0.0392 0.0196 0.6275 0 1 50 0 %_BS%_0.0392 0.0196 0.6275 0 1 50 0 Bs0.05 0.7 0.9 0 1 46.0674 100 %_BS%_0.05 0.7 0.9 0 1 46.0674 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 86)(Unnamed gradient 86) 1 2 Bd[<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A><B3B1B0AFAEADACABAAA9A8A7A6A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69686766656564636261605F5E5D5C5B5A59585757565554535251504F4E4D4C4C4B4A49484746454443424241403F3E3D3C3B3A3A39383736353433333231302F2E2D2D2C2B2A2928272726252423222221201F1E1E1D1C1B1A1A191817161615141313121110100F0E0D0D0C0B0B0A0909080707060505><E6E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCCCBCBCACACAC9C9C9C8C8C7C7C7C6C6C6C5C5C4C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBEBEBEBDBDBDBCBCBCBBBBBABABAB9B9B9B8B8B8B7B7B6B6B6B5B5B5B4B4B4B3B3B3B2B2B2B1B1B1B0B0B0AFAFAEAEAEADADADACACACABABABABAAAAAAA9A9A9A8A8A8A7A7A7A6A6A6A5A5A5A5A4A4A4A3A3A3A3A2A2A2A1A1A1A1A0A0A0>01 %_Br[0.05 0.7 0.9 0 1 46.0674 0 %_BS%_0.05 0.7 0.9 0 1 46.0674 0 Bs0.0392 0.0196 0.6275 0 1 50 100 %_BS%_0.0392 0.0196 0.6275 0 1 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Polka Dot Pattern)(Polka Dot Pattern) 2.125 1.89648 71.125 70.8965 [%AI3_Tile(0 O 0 R 0.02 0.28 0.72 0 k 0.02 0.28 0.72 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR71.125 1.89648 m2.125 1.89648 L2.125 70.8965 L71.125 70.8965 L71.125 1.89648 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR61.7725 71.6533 m61.79 71.5811 61.7798 71.5264 61.7466 71.4629 c61.6938 71.3623 61.6343 71.4004 61.5815 71.335 c61.5313 71.2725 61.4824 71.0586 61.5024 70.9727 C61.3335 70.915 61.4927 70.7461 61.4873 70.623 c61.4849 70.5732 61.4468 70.5176 61.4424 70.4619 c61.4326 70.3428 61.4595 70.1963 61.5103 70.0918 c61.6074 69.8936 61.7783 69.6787 61.9453 69.5479 c62.1353 69.3994 62.3101 68.9756 62.5537 68.917 c62.731 68.875 62.9375 69.0215 63.0967 69.0596 c63.2769 69.1025 63.4941 69.0498 63.668 69.1123 c63.8896 69.1914 63.7954 69.4492 63.9561 69.5625 c64.0605 69.6367 64.2432 69.5723 64.3623 69.6133 c64.562 69.6826 64.7012 69.876 64.7383 70.0732 c64.7539 70.1553 64.748 70.2178 64.7769 70.2939 c64.8154 70.3965 64.8882 70.4541 64.8672 70.5869 c64.8574 70.6484 64.8154 70.707 64.8027 70.7734 c64.7808 70.8877 64.8047 70.9971 64.8032 71.1104 c64.8003 71.3105 64.8198 71.4893 64.7251 71.6602 c64.3452 72.3477 63.4888 72.5889 62.7505 72.4492 c62.5708 72.415 62.4639 72.3232 62.3086 72.2422 c62.1382 72.1543 62.1699 72.0762 61.9902 72.0186 c61.9092 71.9922 61.7744 71.8945 61.7754 71.7949 c61.7769 71.6797 61.7803 71.7441 61.7871 71.626 C61.7666 71.6152 61.7656 71.6309 61.7568 71.6514 CF54.1055 71.6533 m54.123 71.5811 54.1128 71.5264 54.0796 71.4629 c54.0269 71.3623 53.9673 71.4004 53.9146 71.335 c53.8643 71.2725 53.8154 71.0586 53.8354 70.9727 C53.6665 70.915 53.8257 70.7461 53.8203 70.623 c53.8179 70.5732 53.7798 70.5176 53.7754 70.4619 c53.7656 70.3428 53.7925 70.1963 53.8433 70.0918 c53.9404 69.8936 54.1113 69.6787 54.2783 69.5479 c54.4683 69.3994 54.6431 68.9756 54.8867 68.917 c55.064 68.875 55.2705 69.0215 55.4297 69.0596 c55.6099 69.1025 55.8271 69.0498 56.001 69.1123 c56.2227 69.1914 56.1284 69.4492 56.2891 69.5625 c56.3936 69.6367 56.5762 69.5723 56.6953 69.6133 c56.895 69.6826 57.0342 69.876 57.0713 70.0732 c57.0869 70.1553 57.0811 70.2178 57.1099 70.2939 c57.1484 70.3965 57.2212 70.4541 57.2002 70.5869 c57.1904 70.6484 57.1484 70.707 57.1357 70.7734 c57.1138 70.8877 57.1377 70.9971 57.1362 71.1104 c57.1333 71.3105 57.1528 71.4893 57.0581 71.6602 c56.6782 72.3477 55.8218 72.5889 55.0835 72.4492 c54.9038 72.415 54.7969 72.3232 54.6416 72.2422 c54.4712 72.1543 54.5029 72.0762 54.3232 72.0186 c54.2422 71.9922 54.1074 71.8945 54.1084 71.7949 c54.1099 71.6797 54.1133 71.7441 54.1201 71.626 C54.0996 71.6152 54.0986 71.6309 54.0898 71.6514 CF46.439 71.6533 m46.4565 71.5811 46.4463 71.5264 46.4131 71.4629 c46.3604 71.3623 46.3008 71.4004 46.248 71.335 c46.1978 71.2725 46.1489 71.0586 46.1689 70.9727 C46 70.915 46.1592 70.7461 46.1538 70.623 c46.1514 70.5732 46.1133 70.5176 46.1089 70.4619 c46.0991 70.3428 46.126 70.1963 46.1768 70.0918 c46.2739 69.8936 46.4448 69.6787 46.6118 69.5479 c46.8018 69.3994 46.9766 68.9756 47.2202 68.917 c47.3975 68.875 47.604 69.0215 47.7632 69.0596 c47.9434 69.1025 48.1606 69.0498 48.3345 69.1123 c48.5562 69.1914 48.4619 69.4492 48.6226 69.5625 c48.7271 69.6367 48.9097 69.5723 49.0288 69.6133 c49.2285 69.6826 49.3677 69.876 49.4048 70.0732 c49.4204 70.1553 49.4146 70.2178 49.4434 70.2939 c49.4819 70.3965 49.5547 70.4541 49.5337 70.5869 c49.5239 70.6484 49.4819 70.707 49.4692 70.7734 c49.4473 70.8877 49.4712 70.9971 49.4697 71.1104 c49.4668 71.3105 49.4863 71.4893 49.3916 71.6602 c49.0117 72.3477 48.1553 72.5889 47.417 72.4492 c47.2373 72.415 47.1304 72.3232 46.9751 72.2422 c46.8047 72.1543 46.8364 72.0762 46.6567 72.0186 c46.5757 71.9922 46.4409 71.8945 46.4419 71.7949 c46.4434 71.6797 46.4468 71.7441 46.4536 71.626 C46.4331 71.6152 46.4321 71.6309 46.4233 71.6514 CF38.7725 71.6533 m38.79 71.5811 38.7798 71.5264 38.7466 71.4629 c38.6938 71.3623 38.6343 71.4004 38.5815 71.335 c38.5313 71.2725 38.4824 71.0586 38.5024 70.9727 C38.3335 70.915 38.4927 70.7461 38.4873 70.623 c38.4849 70.5732 38.4468 70.5176 38.4424 70.4619 c38.4326 70.3428 38.4595 70.1963 38.5103 70.0918 c38.6074 69.8936 38.7783 69.6787 38.9453 69.5479 c39.1353 69.3994 39.3101 68.9756 39.5537 68.917 c39.731 68.875 39.9375 69.0215 40.0967 69.0596 c40.2769 69.1025 40.4941 69.0498 40.668 69.1123 c40.8896 69.1914 40.7954 69.4492 40.9561 69.5625 c41.0605 69.6367 41.2432 69.5723 41.3623 69.6133 c41.562 69.6826 41.7012 69.876 41.7383 70.0732 c41.7539 70.1553 41.748 70.2178 41.7769 70.2939 c41.8154 70.3965 41.8882 70.4541 41.8672 70.5869 c41.8574 70.6484 41.8154 70.707 41.8027 70.7734 c41.7808 70.8877 41.8047 70.9971 41.8032 71.1104 c41.8003 71.3105 41.8198 71.4893 41.7251 71.6602 c41.3452 72.3477 40.4888 72.5889 39.7505 72.4492 c39.5708 72.415 39.4639 72.3232 39.3086 72.2422 c39.1382 72.1543 39.1699 72.0762 38.9902 72.0186 c38.9092 71.9922 38.7744 71.8945 38.7754 71.7949 c38.7769 71.6797 38.7803 71.7441 38.7871 71.626 C38.7666 71.6152 38.7656 71.6309 38.7568 71.6514 CF31.1055 71.6533 m31.123 71.5811 31.1128 71.5264 31.0796 71.4629 c31.0269 71.3623 30.9673 71.4004 30.9146 71.335 c30.8643 71.2725 30.8154 71.0586 30.8354 70.9727 C30.6665 70.915 30.8257 70.7461 30.8203 70.623 c30.8179 70.5732 30.7798 70.5176 30.7754 70.4619 c30.7656 70.3428 30.7925 70.1963 30.8433 70.0918 c30.9404 69.8936 31.1113 69.6787 31.2783 69.5479 c31.4683 69.3994 31.6431 68.9756 31.8867 68.917 c32.064 68.875 32.2705 69.0215 32.4297 69.0596 c32.6099 69.1025 32.8271 69.0498 33.001 69.1123 c33.2227 69.1914 33.1284 69.4492 33.2891 69.5625 c33.3936 69.6367 33.5762 69.5723 33.6953 69.6133 c33.895 69.6826 34.0342 69.876 34.0713 70.0732 c34.0869 70.1553 34.0811 70.2178 34.1099 70.2939 c34.1484 70.3965 34.2212 70.4541 34.2002 70.5869 c34.1904 70.6484 34.1484 70.707 34.1357 70.7734 c34.1138 70.8877 34.1377 70.9971 34.1362 71.1104 c34.1333 71.3105 34.1528 71.4893 34.0581 71.6602 c33.6782 72.3477 32.8218 72.5889 32.0835 72.4492 c31.9038 72.415 31.7969 72.3232 31.6416 72.2422 c31.4712 72.1543 31.5029 72.0762 31.3232 72.0186 c31.2422 71.9922 31.1074 71.8945 31.1084 71.7949 c31.1099 71.6797 31.1133 71.7441 31.1201 71.626 C31.0996 71.6152 31.0986 71.6309 31.0898 71.6514 CF23.439 71.6533 m23.4565 71.5811 23.4463 71.5264 23.4131 71.4629 c23.3604 71.3623 23.3008 71.4004 23.248 71.335 c23.1978 71.2725 23.1489 71.0586 23.1689 70.9727 C23 70.915 23.1592 70.7461 23.1538 70.623 c23.1514 70.5732 23.1133 70.5176 23.1089 70.4619 c23.0991 70.3428 23.126 70.1963 23.1768 70.0918 c23.2739 69.8936 23.4448 69.6787 23.6118 69.5479 c23.8018 69.3994 23.9766 68.9756 24.2202 68.917 c24.3975 68.875 24.604 69.0215 24.7632 69.0596 c24.9434 69.1025 25.1606 69.0498 25.3345 69.1123 c25.5562 69.1914 25.4619 69.4492 25.6226 69.5625 c25.7271 69.6367 25.9097 69.5723 26.0288 69.6133 c26.2285 69.6826 26.3677 69.876 26.4048 70.0732 c26.4204 70.1553 26.4146 70.2178 26.4434 70.2939 c26.4819 70.3965 26.5547 70.4541 26.5337 70.5869 c26.5239 70.6484 26.4819 70.707 26.4692 70.7734 c26.4473 70.8877 26.4712 70.9971 26.4697 71.1104 c26.4668 71.3105 26.4863 71.4893 26.3916 71.6602 c26.0117 72.3477 25.1553 72.5889 24.417 72.4492 c24.2373 72.415 24.1304 72.3232 23.9751 72.2422 c23.8047 72.1543 23.8364 72.0762 23.6567 72.0186 c23.5757 71.9922 23.4409 71.8945 23.4419 71.7949 c23.4434 71.6797 23.4468 71.7441 23.4536 71.626 C23.4331 71.6152 23.4321 71.6309 23.4233 71.6514 CF15.7725 71.6533 m15.79 71.5811 15.7798 71.5264 15.7466 71.4629 c15.6938 71.3623 15.6343 71.4004 15.5815 71.335 c15.5313 71.2725 15.4824 71.0586 15.5024 70.9727 C15.3335 70.915 15.4927 70.7461 15.4873 70.623 c15.4849 70.5732 15.4468 70.5176 15.4424 70.4619 c15.4326 70.3428 15.4595 70.1963 15.5103 70.0918 c15.6074 69.8936 15.7783 69.6787 15.9453 69.5479 c16.1353 69.3994 16.3101 68.9756 16.5537 68.917 c16.731 68.875 16.9375 69.0215 17.0967 69.0596 c17.2769 69.1025 17.4941 69.0498 17.668 69.1123 c17.8896 69.1914 17.7954 69.4492 17.9561 69.5625 c18.0605 69.6367 18.2432 69.5723 18.3623 69.6133 c18.562 69.6826 18.7012 69.876 18.7383 70.0732 c18.7539 70.1553 18.748 70.2178 18.7769 70.2939 c18.8154 70.3965 18.8882 70.4541 18.8672 70.5869 c18.8574 70.6484 18.8154 70.707 18.8027 70.7734 c18.7808 70.8877 18.8047 70.9971 18.8032 71.1104 c18.8003 71.3105 18.8198 71.4893 18.7251 71.6602 c18.3452 72.3477 17.4888 72.5889 16.7505 72.4492 c16.5708 72.415 16.4639 72.3232 16.3086 72.2422 c16.1382 72.1543 16.1699 72.0762 15.9902 72.0186 c15.9092 71.9922 15.7744 71.8945 15.7754 71.7949 c15.7769 71.6797 15.7803 71.7441 15.7871 71.626 C15.7666 71.6152 15.7656 71.6309 15.7568 71.6514 CF8.10547 71.6533 m8.12305 71.5811 8.11279 71.5264 8.07959 71.4629 c8.02686 71.3623 7.96729 71.4004 7.91455 71.335 c7.86426 71.2725 7.81543 71.0586 7.83545 70.9727 C7.6665 70.915 7.82568 70.7461 7.82031 70.623 c7.81787 70.5732 7.77979 70.5176 7.77539 70.4619 c7.76563 70.3428 7.79248 70.1963 7.84326 70.0918 c7.94043 69.8936 8.11133 69.6787 8.27832 69.5479 c8.46826 69.3994 8.64307 68.9756 8.88672 68.917 c9.06396 68.875 9.27051 69.0215 9.42969 69.0596 c9.60986 69.1025 9.82715 69.0498 10.001 69.1123 c10.2227 69.1914 10.1284 69.4492 10.2891 69.5625 c10.3936 69.6367 10.5762 69.5723 10.6953 69.6133 c10.895 69.6826 11.0342 69.876 11.0713 70.0732 c11.0869 70.1553 11.0811 70.2178 11.1099 70.2939 c11.1484 70.3965 11.2212 70.4541 11.2002 70.5869 c11.1904 70.6484 11.1484 70.707 11.1357 70.7734 c11.1138 70.8877 11.1377 70.9971 11.1362 71.1104 c11.1333 71.3105 11.1528 71.4893 11.0581 71.6602 c10.6782 72.3477 9.82178 72.5889 9.0835 72.4492 c8.90381 72.415 8.79688 72.3232 8.6416 72.2422 c8.47119 72.1543 8.50293 72.0762 8.32324 72.0186 c8.24219 71.9922 8.10742 71.8945 8.1084 71.7949 c8.10986 71.6797 8.11328 71.7441 8.12012 71.626 C8.09961 71.6152 8.09863 71.6309 8.08984 71.6514 CF0.438965 71.6533 m0.456543 71.5811 0.446777 71.5264 0.413086 71.4629 c0.36084 71.3623 0.300293 71.4004 0.248047 71.335 c0.197266 71.2725 0.148926 71.0586 0.168945 70.9727 C0 70.915 0.158691 70.7461 0.153809 70.623 c0.151367 70.5732 0.113281 70.5176 0.108887 70.4619 c0.098633 70.3428 0.125977 70.1963 0.176758 70.0918 c0.273926 69.8936 0.444824 69.6787 0.611816 69.5479 c0.801758 69.3994 0.976563 68.9756 1.22021 68.917 c1.39746 68.875 1.604 69.0215 1.76318 69.0596 c1.94336 69.1025 2.16064 69.0498 2.33447 69.1123 c2.55615 69.1914 2.46191 69.4492 2.62256 69.5625 c2.72705 69.6367 2.90967 69.5723 3.02881 69.6133 c3.22852 69.6836 3.36816 69.876 3.40479 70.0732 c3.42041 70.1553 3.41455 70.2178 3.44336 70.2939 c3.48145 70.3965 3.55469 70.4541 3.53369 70.5869 c3.52393 70.6484 3.48242 70.707 3.46924 70.7734 c3.44775 70.8877 3.47119 70.9971 3.46973 71.1104 c3.4668 71.3105 3.48633 71.4893 3.3916 71.6602 c3.01172 72.3477 2.15527 72.5889 1.41699 72.4492 c1.2373 72.415 1.13037 72.3232 0.975098 72.2422 c0.804688 72.1543 0.836426 72.0762 0.656738 72.0186 c0.575684 71.9922 0.441406 71.8945 0.441895 71.7949 c0.443848 71.6797 0.446777 71.7441 0.453613 71.626 C0.433105 71.6152 0.432129 71.6309 0.42334 71.6514 cF69.439 71.6533 m69.4565 71.5811 69.4468 71.5264 69.4131 71.4629 c69.3608 71.3623 69.3003 71.4004 69.248 71.335 c69.1973 71.2725 69.1489 71.0586 69.1689 70.9727 C69 70.915 69.1587 70.7461 69.1538 70.623 c69.1514 70.5732 69.1133 70.5176 69.1089 70.4619 c69.0986 70.3428 69.126 70.1963 69.1768 70.0918 c69.2739 69.8936 69.4448 69.6787 69.6118 69.5479 c69.8018 69.3994 69.9766 68.9756 70.2202 68.917 c70.3975 68.875 70.604 69.0215 70.7632 69.0596 c70.9434 69.1025 71.1606 69.0498 71.3345 69.1123 c71.5562 69.1914 71.4619 69.4492 71.6226 69.5625 c71.7271 69.6367 71.9097 69.5723 72.0288 69.6133 c72.2285 69.6836 72.3682 69.876 72.4048 70.0732 c72.4204 70.1553 72.4146 70.2178 72.4434 70.2939 c72.4814 70.3965 72.5547 70.4541 72.5337 70.5869 c72.5239 70.6484 72.4824 70.707 72.4692 70.7734 c72.4478 70.8877 72.4712 70.9971 72.4697 71.1104 c72.4668 71.3105 72.4863 71.4893 72.3916 71.6602 c72.0117 72.3477 71.1553 72.5889 70.417 72.4492 c70.2373 72.415 70.1304 72.3232 69.9751 72.2422 c69.8047 72.1543 69.8364 72.0762 69.6567 72.0186 c69.5757 71.9922 69.4414 71.8945 69.4419 71.7949 c69.4438 71.6797 69.4468 71.7441 69.4536 71.626 C69.4331 71.6152 69.4321 71.6309 69.4233 71.6514 cF0.495117 71.6533 m0.512695 71.5811 0.50293 71.5264 0.469238 71.4629 c0.416992 71.3623 0.356445 71.4004 0.304199 71.335 c0.253418 71.2725 0.205078 71.0586 0.225098 70.9727 C0.056152 70.915 0.214844 70.7461 0.209961 70.623 c0.20752 70.5732 0.169434 70.5176 0.165039 70.4619 c0.154785 70.3428 0.182129 70.1963 0.23291 70.0918 c0.330078 69.8936 0.500977 69.6787 0.667969 69.5479 c0.85791 69.3994 1.03271 68.9756 1.27637 68.917 c1.45361 68.875 1.66016 69.0215 1.81934 69.0596 c1.99951 69.1025 2.2168 69.0498 2.39063 69.1123 c2.6123 69.1914 2.51807 69.4492 2.67871 69.5625 c2.7832 69.6367 2.96582 69.5723 3.08496 69.6133 c3.28467 69.6836 3.42432 69.876 3.46094 70.0732 c3.47656 70.1553 3.4707 70.2178 3.49951 70.2939 c3.5376 70.3965 3.61084 70.4541 3.58984 70.5869 c3.58008 70.6484 3.53857 70.707 3.52539 70.7734 c3.50391 70.8877 3.52734 70.9971 3.52588 71.1104 c3.52295 71.3105 3.54248 71.4893 3.44775 71.6602 c3.06787 72.3477 2.21143 72.5889 1.47314 72.4492 c1.29346 72.415 1.18652 72.3232 1.03125 72.2422 c0.86084 72.1543 0.892578 72.0762 0.712891 72.0186 c0.631836 71.9922 0.497559 71.8945 0.498047 71.7949 c0.5 71.6797 0.50293 71.7441 0.509766 71.626 C0.489258 71.6152 0.488281 71.6309 0.479492 71.6514 cF69.439 64.001 m69.4565 63.9287 69.4463 63.874 69.4131 63.8105 c69.3604 63.71 69.3008 63.748 69.248 63.6826 c69.1978 63.6201 69.1489 63.4063 69.1689 63.3203 C69 63.2627 69.1592 63.0938 69.1538 62.9707 c69.1514 62.9209 69.1133 62.8652 69.1089 62.8096 c69.0991 62.6904 69.126 62.5439 69.1768 62.4395 c69.2739 62.2412 69.4448 62.0264 69.6118 61.8955 c69.8018 61.7471 69.9766 61.3232 70.2202 61.2646 c70.3975 61.2227 70.604 61.3691 70.7632 61.4072 c70.9434 61.4502 71.1606 61.3975 71.3345 61.46 c71.5562 61.5391 71.4619 61.7969 71.6226 61.9102 c71.7271 61.9844 71.9097 61.9199 72.0288 61.9609 c72.2285 62.0303 72.3677 62.2236 72.4048 62.4209 c72.4204 62.5029 72.4146 62.5654 72.4434 62.6416 c72.4819 62.7441 72.5547 62.8018 72.5337 62.9346 c72.5239 62.9961 72.4819 63.0547 72.4692 63.1211 c72.4473 63.2354 72.4712 63.3447 72.4697 63.458 c72.4668 63.6582 72.4863 63.8369 72.3916 64.0078 c72.0117 64.6953 71.1553 64.9365 70.417 64.7969 c70.2373 64.7627 70.1304 64.6709 69.9751 64.5898 c69.8047 64.502 69.8364 64.4238 69.6567 64.3662 c69.5757 64.3398 69.4409 64.2422 69.4419 64.1426 c69.4434 64.0273 69.4468 64.0918 69.4536 63.9736 C69.4331 63.9629 69.4321 63.9785 69.4233 63.999 CF61.7783 64.001 m61.7959 63.9287 61.7856 63.874 61.7524 63.8105 c61.6997 63.71 61.6401 63.748 61.5874 63.6826 c61.5371 63.6201 61.4883 63.4063 61.5083 63.3203 C61.3394 63.2627 61.499 63.0938 61.4932 62.9707 c61.4907 62.9209 61.4526 62.8652 61.4482 62.8096 c61.4385 62.6904 61.4653 62.5439 61.5161 62.4395 c61.6133 62.2412 61.7842 62.0264 61.9512 61.8955 c62.1411 61.7471 62.3159 61.3232 62.5596 61.2646 c62.7368 61.2227 62.9434 61.3691 63.1025 61.4072 c63.2827 61.4502 63.5 61.3975 63.6738 61.46 c63.8955 61.5391 63.8013 61.7969 63.9619 61.9102 c64.0664 61.9844 64.249 61.9199 64.3682 61.9609 c64.5679 62.0303 64.707 62.2236 64.7441 62.4209 c64.7598 62.5029 64.7539 62.5654 64.7827 62.6416 c64.8213 62.7441 64.894 62.8018 64.873 62.9346 c64.8633 62.9961 64.8213 63.0547 64.8086 63.1211 c64.7866 63.2354 64.8105 63.3447 64.8091 63.458 c64.8062 63.6582 64.8257 63.8369 64.731 64.0078 c64.3511 64.6953 63.4946 64.9365 62.7563 64.7969 c62.5767 64.7627 62.4697 64.6709 62.3145 64.5898 c62.144 64.502 62.1758 64.4238 61.9961 64.3662 c61.915 64.3398 61.7803 64.2422 61.7813 64.1426 c61.7827 64.0273 61.7861 64.0918 61.793 63.9736 C61.7725 63.9629 61.7715 63.9785 61.7627 63.999 CF54.1182 64.001 m54.1357 63.9287 54.1255 63.874 54.0923 63.8105 c54.0396 63.71 53.98 63.748 53.9272 63.6826 c53.877 63.6201 53.8281 63.4063 53.8481 63.3203 C53.6792 63.2627 53.8389 63.0938 53.833 62.9707 c53.8306 62.9209 53.7925 62.8652 53.7881 62.8096 c53.7783 62.6904 53.8052 62.5439 53.856 62.4395 c53.9531 62.2412 54.124 62.0264 54.291 61.8955 c54.481 61.7471 54.6558 61.3232 54.8994 61.2646 c55.0767 61.2227 55.2832 61.3691 55.4424 61.4072 c55.6226 61.4502 55.8398 61.3975 56.0137 61.46 c56.2354 61.5391 56.1411 61.7969 56.3018 61.9102 c56.4063 61.9844 56.5889 61.9199 56.708 61.9609 c56.9077 62.0303 57.0469 62.2236 57.084 62.4209 c57.0996 62.5029 57.0938 62.5654 57.1226 62.6416 c57.1611 62.7441 57.2339 62.8018 57.2129 62.9346 c57.2031 62.9961 57.1611 63.0547 57.1484 63.1211 c57.1265 63.2354 57.1504 63.3447 57.1489 63.458 c57.146 63.6582 57.1655 63.8369 57.0708 64.0078 c56.6909 64.6953 55.8345 64.9365 55.0962 64.7969 c54.9165 64.7627 54.8096 64.6709 54.6543 64.5898 c54.4839 64.502 54.5156 64.4238 54.3359 64.3662 c54.2549 64.3398 54.1201 64.2422 54.1211 64.1426 c54.1226 64.0273 54.126 64.0918 54.1328 63.9736 C54.1123 63.9629 54.1113 63.9785 54.1025 63.999 CF46.4575 64.001 m46.4751 63.9287 46.4648 63.874 46.4316 63.8105 c46.3789 63.71 46.3193 63.748 46.2666 63.6826 c46.2163 63.6201 46.1675 63.4063 46.1875 63.3203 C46.0186 63.2627 46.1782 63.0938 46.1724 62.9707 c46.1699 62.9209 46.1318 62.8652 46.1274 62.8096 c46.1177 62.6904 46.1445 62.5439 46.1953 62.4395 c46.2925 62.2412 46.4634 62.0264 46.6304 61.8955 c46.8203 61.7471 46.9951 61.3232 47.2388 61.2646 c47.416 61.2227 47.6226 61.3691 47.7817 61.4072 c47.9619 61.4502 48.1792 61.3975 48.353 61.46 c48.5747 61.5391 48.4805 61.7969 48.6411 61.9102 c48.7456 61.9844 48.9282 61.9199 49.0474 61.9609 c49.2471 62.0303 49.3862 62.2236 49.4233 62.4209 c49.439 62.5029 49.4331 62.5654 49.4619 62.6416 c49.5005 62.7441 49.5732 62.8018 49.5522 62.9346 c49.5425 62.9961 49.5005 63.0547 49.4878 63.1211 c49.4658 63.2354 49.4897 63.3447 49.4883 63.458 c49.4854 63.6582 49.5049 63.8369 49.4102 64.0078 c49.0303 64.6953 48.1738 64.9365 47.4355 64.7969 c47.2559 64.7627 47.1489 64.6709 46.9937 64.5898 c46.8232 64.502 46.855 64.4238 46.6753 64.3662 c46.5942 64.3398 46.4595 64.2422 46.4604 64.1426 c46.4619 64.0273 46.4653 64.0918 46.4722 63.9736 C46.4517 63.9629 46.4507 63.9785 46.4419 63.999 CF38.7974 64.001 m38.8149 63.9287 38.8047 63.874 38.7715 63.8105 c38.7188 63.71 38.6592 63.748 38.6064 63.6826 c38.5562 63.6201 38.5073 63.4063 38.5273 63.3203 C38.3584 63.2627 38.5181 63.0938 38.5122 62.9707 c38.5098 62.9209 38.4717 62.8652 38.4673 62.8096 c38.4575 62.6904 38.4844 62.5439 38.5352 62.4395 c38.6323 62.2412 38.8032 62.0264 38.9702 61.8955 c39.1602 61.7471 39.335 61.3232 39.5786 61.2646 c39.7559 61.2227 39.9624 61.3691 40.1216 61.4072 c40.3018 61.4502 40.519 61.3975 40.6929 61.46 c40.9146 61.5391 40.8203 61.7969 40.981 61.9102 c41.0854 61.9844 41.2681 61.9199 41.3872 61.9609 c41.5869 62.0303 41.7261 62.2236 41.7632 62.4209 c41.7788 62.5029 41.7729 62.5654 41.8018 62.6416 c41.8403 62.7441 41.9131 62.8018 41.8921 62.9346 c41.8823 62.9961 41.8403 63.0547 41.8276 63.1211 c41.8057 63.2354 41.8296 63.3447 41.8281 63.458 c41.8252 63.6582 41.8447 63.8369 41.75 64.0078 c41.3701 64.6953 40.5137 64.9365 39.7754 64.7969 c39.5957 64.7627 39.4888 64.6709 39.3335 64.5898 c39.1631 64.502 39.1948 64.4238 39.0151 64.3662 c38.9341 64.3398 38.7993 64.2422 38.8003 64.1426 c38.8018 64.0273 38.8052 64.0918 38.812 63.9736 C38.7915 63.9629 38.7905 63.9785 38.7817 63.999 CF31.1367 64.001 m31.1543 63.9287 31.144 63.874 31.1108 63.8105 c31.0581 63.71 30.9985 63.748 30.9458 63.6826 c30.8955 63.6201 30.8467 63.4063 30.8667 63.3203 C30.6978 63.2627 30.8574 63.0938 30.8516 62.9707 c30.8491 62.9209 30.811 62.8652 30.8066 62.8096 c30.7969 62.6904 30.8237 62.5439 30.8745 62.4395 c30.9717 62.2412 31.1426 62.0264 31.3096 61.8955 c31.4995 61.7471 31.6743 61.3232 31.918 61.2646 c32.0952 61.2227 32.3018 61.3691 32.4609 61.4072 c32.6411 61.4502 32.8584 61.3975 33.0322 61.46 c33.2539 61.5391 33.1597 61.7969 33.3203 61.9102 c33.4248 61.9844 33.6074 61.9199 33.7266 61.9609 c33.9263 62.0303 34.0654 62.2236 34.1025 62.4209 c34.1182 62.5029 34.1123 62.5654 34.1411 62.6416 c34.1797 62.7441 34.2524 62.8018 34.2314 62.9346 c34.2217 62.9961 34.1797 63.0547 34.167 63.1211 c34.145 63.2354 34.1689 63.3447 34.1675 63.458 c34.1646 63.6582 34.1841 63.8369 34.0894 64.0078 c33.7095 64.6953 32.853 64.9365 32.1147 64.7969 c31.9351 64.7627 31.8281 64.6709 31.6729 64.5898 c31.5024 64.502 31.5342 64.4238 31.3545 64.3662 c31.2734 64.3398 31.1387 64.2422 31.1396 64.1426 c31.1411 64.0273 31.1445 64.0918 31.1514 63.9736 C31.1309 63.9629 31.1299 63.9785 31.1211 63.999 CF23.4766 64.001 m23.4941 63.9287 23.4839 63.874 23.4507 63.8105 c23.3979 63.71 23.3384 63.748 23.2856 63.6826 c23.2354 63.6201 23.1865 63.4063 23.2065 63.3203 C23.0376 63.2627 23.1973 63.0938 23.1914 62.9707 c23.189 62.9209 23.1509 62.8652 23.1465 62.8096 c23.1367 62.6904 23.1636 62.5439 23.2144 62.4395 c23.3115 62.2412 23.4824 62.0264 23.6494 61.8955 c23.8394 61.7471 24.0142 61.3232 24.2578 61.2646 c24.4351 61.2227 24.6416 61.3691 24.8008 61.4072 c24.981 61.4502 25.1982 61.3975 25.3721 61.46 c25.5938 61.5391 25.4995 61.7969 25.6602 61.9102 c25.7646 61.9844 25.9473 61.9199 26.0664 61.9609 c26.2661 62.0303 26.4053 62.2236 26.4424 62.4209 c26.458 62.5029 26.4521 62.5654 26.481 62.6416 c26.5195 62.7441 26.5923 62.8018 26.5713 62.9346 c26.5615 62.9961 26.5195 63.0547 26.5068 63.1211 c26.4849 63.2354 26.5088 63.3447 26.5073 63.458 c26.5044 63.6582 26.5239 63.8369 26.4292 64.0078 c26.0493 64.6953 25.1929 64.9365 24.4546 64.7969 c24.2749 64.7627 24.168 64.6709 24.0127 64.5898 c23.8423 64.502 23.874 64.4238 23.6943 64.3662 c23.6133 64.3398 23.4785 64.2422 23.4795 64.1426 c23.481 64.0273 23.4844 64.0918 23.4912 63.9736 C23.4707 63.9629 23.4697 63.9785 23.4609 63.999 CF15.8159 64.001 m15.8335 63.9287 15.8232 63.874 15.79 63.8105 c15.7373 63.71 15.6777 63.748 15.625 63.6826 c15.5747 63.6201 15.5259 63.4063 15.5459 63.3203 C15.377 63.2627 15.5366 63.0938 15.5308 62.9707 c15.5283 62.9209 15.4902 62.8652 15.4858 62.8096 c15.4761 62.6904 15.5029 62.5439 15.5537 62.4395 c15.6509 62.2412 15.8218 62.0264 15.9888 61.8955 c16.1787 61.7471 16.3535 61.3232 16.5972 61.2646 c16.7744 61.2227 16.981 61.3691 17.1401 61.4072 c17.3203 61.4502 17.5376 61.3975 17.7114 61.46 c17.9331 61.5391 17.8389 61.7969 17.9995 61.9102 c18.104 61.9844 18.2866 61.9199 18.4058 61.9609 c18.6055 62.0303 18.7446 62.2236 18.7817 62.4209 c18.7974 62.5029 18.7915 62.5654 18.8203 62.6416 c18.8589 62.7441 18.9316 62.8018 18.9106 62.9346 c18.9009 62.9961 18.8589 63.0547 18.8462 63.1211 c18.8242 63.2354 18.8481 63.3447 18.8467 63.458 c18.8438 63.6582 18.8633 63.8369 18.7686 64.0078 c18.3887 64.6953 17.5322 64.9365 16.7939 64.7969 c16.6143 64.7627 16.5073 64.6709 16.3521 64.5898 c16.1816 64.502 16.2134 64.4238 16.0337 64.3662 c15.9526 64.3398 15.8179 64.2422 15.8188 64.1426 c15.8203 64.0273 15.8237 64.0918 15.8306 63.9736 C15.8101 63.9629 15.8091 63.9785 15.8003 63.999 CF8.15576 64.001 m8.17334 63.9287 8.16309 63.874 8.12988 63.8105 c8.07715 63.71 8.01758 63.748 7.96484 63.6826 c7.91455 63.6201 7.86572 63.4063 7.88574 63.3203 C7.7168 63.2627 7.87646 63.0938 7.87061 62.9707 c7.86816 62.9209 7.83008 62.8652 7.82568 62.8096 c7.81592 62.6904 7.84277 62.5439 7.89355 62.4395 c7.99072 62.2412 8.16162 62.0264 8.32861 61.8955 c8.51855 61.7471 8.69336 61.3232 8.93701 61.2646 c9.11426 61.2227 9.3208 61.3691 9.47998 61.4072 c9.66016 61.4502 9.87744 61.3975 10.0513 61.46 c10.2729 61.5391 10.1787 61.7969 10.3394 61.9102 c10.4438 61.9844 10.6265 61.9199 10.7456 61.9609 c10.9453 62.0303 11.0845 62.2236 11.1216 62.4209 c11.1372 62.5029 11.1313 62.5654 11.1602 62.6416 c11.1987 62.7441 11.2715 62.8018 11.2505 62.9346 c11.2407 62.9961 11.1987 63.0547 11.186 63.1211 c11.1641 63.2354 11.188 63.3447 11.1865 63.458 c11.1836 63.6582 11.2031 63.8369 11.1084 64.0078 c10.7285 64.6953 9.87207 64.9365 9.13379 64.7969 c8.9541 64.7627 8.84717 64.6709 8.69189 64.5898 c8.52148 64.502 8.55322 64.4238 8.37354 64.3662 c8.29248 64.3398 8.15771 64.2422 8.15869 64.1426 c8.16016 64.0273 8.16357 64.0918 8.17041 63.9736 C8.1499 63.9629 8.14893 63.9785 8.14014 63.999 CF0.495117 64.001 m0.512695 63.9287 0.502441 63.874 0.469238 63.8105 c0.416504 63.71 0.356934 63.748 0.304199 63.6826 c0.253906 63.6201 0.205078 63.4063 0.225098 63.3203 C0.056152 63.2627 0.215332 63.0938 0.209961 62.9707 c0.20752 62.9209 0.169434 62.8652 0.165039 62.8096 c0.155273 62.6904 0.182129 62.5439 0.23291 62.4395 c0.330078 62.2412 0.500977 62.0264 0.667969 61.8955 c0.85791 61.7471 1.03271 61.3232 1.27637 61.2646 c1.45361 61.2227 1.66016 61.3691 1.81934 61.4072 c1.99951 61.4502 2.2168 61.3975 2.39063 61.46 c2.6123 61.5391 2.51807 61.7969 2.67871 61.9102 c2.7832 61.9844 2.96582 61.9199 3.08496 61.9609 c3.28467 62.0303 3.42383 62.2236 3.46094 62.4209 c3.47656 62.5029 3.4707 62.5654 3.49951 62.6416 c3.53809 62.7441 3.61084 62.8018 3.58984 62.9346 c3.58008 62.9961 3.53809 63.0547 3.52539 63.1211 c3.50342 63.2354 3.52734 63.3447 3.52588 63.458 c3.52295 63.6582 3.54248 63.8369 3.44775 64.0078 c3.06787 64.6953 2.21143 64.9365 1.47314 64.7969 c1.29346 64.7627 1.18652 64.6709 1.03125 64.5898 c0.86084 64.502 0.892578 64.4238 0.712891 64.3662 c0.631836 64.3398 0.49707 64.2422 0.498047 64.1426 c0.499512 64.0273 0.50293 64.0918 0.509766 63.9736 C0.489258 63.9629 0.488281 63.9785 0.479492 63.999 CF69.439 56.3477 m69.4565 56.2754 69.4463 56.2207 69.4131 56.1572 c69.3604 56.0566 69.3008 56.0947 69.248 56.0293 c69.1978 55.9668 69.1489 55.7529 69.1689 55.667 C69 55.6094 69.1592 55.4404 69.1538 55.3174 c69.1514 55.2676 69.1133 55.2119 69.1089 55.1563 c69.0991 55.0371 69.126 54.8906 69.1768 54.7861 c69.2739 54.5879 69.4448 54.373 69.6118 54.2422 c69.8018 54.0938 69.9766 53.6699 70.2202 53.6113 c70.3975 53.5693 70.604 53.7158 70.7632 53.7539 c70.9434 53.7969 71.1606 53.7441 71.3345 53.8066 c71.5562 53.8857 71.4619 54.1436 71.6226 54.2568 c71.7271 54.3311 71.9097 54.2666 72.0288 54.3076 c72.2285 54.377 72.3677 54.5703 72.4048 54.7676 c72.4204 54.8496 72.4146 54.9121 72.4434 54.9883 c72.4819 55.0908 72.5547 55.1484 72.5337 55.2813 c72.5239 55.3428 72.4819 55.4014 72.4692 55.4678 c72.4473 55.582 72.4712 55.6914 72.4697 55.8047 c72.4668 56.0049 72.4863 56.1836 72.3916 56.3545 c72.0117 57.042 71.1553 57.2832 70.417 57.1436 c70.2373 57.1094 70.1304 57.0176 69.9751 56.9365 c69.8047 56.8486 69.8364 56.7705 69.6567 56.7129 c69.5757 56.6865 69.4409 56.5889 69.4419 56.4893 c69.4434 56.374 69.4468 56.4385 69.4536 56.3203 C69.4331 56.3096 69.4321 56.3252 69.4233 56.3457 CF61.7783 56.3477 m61.7959 56.2754 61.7856 56.2207 61.7524 56.1572 c61.6997 56.0566 61.6401 56.0947 61.5874 56.0293 c61.5371 55.9668 61.4883 55.7529 61.5083 55.667 C61.3394 55.6094 61.499 55.4404 61.4932 55.3174 c61.4907 55.2676 61.4526 55.2119 61.4482 55.1563 c61.4385 55.0371 61.4653 54.8906 61.5161 54.7861 c61.6133 54.5879 61.7842 54.373 61.9512 54.2422 c62.1411 54.0938 62.3159 53.6699 62.5596 53.6113 c62.7368 53.5693 62.9434 53.7158 63.1025 53.7539 c63.2827 53.7969 63.5 53.7441 63.6738 53.8066 c63.8955 53.8857 63.8013 54.1436 63.9619 54.2568 c64.0664 54.3311 64.249 54.2666 64.3682 54.3076 c64.5679 54.377 64.707 54.5703 64.7441 54.7676 c64.7598 54.8496 64.7539 54.9121 64.7827 54.9883 c64.8213 55.0908 64.894 55.1484 64.873 55.2813 c64.8633 55.3428 64.8213 55.4014 64.8086 55.4678 c64.7866 55.582 64.8105 55.6914 64.8091 55.8047 c64.8062 56.0049 64.8257 56.1836 64.731 56.3545 c64.3511 57.042 63.4946 57.2832 62.7563 57.1436 c62.5767 57.1094 62.4697 57.0176 62.3145 56.9365 c62.144 56.8486 62.1758 56.7705 61.9961 56.7129 c61.915 56.6865 61.7803 56.5889 61.7813 56.4893 c61.7827 56.374 61.7861 56.4385 61.793 56.3203 C61.7725 56.3096 61.7715 56.3252 61.7627 56.3457 CF54.1182 56.3477 m54.1357 56.2754 54.1255 56.2207 54.0923 56.1572 c54.0396 56.0566 53.98 56.0947 53.9272 56.0293 c53.877 55.9668 53.8281 55.7529 53.8481 55.667 C53.6792 55.6094 53.8389 55.4404 53.833 55.3174 c53.8306 55.2676 53.7925 55.2119 53.7881 55.1563 c53.7783 55.0371 53.8052 54.8906 53.856 54.7861 c53.9531 54.5879 54.124 54.373 54.291 54.2422 c54.481 54.0938 54.6558 53.6699 54.8994 53.6113 c55.0767 53.5693 55.2832 53.7158 55.4424 53.7539 c55.6226 53.7969 55.8398 53.7441 56.0137 53.8066 c56.2354 53.8857 56.1411 54.1436 56.3018 54.2568 c56.4063 54.3311 56.5889 54.2666 56.708 54.3076 c56.9077 54.377 57.0469 54.5703 57.084 54.7676 c57.0996 54.8496 57.0938 54.9121 57.1226 54.9883 c57.1611 55.0908 57.2339 55.1484 57.2129 55.2813 c57.2031 55.3428 57.1611 55.4014 57.1484 55.4678 c57.1265 55.582 57.1504 55.6914 57.1489 55.8047 c57.146 56.0049 57.1655 56.1836 57.0708 56.3545 c56.6909 57.042 55.8345 57.2832 55.0962 57.1436 c54.9165 57.1094 54.8096 57.0176 54.6543 56.9365 c54.4839 56.8486 54.5156 56.7705 54.3359 56.7129 c54.2549 56.6865 54.1201 56.5889 54.1211 56.4893 c54.1226 56.374 54.126 56.4385 54.1328 56.3203 C54.1123 56.3096 54.1113 56.3252 54.1025 56.3457 CF46.4575 56.3477 m46.4751 56.2754 46.4648 56.2207 46.4316 56.1572 c46.3789 56.0566 46.3193 56.0947 46.2666 56.0293 c46.2163 55.9668 46.1675 55.7529 46.1875 55.667 C46.0186 55.6094 46.1782 55.4404 46.1724 55.3174 c46.1699 55.2676 46.1318 55.2119 46.1274 55.1563 c46.1177 55.0371 46.1445 54.8906 46.1953 54.7861 c46.2925 54.5879 46.4634 54.373 46.6304 54.2422 c46.8203 54.0938 46.9951 53.6699 47.2388 53.6113 c47.416 53.5693 47.6226 53.7158 47.7817 53.7539 c47.9619 53.7969 48.1792 53.7441 48.353 53.8066 c48.5747 53.8857 48.4805 54.1436 48.6411 54.2568 c48.7456 54.3311 48.9282 54.2666 49.0474 54.3076 c49.2471 54.377 49.3862 54.5703 49.4233 54.7676 c49.439 54.8496 49.4331 54.9121 49.4619 54.9883 c49.5005 55.0908 49.5732 55.1484 49.5522 55.2813 c49.5425 55.3428 49.5005 55.4014 49.4878 55.4678 c49.4658 55.582 49.4897 55.6914 49.4883 55.8047 c49.4854 56.0049 49.5049 56.1836 49.4102 56.3545 c49.0303 57.042 48.1738 57.2832 47.4355 57.1436 c47.2559 57.1094 47.1489 57.0176 46.9937 56.9365 c46.8232 56.8486 46.855 56.7705 46.6753 56.7129 c46.5942 56.6865 46.4595 56.5889 46.4604 56.4893 c46.4619 56.374 46.4653 56.4385 46.4722 56.3203 C46.4517 56.3096 46.4507 56.3252 46.4419 56.3457 CF38.7974 56.3477 m38.8149 56.2754 38.8047 56.2207 38.7715 56.1572 c38.7188 56.0566 38.6592 56.0947 38.6064 56.0293 c38.5562 55.9668 38.5073 55.7529 38.5273 55.667 C38.3584 55.6094 38.5181 55.4404 38.5122 55.3174 c38.5098 55.2676 38.4717 55.2119 38.4673 55.1563 c38.4575 55.0371 38.4844 54.8906 38.5352 54.7861 c38.6323 54.5879 38.8032 54.373 38.9702 54.2422 c39.1602 54.0938 39.335 53.6699 39.5786 53.6113 c39.7559 53.5693 39.9624 53.7158 40.1216 53.7539 c40.3018 53.7969 40.519 53.7441 40.6929 53.8066 c40.9146 53.8857 40.8203 54.1436 40.981 54.2568 c41.0854 54.3311 41.2681 54.2666 41.3872 54.3076 c41.5869 54.377 41.7261 54.5703 41.7632 54.7676 c41.7788 54.8496 41.7729 54.9121 41.8018 54.9883 c41.8403 55.0908 41.9131 55.1484 41.8921 55.2813 c41.8823 55.3428 41.8403 55.4014 41.8276 55.4678 c41.8057 55.582 41.8296 55.6914 41.8281 55.8047 c41.8252 56.0049 41.8447 56.1836 41.75 56.3545 c41.3701 57.042 40.5137 57.2832 39.7754 57.1436 c39.5957 57.1094 39.4888 57.0176 39.3335 56.9365 c39.1631 56.8486 39.1948 56.7705 39.0151 56.7129 c38.9341 56.6865 38.7993 56.5889 38.8003 56.4893 c38.8018 56.374 38.8052 56.4385 38.812 56.3203 C38.7915 56.3096 38.7905 56.3252 38.7817 56.3457 CF31.1367 56.3477 m31.1543 56.2754 31.144 56.2207 31.1108 56.1572 c31.0581 56.0566 30.9985 56.0947 30.9458 56.0293 c30.8955 55.9668 30.8467 55.7529 30.8667 55.667 C30.6978 55.6094 30.8574 55.4404 30.8516 55.3174 c30.8491 55.2676 30.811 55.2119 30.8066 55.1563 c30.7969 55.0371 30.8237 54.8906 30.8745 54.7861 c30.9717 54.5879 31.1426 54.373 31.3096 54.2422 c31.4995 54.0938 31.6743 53.6699 31.918 53.6113 c32.0952 53.5693 32.3018 53.7158 32.4609 53.7539 c32.6411 53.7969 32.8584 53.7441 33.0322 53.8066 c33.2539 53.8857 33.1597 54.1436 33.3203 54.2568 c33.4248 54.3311 33.6074 54.2666 33.7266 54.3076 c33.9263 54.377 34.0654 54.5703 34.1025 54.7676 c34.1182 54.8496 34.1123 54.9121 34.1411 54.9883 c34.1797 55.0908 34.2524 55.1484 34.2314 55.2813 c34.2217 55.3428 34.1797 55.4014 34.167 55.4678 c34.145 55.582 34.1689 55.6914 34.1675 55.8047 c34.1646 56.0049 34.1841 56.1836 34.0894 56.3545 c33.7095 57.042 32.853 57.2832 32.1147 57.1436 c31.9351 57.1094 31.8281 57.0176 31.6729 56.9365 c31.5024 56.8486 31.5342 56.7705 31.3545 56.7129 c31.2734 56.6865 31.1387 56.5889 31.1396 56.4893 c31.1411 56.374 31.1445 56.4385 31.1514 56.3203 C31.1309 56.3096 31.1299 56.3252 31.1211 56.3457 CF23.4766 56.3477 m23.4941 56.2754 23.4839 56.2207 23.4507 56.1572 c23.3979 56.0566 23.3384 56.0947 23.2856 56.0293 c23.2354 55.9668 23.1865 55.7529 23.2065 55.667 C23.0376 55.6094 23.1973 55.4404 23.1914 55.3174 c23.189 55.2676 23.1509 55.2119 23.1465 55.1563 c23.1367 55.0371 23.1636 54.8906 23.2144 54.7861 c23.3115 54.5879 23.4824 54.373 23.6494 54.2422 c23.8394 54.0938 24.0142 53.6699 24.2578 53.6113 c24.4351 53.5693 24.6416 53.7158 24.8008 53.7539 c24.981 53.7969 25.1982 53.7441 25.3721 53.8066 c25.5938 53.8857 25.4995 54.1436 25.6602 54.2568 c25.7646 54.3311 25.9473 54.2666 26.0664 54.3076 c26.2661 54.377 26.4053 54.5703 26.4424 54.7676 c26.458 54.8496 26.4521 54.9121 26.481 54.9883 c26.5195 55.0908 26.5923 55.1484 26.5713 55.2813 c26.5615 55.3428 26.5195 55.4014 26.5068 55.4678 c26.4849 55.582 26.5088 55.6914 26.5073 55.8047 c26.5044 56.0049 26.5239 56.1836 26.4292 56.3545 c26.0493 57.042 25.1929 57.2832 24.4546 57.1436 c24.2749 57.1094 24.168 57.0176 24.0127 56.9365 c23.8423 56.8486 23.874 56.7705 23.6943 56.7129 c23.6133 56.6865 23.4785 56.5889 23.4795 56.4893 c23.481 56.374 23.4844 56.4385 23.4912 56.3203 C23.4707 56.3096 23.4697 56.3252 23.4609 56.3457 CF15.8159 56.3477 m15.8335 56.2754 15.8232 56.2207 15.79 56.1572 c15.7373 56.0566 15.6777 56.0947 15.625 56.0293 c15.5747 55.9668 15.5259 55.7529 15.5459 55.667 C15.377 55.6094 15.5366 55.4404 15.5308 55.3174 c15.5283 55.2676 15.4902 55.2119 15.4858 55.1563 c15.4761 55.0371 15.5029 54.8906 15.5537 54.7861 c15.6509 54.5879 15.8218 54.373 15.9888 54.2422 c16.1787 54.0938 16.3535 53.6699 16.5972 53.6113 c16.7744 53.5693 16.981 53.7158 17.1401 53.7539 c17.3203 53.7969 17.5376 53.7441 17.7114 53.8066 c17.9331 53.8857 17.8389 54.1436 17.9995 54.2568 c18.104 54.3311 18.2866 54.2666 18.4058 54.3076 c18.6055 54.377 18.7446 54.5703 18.7817 54.7676 c18.7974 54.8496 18.7915 54.9121 18.8203 54.9883 c18.8589 55.0908 18.9316 55.1484 18.9106 55.2813 c18.9009 55.3428 18.8589 55.4014 18.8462 55.4678 c18.8242 55.582 18.8481 55.6914 18.8467 55.8047 c18.8438 56.0049 18.8633 56.1836 18.7686 56.3545 c18.3887 57.042 17.5322 57.2832 16.7939 57.1436 c16.6143 57.1094 16.5073 57.0176 16.3521 56.9365 c16.1816 56.8486 16.2134 56.7705 16.0337 56.7129 c15.9526 56.6865 15.8179 56.5889 15.8188 56.4893 c15.8203 56.374 15.8237 56.4385 15.8306 56.3203 C15.8101 56.3096 15.8091 56.3252 15.8003 56.3457 CF8.15576 56.3477 m8.17334 56.2754 8.16309 56.2207 8.12988 56.1572 c8.07715 56.0566 8.01758 56.0947 7.96484 56.0293 c7.91455 55.9668 7.86572 55.7529 7.88574 55.667 C7.7168 55.6094 7.87646 55.4404 7.87061 55.3174 c7.86816 55.2676 7.83008 55.2119 7.82568 55.1563 c7.81592 55.0371 7.84277 54.8906 7.89355 54.7861 c7.99072 54.5879 8.16162 54.373 8.32861 54.2422 c8.51855 54.0938 8.69336 53.6699 8.93701 53.6113 c9.11426 53.5693 9.3208 53.7158 9.47998 53.7539 c9.66016 53.7969 9.87744 53.7441 10.0513 53.8066 c10.2729 53.8857 10.1787 54.1436 10.3394 54.2568 c10.4438 54.3311 10.6265 54.2666 10.7456 54.3076 c10.9453 54.377 11.0845 54.5703 11.1216 54.7676 c11.1372 54.8496 11.1313 54.9121 11.1602 54.9883 c11.1987 55.0908 11.2715 55.1484 11.2505 55.2813 c11.2407 55.3428 11.1987 55.4014 11.186 55.4678 c11.1641 55.582 11.188 55.6914 11.1865 55.8047 c11.1836 56.0049 11.2031 56.1836 11.1084 56.3545 c10.7285 57.042 9.87207 57.2832 9.13379 57.1436 c8.9541 57.1094 8.84717 57.0176 8.69189 56.9365 c8.52148 56.8486 8.55322 56.7705 8.37354 56.7129 c8.29248 56.6865 8.15771 56.5889 8.15869 56.4893 c8.16016 56.374 8.16357 56.4385 8.17041 56.3203 C8.1499 56.3096 8.14893 56.3252 8.14014 56.3457 CF0.495117 56.3477 m0.512695 56.2754 0.502441 56.2207 0.469238 56.1572 c0.416504 56.0566 0.356934 56.0947 0.304199 56.0293 c0.253906 55.9668 0.205078 55.7529 0.225098 55.667 C0.056152 55.6094 0.215332 55.4404 0.209961 55.3174 c0.20752 55.2676 0.169434 55.2119 0.165039 55.1563 c0.155273 55.0371 0.182129 54.8906 0.23291 54.7861 c0.330078 54.5879 0.500977 54.373 0.667969 54.2422 c0.85791 54.0938 1.03271 53.6699 1.27637 53.6113 c1.45361 53.5693 1.66016 53.7158 1.81934 53.7539 c1.99951 53.7969 2.2168 53.7441 2.39063 53.8066 c2.6123 53.8857 2.51807 54.1436 2.67871 54.2568 c2.7832 54.3311 2.96582 54.2666 3.08496 54.3076 c3.28467 54.377 3.42383 54.5703 3.46094 54.7676 c3.47656 54.8496 3.4707 54.9121 3.49951 54.9883 c3.53809 55.0908 3.61084 55.1484 3.58984 55.2813 c3.58008 55.3428 3.53809 55.4014 3.52539 55.4678 c3.50342 55.582 3.52734 55.6914 3.52588 55.8047 c3.52295 56.0049 3.54248 56.1836 3.44775 56.3545 c3.06787 57.042 2.21143 57.2832 1.47314 57.1436 c1.29346 57.1094 1.18652 57.0176 1.03125 56.9365 c0.86084 56.8486 0.892578 56.7705 0.712891 56.7129 c0.631836 56.6865 0.49707 56.5889 0.498047 56.4893 c0.499512 56.374 0.50293 56.4385 0.509766 56.3203 C0.489258 56.3096 0.488281 56.3252 0.479492 56.3457 CF69.439 48.6953 m69.4565 48.623 69.4463 48.5684 69.4131 48.5049 c69.3604 48.4043 69.3008 48.4424 69.248 48.377 c69.1978 48.3145 69.1489 48.1006 69.1689 48.0146 C69 47.957 69.1592 47.7881 69.1538 47.665 c69.1514 47.6152 69.1133 47.5596 69.1089 47.5039 c69.0991 47.3848 69.126 47.2383 69.1768 47.1338 c69.2739 46.9355 69.4448 46.7207 69.6118 46.5898 c69.8018 46.4414 69.9766 46.0176 70.2202 45.959 c70.3975 45.917 70.604 46.0635 70.7632 46.1016 c70.9434 46.1445 71.1606 46.0918 71.3345 46.1543 c71.5562 46.2334 71.4619 46.4912 71.6226 46.6045 c71.7271 46.6787 71.9097 46.6143 72.0288 46.6553 c72.2285 46.7246 72.3677 46.918 72.4048 47.1152 c72.4204 47.1973 72.4146 47.2598 72.4434 47.3359 c72.4819 47.4385 72.5547 47.4961 72.5337 47.6289 c72.5239 47.6904 72.4819 47.749 72.4692 47.8154 c72.4473 47.9297 72.4712 48.0391 72.4697 48.1523 c72.4668 48.3525 72.4863 48.5313 72.3916 48.7021 c72.0117 49.3896 71.1553 49.6309 70.417 49.4912 c70.2373 49.457 70.1304 49.3652 69.9751 49.2842 c69.8047 49.1963 69.8364 49.1182 69.6567 49.0605 c69.5757 49.0342 69.4409 48.9365 69.4419 48.8369 c69.4434 48.7217 69.4468 48.7861 69.4536 48.668 C69.4331 48.6572 69.4321 48.6729 69.4233 48.6934 CF61.7783 48.6953 m61.7959 48.623 61.7856 48.5684 61.7524 48.5049 c61.6997 48.4043 61.6401 48.4424 61.5874 48.377 c61.5371 48.3145 61.4883 48.1006 61.5083 48.0146 C61.3394 47.957 61.499 47.7881 61.4932 47.665 c61.4907 47.6152 61.4526 47.5596 61.4482 47.5039 c61.4385 47.3848 61.4653 47.2383 61.5161 47.1338 c61.6133 46.9355 61.7842 46.7207 61.9512 46.5898 c62.1411 46.4414 62.3159 46.0176 62.5596 45.959 c62.7368 45.917 62.9434 46.0635 63.1025 46.1016 c63.2827 46.1445 63.5 46.0918 63.6738 46.1543 c63.8955 46.2334 63.8013 46.4912 63.9619 46.6045 c64.0664 46.6787 64.249 46.6143 64.3682 46.6553 c64.5679 46.7246 64.707 46.918 64.7441 47.1152 c64.7598 47.1973 64.7539 47.2598 64.7827 47.3359 c64.8213 47.4385 64.894 47.4961 64.873 47.6289 c64.8633 47.6904 64.8213 47.749 64.8086 47.8154 c64.7866 47.9297 64.8105 48.0391 64.8091 48.1523 c64.8062 48.3525 64.8257 48.5313 64.731 48.7021 c64.3511 49.3896 63.4946 49.6309 62.7563 49.4912 c62.5767 49.457 62.4697 49.3652 62.3145 49.2842 c62.144 49.1963 62.1758 49.1182 61.9961 49.0605 c61.915 49.0342 61.7803 48.9365 61.7813 48.8369 c61.7827 48.7217 61.7861 48.7861 61.793 48.668 C61.7725 48.6572 61.7715 48.6729 61.7627 48.6934 CF54.1182 48.6953 m54.1357 48.623 54.1255 48.5684 54.0923 48.5049 c54.0396 48.4043 53.98 48.4424 53.9272 48.377 c53.877 48.3145 53.8281 48.1006 53.8481 48.0146 C53.6792 47.957 53.8389 47.7881 53.833 47.665 c53.8306 47.6152 53.7925 47.5596 53.7881 47.5039 c53.7783 47.3848 53.8052 47.2383 53.856 47.1338 c53.9531 46.9355 54.124 46.7207 54.291 46.5898 c54.481 46.4414 54.6558 46.0176 54.8994 45.959 c55.0767 45.917 55.2832 46.0635 55.4424 46.1016 c55.6226 46.1445 55.8398 46.0918 56.0137 46.1543 c56.2354 46.2334 56.1411 46.4912 56.3018 46.6045 c56.4063 46.6787 56.5889 46.6143 56.708 46.6553 c56.9077 46.7246 57.0469 46.918 57.084 47.1152 c57.0996 47.1973 57.0938 47.2598 57.1226 47.3359 c57.1611 47.4385 57.2339 47.4961 57.2129 47.6289 c57.2031 47.6904 57.1611 47.749 57.1484 47.8154 c57.1265 47.9297 57.1504 48.0391 57.1489 48.1523 c57.146 48.3525 57.1655 48.5313 57.0708 48.7021 c56.6909 49.3896 55.8345 49.6309 55.0962 49.4912 c54.9165 49.457 54.8096 49.3652 54.6543 49.2842 c54.4839 49.1963 54.5156 49.1182 54.3359 49.0605 c54.2549 49.0342 54.1201 48.9365 54.1211 48.8369 c54.1226 48.7217 54.126 48.7861 54.1328 48.668 C54.1123 48.6572 54.1113 48.6729 54.1025 48.6934 CF46.4575 48.6953 m46.4751 48.623 46.4648 48.5684 46.4316 48.5049 c46.3789 48.4043 46.3193 48.4424 46.2666 48.377 c46.2163 48.3145 46.1675 48.1006 46.1875 48.0146 C46.0186 47.957 46.1782 47.7881 46.1724 47.665 c46.1699 47.6152 46.1318 47.5596 46.1274 47.5039 c46.1177 47.3848 46.1445 47.2383 46.1953 47.1338 c46.2925 46.9355 46.4634 46.7207 46.6304 46.5898 c46.8203 46.4414 46.9951 46.0176 47.2388 45.959 c47.416 45.917 47.6226 46.0635 47.7817 46.1016 c47.9619 46.1445 48.1792 46.0918 48.353 46.1543 c48.5747 46.2334 48.4805 46.4912 48.6411 46.6045 c48.7456 46.6787 48.9282 46.6143 49.0474 46.6553 c49.2471 46.7246 49.3862 46.918 49.4233 47.1152 c49.439 47.1973 49.4331 47.2598 49.4619 47.3359 c49.5005 47.4385 49.5732 47.4961 49.5522 47.6289 c49.5425 47.6904 49.5005 47.749 49.4878 47.8154 c49.4658 47.9297 49.4897 48.0391 49.4883 48.1523 c49.4854 48.3525 49.5049 48.5313 49.4102 48.7021 c49.0303 49.3896 48.1738 49.6309 47.4355 49.4912 c47.2559 49.457 47.1489 49.3652 46.9937 49.2842 c46.8232 49.1963 46.855 49.1182 46.6753 49.0605 c46.5942 49.0342 46.4595 48.9365 46.4604 48.8369 c46.4619 48.7217 46.4653 48.7861 46.4722 48.668 C46.4517 48.6572 46.4507 48.6729 46.4419 48.6934 CF38.7974 48.6953 m38.8149 48.623 38.8047 48.5684 38.7715 48.5049 c38.7188 48.4043 38.6592 48.4424 38.6064 48.377 c38.5562 48.3145 38.5073 48.1006 38.5273 48.0146 C38.3584 47.957 38.5181 47.7881 38.5122 47.665 c38.5098 47.6152 38.4717 47.5596 38.4673 47.5039 c38.4575 47.3848 38.4844 47.2383 38.5352 47.1338 c38.6323 46.9355 38.8032 46.7207 38.9702 46.5898 c39.1602 46.4414 39.335 46.0176 39.5786 45.959 c39.7559 45.917 39.9624 46.0635 40.1216 46.1016 c40.3018 46.1445 40.519 46.0918 40.6929 46.1543 c40.9146 46.2334 40.8203 46.4912 40.981 46.6045 c41.0854 46.6787 41.2681 46.6143 41.3872 46.6553 c41.5869 46.7246 41.7261 46.918 41.7632 47.1152 c41.7788 47.1973 41.7729 47.2598 41.8018 47.3359 c41.8403 47.4385 41.9131 47.4961 41.8921 47.6289 c41.8823 47.6904 41.8403 47.749 41.8276 47.8154 c41.8057 47.9297 41.8296 48.0391 41.8281 48.1523 c41.8252 48.3525 41.8447 48.5313 41.75 48.7021 c41.3701 49.3896 40.5137 49.6309 39.7754 49.4912 c39.5957 49.457 39.4888 49.3652 39.3335 49.2842 c39.1631 49.1963 39.1948 49.1182 39.0151 49.0605 c38.9341 49.0342 38.7993 48.9365 38.8003 48.8369 c38.8018 48.7217 38.8052 48.7861 38.812 48.668 C38.7915 48.6572 38.7905 48.6729 38.7817 48.6934 CF31.1367 48.6953 m31.1543 48.623 31.144 48.5684 31.1108 48.5049 c31.0581 48.4043 30.9985 48.4424 30.9458 48.377 c30.8955 48.3145 30.8467 48.1006 30.8667 48.0146 C30.6978 47.957 30.8574 47.7881 30.8516 47.665 c30.8491 47.6152 30.811 47.5596 30.8066 47.5039 c30.7969 47.3848 30.8237 47.2383 30.8745 47.1338 c30.9717 46.9355 31.1426 46.7207 31.3096 46.5898 c31.4995 46.4414 31.6743 46.0176 31.918 45.959 c32.0952 45.917 32.3018 46.0635 32.4609 46.1016 c32.6411 46.1445 32.8584 46.0918 33.0322 46.1543 c33.2539 46.2334 33.1597 46.4912 33.3203 46.6045 c33.4248 46.6787 33.6074 46.6143 33.7266 46.6553 c33.9263 46.7246 34.0654 46.918 34.1025 47.1152 c34.1182 47.1973 34.1123 47.2598 34.1411 47.3359 c34.1797 47.4385 34.2524 47.4961 34.2314 47.6289 c34.2217 47.6904 34.1797 47.749 34.167 47.8154 c34.145 47.9297 34.1689 48.0391 34.1675 48.1523 c34.1646 48.3525 34.1841 48.5313 34.0894 48.7021 c33.7095 49.3896 32.853 49.6309 32.1147 49.4912 c31.9351 49.457 31.8281 49.3652 31.6729 49.2842 c31.5024 49.1963 31.5342 49.1182 31.3545 49.0605 c31.2734 49.0342 31.1387 48.9365 31.1396 48.8369 c31.1411 48.7217 31.1445 48.7861 31.1514 48.668 C31.1309 48.6572 31.1299 48.6729 31.1211 48.6934 CF23.4766 48.6953 m23.4941 48.623 23.4839 48.5684 23.4507 48.5049 c23.3979 48.4043 23.3384 48.4424 23.2856 48.377 c23.2354 48.3145 23.1865 48.1006 23.2065 48.0146 C23.0376 47.957 23.1973 47.7881 23.1914 47.665 c23.189 47.6152 23.1509 47.5596 23.1465 47.5039 c23.1367 47.3848 23.1636 47.2383 23.2144 47.1338 c23.3115 46.9355 23.4824 46.7207 23.6494 46.5898 c23.8394 46.4414 24.0142 46.0176 24.2578 45.959 c24.4351 45.917 24.6416 46.0635 24.8008 46.1016 c24.981 46.1445 25.1982 46.0918 25.3721 46.1543 c25.5938 46.2334 25.4995 46.4912 25.6602 46.6045 c25.7646 46.6787 25.9473 46.6143 26.0664 46.6553 c26.2661 46.7246 26.4053 46.918 26.4424 47.1152 c26.458 47.1973 26.4521 47.2598 26.481 47.3359 c26.5195 47.4385 26.5923 47.4961 26.5713 47.6289 c26.5615 47.6904 26.5195 47.749 26.5068 47.8154 c26.4849 47.9297 26.5088 48.0391 26.5073 48.1523 c26.5044 48.3525 26.5239 48.5313 26.4292 48.7021 c26.0493 49.3896 25.1929 49.6309 24.4546 49.4912 c24.2749 49.457 24.168 49.3652 24.0127 49.2842 c23.8423 49.1963 23.874 49.1182 23.6943 49.0605 c23.6133 49.0342 23.4785 48.9365 23.4795 48.8369 c23.481 48.7217 23.4844 48.7861 23.4912 48.668 C23.4707 48.6572 23.4697 48.6729 23.4609 48.6934 CF15.8159 48.6953 m15.8335 48.623 15.8232 48.5684 15.79 48.5049 c15.7373 48.4043 15.6777 48.4424 15.625 48.377 c15.5747 48.3145 15.5259 48.1006 15.5459 48.0146 C15.377 47.957 15.5366 47.7881 15.5308 47.665 c15.5283 47.6152 15.4902 47.5596 15.4858 47.5039 c15.4761 47.3848 15.5029 47.2383 15.5537 47.1338 c15.6509 46.9355 15.8218 46.7207 15.9888 46.5898 c16.1787 46.4414 16.3535 46.0176 16.5972 45.959 c16.7744 45.917 16.981 46.0635 17.1401 46.1016 c17.3203 46.1445 17.5376 46.0918 17.7114 46.1543 c17.9331 46.2334 17.8389 46.4912 17.9995 46.6045 c18.104 46.6787 18.2866 46.6143 18.4058 46.6553 c18.6055 46.7246 18.7446 46.918 18.7817 47.1152 c18.7974 47.1973 18.7915 47.2598 18.8203 47.3359 c18.8589 47.4385 18.9316 47.4961 18.9106 47.6289 c18.9009 47.6904 18.8589 47.749 18.8462 47.8154 c18.8242 47.9297 18.8481 48.0391 18.8467 48.1523 c18.8438 48.3525 18.8633 48.5313 18.7686 48.7021 c18.3887 49.3896 17.5322 49.6309 16.7939 49.4912 c16.6143 49.457 16.5073 49.3652 16.3521 49.2842 c16.1816 49.1963 16.2134 49.1182 16.0337 49.0605 c15.9526 49.0342 15.8179 48.9365 15.8188 48.8369 c15.8203 48.7217 15.8237 48.7861 15.8306 48.668 C15.8101 48.6572 15.8091 48.6729 15.8003 48.6934 CF8.15576 48.6953 m8.17334 48.623 8.16309 48.5684 8.12988 48.5049 c8.07715 48.4043 8.01758 48.4424 7.96484 48.377 c7.91455 48.3145 7.86572 48.1006 7.88574 48.0146 C7.7168 47.957 7.87646 47.7881 7.87061 47.665 c7.86816 47.6152 7.83008 47.5596 7.82568 47.5039 c7.81592 47.3848 7.84277 47.2383 7.89355 47.1338 c7.99072 46.9355 8.16162 46.7207 8.32861 46.5898 c8.51855 46.4414 8.69336 46.0176 8.93701 45.959 c9.11426 45.917 9.3208 46.0635 9.47998 46.1016 c9.66016 46.1445 9.87744 46.0918 10.0513 46.1543 c10.2729 46.2334 10.1787 46.4912 10.3394 46.6045 c10.4438 46.6787 10.6265 46.6143 10.7456 46.6553 c10.9453 46.7246 11.0845 46.918 11.1216 47.1152 c11.1372 47.1973 11.1313 47.2598 11.1602 47.3359 c11.1987 47.4385 11.2715 47.4961 11.2505 47.6289 c11.2407 47.6904 11.1987 47.749 11.186 47.8154 c11.1641 47.9297 11.188 48.0391 11.1865 48.1523 c11.1836 48.3525 11.2031 48.5313 11.1084 48.7021 c10.7285 49.3896 9.87207 49.6309 9.13379 49.4912 c8.9541 49.457 8.84717 49.3652 8.69189 49.2842 c8.52148 49.1963 8.55322 49.1182 8.37354 49.0605 c8.29248 49.0342 8.15771 48.9365 8.15869 48.8369 c8.16016 48.7217 8.16357 48.7861 8.17041 48.668 C8.1499 48.6572 8.14893 48.6729 8.14014 48.6934 CF0.495117 48.6953 m0.512695 48.623 0.502441 48.5684 0.469238 48.5049 c0.416504 48.4043 0.356934 48.4424 0.304199 48.377 c0.253906 48.3145 0.205078 48.1006 0.225098 48.0146 C0.056152 47.957 0.215332 47.7881 0.209961 47.665 c0.20752 47.6152 0.169434 47.5596 0.165039 47.5039 c0.155273 47.3848 0.182129 47.2383 0.23291 47.1338 c0.330078 46.9355 0.500977 46.7207 0.667969 46.5898 c0.85791 46.4414 1.03271 46.0176 1.27637 45.959 c1.45361 45.917 1.66016 46.0635 1.81934 46.1016 c1.99951 46.1445 2.2168 46.0918 2.39063 46.1543 c2.6123 46.2334 2.51807 46.4912 2.67871 46.6045 c2.7832 46.6787 2.96582 46.6143 3.08496 46.6553 c3.28467 46.7246 3.42383 46.918 3.46094 47.1152 c3.47656 47.1973 3.4707 47.2598 3.49951 47.3359 c3.53809 47.4385 3.61084 47.4961 3.58984 47.6289 c3.58008 47.6904 3.53809 47.749 3.52539 47.8154 c3.50342 47.9297 3.52734 48.0391 3.52588 48.1523 c3.52295 48.3525 3.54248 48.5313 3.44775 48.7021 c3.06787 49.3896 2.21143 49.6309 1.47314 49.4912 c1.29346 49.457 1.18652 49.3652 1.03125 49.2842 c0.86084 49.1963 0.892578 49.1182 0.712891 49.0605 c0.631836 49.0342 0.49707 48.9365 0.498047 48.8369 c0.499512 48.7217 0.50293 48.7861 0.509766 48.668 C0.489258 48.6572 0.488281 48.6729 0.479492 48.6934 CF69.439 41.042 m69.4565 40.9697 69.4463 40.915 69.4131 40.8516 c69.3604 40.751 69.3008 40.7891 69.248 40.7236 c69.1978 40.6611 69.1489 40.4473 69.1689 40.3613 C69 40.3037 69.1592 40.1348 69.1538 40.0117 c69.1514 39.9619 69.1133 39.9063 69.1089 39.8506 c69.0991 39.7314 69.126 39.585 69.1768 39.4805 c69.2739 39.2822 69.4448 39.0674 69.6118 38.9365 c69.8018 38.7881 69.9766 38.3643 70.2202 38.3057 c70.3975 38.2637 70.604 38.4102 70.7632 38.4482 c70.9434 38.4912 71.1606 38.4385 71.3345 38.501 c71.5562 38.5801 71.4619 38.8379 71.6226 38.9512 c71.7271 39.0254 71.9097 38.9609 72.0288 39.002 c72.2285 39.0713 72.3677 39.2646 72.4048 39.4619 c72.4204 39.5439 72.4146 39.6064 72.4434 39.6826 c72.4819 39.7852 72.5547 39.8428 72.5337 39.9756 c72.5239 40.0371 72.4819 40.0957 72.4692 40.1621 c72.4473 40.2764 72.4712 40.3857 72.4697 40.499 c72.4668 40.6992 72.4863 40.8779 72.3916 41.0488 c72.0117 41.7363 71.1553 41.9775 70.417 41.8379 c70.2373 41.8037 70.1304 41.7119 69.9751 41.6309 c69.8047 41.543 69.8364 41.4648 69.6567 41.4072 c69.5757 41.3809 69.4409 41.2832 69.4419 41.1836 c69.4434 41.0684 69.4468 41.1328 69.4536 41.0146 C69.4331 41.0039 69.4321 41.0195 69.4233 41.04 CF61.7783 41.042 m61.7959 40.9697 61.7856 40.915 61.7524 40.8516 c61.6997 40.751 61.6401 40.7891 61.5874 40.7236 c61.5371 40.6611 61.4883 40.4473 61.5083 40.3613 C61.3394 40.3037 61.499 40.1348 61.4932 40.0117 c61.4907 39.9619 61.4526 39.9063 61.4482 39.8506 c61.4385 39.7314 61.4653 39.585 61.5161 39.4805 c61.6133 39.2822 61.7842 39.0674 61.9512 38.9365 c62.1411 38.7881 62.3159 38.3643 62.5596 38.3057 c62.7368 38.2637 62.9434 38.4102 63.1025 38.4482 c63.2827 38.4912 63.5 38.4385 63.6738 38.501 c63.8955 38.5801 63.8013 38.8379 63.9619 38.9512 c64.0664 39.0254 64.249 38.9609 64.3682 39.002 c64.5679 39.0713 64.707 39.2646 64.7441 39.4619 c64.7598 39.5439 64.7539 39.6064 64.7827 39.6826 c64.8213 39.7852 64.894 39.8428 64.873 39.9756 c64.8633 40.0371 64.8213 40.0957 64.8086 40.1621 c64.7866 40.2764 64.8105 40.3857 64.8091 40.499 c64.8062 40.6992 64.8257 40.8779 64.731 41.0488 c64.3511 41.7363 63.4946 41.9775 62.7563 41.8379 c62.5767 41.8037 62.4697 41.7119 62.3145 41.6309 c62.144 41.543 62.1758 41.4648 61.9961 41.4072 c61.915 41.3809 61.7803 41.2832 61.7813 41.1836 c61.7827 41.0684 61.7861 41.1328 61.793 41.0146 C61.7725 41.0039 61.7715 41.0195 61.7627 41.04 CF54.1182 41.042 m54.1357 40.9697 54.1255 40.915 54.0923 40.8516 c54.0396 40.751 53.98 40.7891 53.9272 40.7236 c53.877 40.6611 53.8281 40.4473 53.8481 40.3613 C53.6792 40.3037 53.8389 40.1348 53.833 40.0117 c53.8306 39.9619 53.7925 39.9063 53.7881 39.8506 c53.7783 39.7314 53.8052 39.585 53.856 39.4805 c53.9531 39.2822 54.124 39.0674 54.291 38.9365 c54.481 38.7881 54.6558 38.3643 54.8994 38.3057 c55.0767 38.2637 55.2832 38.4102 55.4424 38.4482 c55.6226 38.4912 55.8398 38.4385 56.0137 38.501 c56.2354 38.5801 56.1411 38.8379 56.3018 38.9512 c56.4063 39.0254 56.5889 38.9609 56.708 39.002 c56.9077 39.0713 57.0469 39.2646 57.084 39.4619 c57.0996 39.5439 57.0938 39.6064 57.1226 39.6826 c57.1611 39.7852 57.2339 39.8428 57.2129 39.9756 c57.2031 40.0371 57.1611 40.0957 57.1484 40.1621 c57.1265 40.2764 57.1504 40.3857 57.1489 40.499 c57.146 40.6992 57.1655 40.8779 57.0708 41.0488 c56.6909 41.7363 55.8345 41.9775 55.0962 41.8379 c54.9165 41.8037 54.8096 41.7119 54.6543 41.6309 c54.4839 41.543 54.5156 41.4648 54.3359 41.4072 c54.2549 41.3809 54.1201 41.2832 54.1211 41.1836 c54.1226 41.0684 54.126 41.1328 54.1328 41.0146 C54.1123 41.0039 54.1113 41.0195 54.1025 41.04 CF46.4575 41.042 m46.4751 40.9697 46.4648 40.915 46.4316 40.8516 c46.3789 40.751 46.3193 40.7891 46.2666 40.7236 c46.2163 40.6611 46.1675 40.4473 46.1875 40.3613 C46.0186 40.3037 46.1782 40.1348 46.1724 40.0117 c46.1699 39.9619 46.1318 39.9063 46.1274 39.8506 c46.1177 39.7314 46.1445 39.585 46.1953 39.4805 c46.2925 39.2822 46.4634 39.0674 46.6304 38.9365 c46.8203 38.7881 46.9951 38.3643 47.2388 38.3057 c47.416 38.2637 47.6226 38.4102 47.7817 38.4482 c47.9619 38.4912 48.1792 38.4385 48.353 38.501 c48.5747 38.5801 48.4805 38.8379 48.6411 38.9512 c48.7456 39.0254 48.9282 38.9609 49.0474 39.002 c49.2471 39.0713 49.3862 39.2646 49.4233 39.4619 c49.439 39.5439 49.4331 39.6064 49.4619 39.6826 c49.5005 39.7852 49.5732 39.8428 49.5522 39.9756 c49.5425 40.0371 49.5005 40.0957 49.4878 40.1621 c49.4658 40.2764 49.4897 40.3857 49.4883 40.499 c49.4854 40.6992 49.5049 40.8779 49.4102 41.0488 c49.0303 41.7363 48.1738 41.9775 47.4355 41.8379 c47.2559 41.8037 47.1489 41.7119 46.9937 41.6309 c46.8232 41.543 46.855 41.4648 46.6753 41.4072 c46.5942 41.3809 46.4595 41.2832 46.4604 41.1836 c46.4619 41.0684 46.4653 41.1328 46.4722 41.0146 C46.4517 41.0039 46.4507 41.0195 46.4419 41.04 CF38.7974 41.042 m38.8149 40.9697 38.8047 40.915 38.7715 40.8516 c38.7188 40.751 38.6592 40.7891 38.6064 40.7236 c38.5562 40.6611 38.5073 40.4473 38.5273 40.3613 C38.3584 40.3037 38.5181 40.1348 38.5122 40.0117 c38.5098 39.9619 38.4717 39.9063 38.4673 39.8506 c38.4575 39.7314 38.4844 39.585 38.5352 39.4805 c38.6323 39.2822 38.8032 39.0674 38.9702 38.9365 c39.1602 38.7881 39.335 38.3643 39.5786 38.3057 c39.7559 38.2637 39.9624 38.4102 40.1216 38.4482 c40.3018 38.4912 40.519 38.4385 40.6929 38.501 c40.9146 38.5801 40.8203 38.8379 40.981 38.9512 c41.0854 39.0254 41.2681 38.9609 41.3872 39.002 c41.5869 39.0713 41.7261 39.2646 41.7632 39.4619 c41.7788 39.5439 41.7729 39.6064 41.8018 39.6826 c41.8403 39.7852 41.9131 39.8428 41.8921 39.9756 c41.8823 40.0371 41.8403 40.0957 41.8276 40.1621 c41.8057 40.2764 41.8296 40.3857 41.8281 40.499 c41.8252 40.6992 41.8447 40.8779 41.75 41.0488 c41.3701 41.7363 40.5137 41.9775 39.7754 41.8379 c39.5957 41.8037 39.4888 41.7119 39.3335 41.6309 c39.1631 41.543 39.1948 41.4648 39.0151 41.4072 c38.9341 41.3809 38.7993 41.2832 38.8003 41.1836 c38.8018 41.0684 38.8052 41.1328 38.812 41.0146 C38.7915 41.0039 38.7905 41.0195 38.7817 41.04 CF31.1367 41.042 m31.1543 40.9697 31.144 40.915 31.1108 40.8516 c31.0581 40.751 30.9985 40.7891 30.9458 40.7236 c30.8955 40.6611 30.8467 40.4473 30.8667 40.3613 C30.6978 40.3037 30.8574 40.1348 30.8516 40.0117 c30.8491 39.9619 30.811 39.9063 30.8066 39.8506 c30.7969 39.7314 30.8237 39.585 30.8745 39.4805 c30.9717 39.2822 31.1426 39.0674 31.3096 38.9365 c31.4995 38.7881 31.6743 38.3643 31.918 38.3057 c32.0952 38.2637 32.3018 38.4102 32.4609 38.4482 c32.6411 38.4912 32.8584 38.4385 33.0322 38.501 c33.2539 38.5801 33.1597 38.8379 33.3203 38.9512 c33.4248 39.0254 33.6074 38.9609 33.7266 39.002 c33.9263 39.0713 34.0654 39.2646 34.1025 39.4619 c34.1182 39.5439 34.1123 39.6064 34.1411 39.6826 c34.1797 39.7852 34.2524 39.8428 34.2314 39.9756 c34.2217 40.0371 34.1797 40.0957 34.167 40.1621 c34.145 40.2764 34.1689 40.3857 34.1675 40.499 c34.1646 40.6992 34.1841 40.8779 34.0894 41.0488 c33.7095 41.7363 32.853 41.9775 32.1147 41.8379 c31.9351 41.8037 31.8281 41.7119 31.6729 41.6309 c31.5024 41.543 31.5342 41.4648 31.3545 41.4072 c31.2734 41.3809 31.1387 41.2832 31.1396 41.1836 c31.1411 41.0684 31.1445 41.1328 31.1514 41.0146 C31.1309 41.0039 31.1299 41.0195 31.1211 41.04 CF23.4766 41.042 m23.4941 40.9697 23.4839 40.915 23.4507 40.8516 c23.3979 40.751 23.3384 40.7891 23.2856 40.7236 c23.2354 40.6611 23.1865 40.4473 23.2065 40.3613 C23.0376 40.3037 23.1973 40.1348 23.1914 40.0117 c23.189 39.9619 23.1509 39.9063 23.1465 39.8506 c23.1367 39.7314 23.1636 39.585 23.2144 39.4805 c23.3115 39.2822 23.4824 39.0674 23.6494 38.9365 c23.8394 38.7881 24.0142 38.3643 24.2578 38.3057 c24.4351 38.2637 24.6416 38.4102 24.8008 38.4482 c24.981 38.4912 25.1982 38.4385 25.3721 38.501 c25.5938 38.5801 25.4995 38.8379 25.6602 38.9512 c25.7646 39.0254 25.9473 38.9609 26.0664 39.002 c26.2661 39.0713 26.4053 39.2646 26.4424 39.4619 c26.458 39.5439 26.4521 39.6064 26.481 39.6826 c26.5195 39.7852 26.5923 39.8428 26.5713 39.9756 c26.5615 40.0371 26.5195 40.0957 26.5068 40.1621 c26.4849 40.2764 26.5088 40.3857 26.5073 40.499 c26.5044 40.6992 26.5239 40.8779 26.4292 41.0488 c26.0493 41.7363 25.1929 41.9775 24.4546 41.8379 c24.2749 41.8037 24.168 41.7119 24.0127 41.6309 c23.8423 41.543 23.874 41.4648 23.6943 41.4072 c23.6133 41.3809 23.4785 41.2832 23.4795 41.1836 c23.481 41.0684 23.4844 41.1328 23.4912 41.0146 C23.4707 41.0039 23.4697 41.0195 23.4609 41.04 CF15.8159 41.042 m15.8335 40.9697 15.8232 40.915 15.79 40.8516 c15.7373 40.751 15.6777 40.7891 15.625 40.7236 c15.5747 40.6611 15.5259 40.4473 15.5459 40.3613 C15.377 40.3037 15.5366 40.1348 15.5308 40.0117 c15.5283 39.9619 15.4902 39.9063 15.4858 39.8506 c15.4761 39.7314 15.5029 39.585 15.5537 39.4805 c15.6509 39.2822 15.8218 39.0674 15.9888 38.9365 c16.1787 38.7881 16.3535 38.3643 16.5972 38.3057 c16.7744 38.2637 16.981 38.4102 17.1401 38.4482 c17.3203 38.4912 17.5376 38.4385 17.7114 38.501 c17.9331 38.5801 17.8389 38.8379 17.9995 38.9512 c18.104 39.0254 18.2866 38.9609 18.4058 39.002 c18.6055 39.0713 18.7446 39.2646 18.7817 39.4619 c18.7974 39.5439 18.7915 39.6064 18.8203 39.6826 c18.8589 39.7852 18.9316 39.8428 18.9106 39.9756 c18.9009 40.0371 18.8589 40.0957 18.8462 40.1621 c18.8242 40.2764 18.8481 40.3857 18.8467 40.499 c18.8438 40.6992 18.8633 40.8779 18.7686 41.0488 c18.3887 41.7363 17.5322 41.9775 16.7939 41.8379 c16.6143 41.8037 16.5073 41.7119 16.3521 41.6309 c16.1816 41.543 16.2134 41.4648 16.0337 41.4072 c15.9526 41.3809 15.8179 41.2832 15.8188 41.1836 c15.8203 41.0684 15.8237 41.1328 15.8306 41.0146 C15.8101 41.0039 15.8091 41.0195 15.8003 41.04 CF8.15576 41.042 m8.17334 40.9697 8.16309 40.915 8.12988 40.8516 c8.07715 40.751 8.01758 40.7891 7.96484 40.7236 c7.91455 40.6611 7.86572 40.4473 7.88574 40.3613 C7.7168 40.3037 7.87646 40.1348 7.87061 40.0117 c7.86816 39.9619 7.83008 39.9063 7.82568 39.8506 c7.81592 39.7314 7.84277 39.585 7.89355 39.4805 c7.99072 39.2822 8.16162 39.0674 8.32861 38.9365 c8.51855 38.7881 8.69336 38.3643 8.93701 38.3057 c9.11426 38.2637 9.3208 38.4102 9.47998 38.4482 c9.66016 38.4912 9.87744 38.4385 10.0513 38.501 c10.2729 38.5801 10.1787 38.8379 10.3394 38.9512 c10.4438 39.0254 10.6265 38.9609 10.7456 39.002 c10.9453 39.0713 11.0845 39.2646 11.1216 39.4619 c11.1372 39.5439 11.1313 39.6064 11.1602 39.6826 c11.1987 39.7852 11.2715 39.8428 11.2505 39.9756 c11.2407 40.0371 11.1987 40.0957 11.186 40.1621 c11.1641 40.2764 11.188 40.3857 11.1865 40.499 c11.1836 40.6992 11.2031 40.8779 11.1084 41.0488 c10.7285 41.7363 9.87207 41.9775 9.13379 41.8379 c8.9541 41.8037 8.84717 41.7119 8.69189 41.6309 c8.52148 41.543 8.55322 41.4648 8.37354 41.4072 c8.29248 41.3809 8.15771 41.2832 8.15869 41.1836 c8.16016 41.0684 8.16357 41.1328 8.17041 41.0146 C8.1499 41.0039 8.14893 41.0195 8.14014 41.04 CF0.495117 41.042 m0.512695 40.9697 0.502441 40.915 0.469238 40.8516 c0.416504 40.751 0.356934 40.7891 0.304199 40.7236 c0.253906 40.6611 0.205078 40.4473 0.225098 40.3613 C0.056152 40.3037 0.215332 40.1348 0.209961 40.0117 c0.20752 39.9619 0.169434 39.9063 0.165039 39.8506 c0.155273 39.7314 0.182129 39.585 0.23291 39.4805 c0.330078 39.2822 0.500977 39.0674 0.667969 38.9365 c0.85791 38.7881 1.03271 38.3643 1.27637 38.3057 c1.45361 38.2637 1.66016 38.4102 1.81934 38.4482 c1.99951 38.4912 2.2168 38.4385 2.39063 38.501 c2.6123 38.5801 2.51807 38.8379 2.67871 38.9512 c2.7832 39.0254 2.96582 38.9609 3.08496 39.002 c3.28467 39.0713 3.42383 39.2646 3.46094 39.4619 c3.47656 39.5439 3.4707 39.6064 3.49951 39.6826 c3.53809 39.7852 3.61084 39.8428 3.58984 39.9756 c3.58008 40.0371 3.53809 40.0957 3.52539 40.1621 c3.50342 40.2764 3.52734 40.3857 3.52588 40.499 c3.52295 40.6992 3.54248 40.8779 3.44775 41.0488 c3.06787 41.7363 2.21143 41.9775 1.47314 41.8379 c1.29346 41.8037 1.18652 41.7119 1.03125 41.6309 c0.86084 41.543 0.892578 41.4648 0.712891 41.4072 c0.631836 41.3809 0.49707 41.2832 0.498047 41.1836 c0.499512 41.0684 0.50293 41.1328 0.509766 41.0146 C0.489258 41.0039 0.488281 41.0195 0.479492 41.04 CF69.439 33.3896 m69.4565 33.3174 69.4463 33.2627 69.4131 33.1992 c69.3604 33.0986 69.3008 33.1367 69.248 33.0713 c69.1978 33.0088 69.1489 32.7949 69.1689 32.709 C69 32.6514 69.1592 32.4824 69.1538 32.3594 c69.1514 32.3096 69.1133 32.2539 69.1089 32.1982 c69.0991 32.0791 69.126 31.9326 69.1768 31.8281 c69.2739 31.6299 69.4448 31.415 69.6118 31.2842 c69.8018 31.1357 69.9766 30.7119 70.2202 30.6533 c70.3975 30.6113 70.604 30.7578 70.7632 30.7959 c70.9434 30.8389 71.1606 30.7861 71.3345 30.8486 c71.5562 30.9277 71.4619 31.1855 71.6226 31.2988 c71.7271 31.373 71.9097 31.3086 72.0288 31.3496 c72.2285 31.4189 72.3677 31.6123 72.4048 31.8096 c72.4204 31.8916 72.4146 31.9541 72.4434 32.0303 c72.4819 32.1328 72.5547 32.1904 72.5337 32.3232 c72.5239 32.3848 72.4819 32.4434 72.4692 32.5098 c72.4473 32.624 72.4712 32.7334 72.4697 32.8467 c72.4668 33.0469 72.4863 33.2256 72.3916 33.3965 c72.0117 34.084 71.1553 34.3252 70.417 34.1855 c70.2373 34.1514 70.1304 34.0596 69.9751 33.9785 c69.8047 33.8906 69.8364 33.8125 69.6567 33.7549 c69.5757 33.7285 69.4409 33.6309 69.4419 33.5313 c69.4434 33.416 69.4468 33.4805 69.4536 33.3623 C69.4331 33.3516 69.4321 33.3672 69.4233 33.3877 CF61.7783 33.3896 m61.7959 33.3174 61.7856 33.2627 61.7524 33.1992 c61.6997 33.0986 61.6401 33.1367 61.5874 33.0713 c61.5371 33.0088 61.4883 32.7949 61.5083 32.709 C61.3394 32.6514 61.499 32.4824 61.4932 32.3594 c61.4907 32.3096 61.4526 32.2539 61.4482 32.1982 c61.4385 32.0791 61.4653 31.9326 61.5161 31.8281 c61.6133 31.6299 61.7842 31.415 61.9512 31.2842 c62.1411 31.1357 62.3159 30.7119 62.5596 30.6533 c62.7368 30.6113 62.9434 30.7578 63.1025 30.7959 c63.2827 30.8389 63.5 30.7861 63.6738 30.8486 c63.8955 30.9277 63.8013 31.1855 63.9619 31.2988 c64.0664 31.373 64.249 31.3086 64.3682 31.3496 c64.5679 31.4189 64.707 31.6123 64.7441 31.8096 c64.7598 31.8916 64.7539 31.9541 64.7827 32.0303 c64.8213 32.1328 64.894 32.1904 64.873 32.3232 c64.8633 32.3848 64.8213 32.4434 64.8086 32.5098 c64.7866 32.624 64.8105 32.7334 64.8091 32.8467 c64.8062 33.0469 64.8257 33.2256 64.731 33.3965 c64.3511 34.084 63.4946 34.3252 62.7563 34.1855 c62.5767 34.1514 62.4697 34.0596 62.3145 33.9785 c62.144 33.8906 62.1758 33.8125 61.9961 33.7549 c61.915 33.7285 61.7803 33.6309 61.7813 33.5313 c61.7827 33.416 61.7861 33.4805 61.793 33.3623 C61.7725 33.3516 61.7715 33.3672 61.7627 33.3877 CF54.1182 33.3896 m54.1357 33.3174 54.1255 33.2627 54.0923 33.1992 c54.0396 33.0986 53.98 33.1367 53.9272 33.0713 c53.877 33.0088 53.8281 32.7949 53.8481 32.709 C53.6792 32.6514 53.8389 32.4824 53.833 32.3594 c53.8306 32.3096 53.7925 32.2539 53.7881 32.1982 c53.7783 32.0791 53.8052 31.9326 53.856 31.8281 c53.9531 31.6299 54.124 31.415 54.291 31.2842 c54.481 31.1357 54.6558 30.7119 54.8994 30.6533 c55.0767 30.6113 55.2832 30.7578 55.4424 30.7959 c55.6226 30.8389 55.8398 30.7861 56.0137 30.8486 c56.2354 30.9277 56.1411 31.1855 56.3018 31.2988 c56.4063 31.373 56.5889 31.3086 56.708 31.3496 c56.9077 31.4189 57.0469 31.6123 57.084 31.8096 c57.0996 31.8916 57.0938 31.9541 57.1226 32.0303 c57.1611 32.1328 57.2339 32.1904 57.2129 32.3232 c57.2031 32.3848 57.1611 32.4434 57.1484 32.5098 c57.1265 32.624 57.1504 32.7334 57.1489 32.8467 c57.146 33.0469 57.1655 33.2256 57.0708 33.3965 c56.6909 34.084 55.8345 34.3252 55.0962 34.1855 c54.9165 34.1514 54.8096 34.0596 54.6543 33.9785 c54.4839 33.8906 54.5156 33.8125 54.3359 33.7549 c54.2549 33.7285 54.1201 33.6309 54.1211 33.5313 c54.1226 33.416 54.126 33.4805 54.1328 33.3623 C54.1123 33.3516 54.1113 33.3672 54.1025 33.3877 CF%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR46.4575 33.3896 m46.4751 33.3174 46.4648 33.2627 46.4316 33.1992 c46.3789 33.0986 46.3193 33.1367 46.2666 33.0713 c46.2163 33.0088 46.1675 32.7949 46.1875 32.709 C46.0186 32.6514 46.1782 32.4824 46.1724 32.3594 c46.1699 32.3096 46.1318 32.2539 46.1274 32.1982 c46.1177 32.0791 46.1445 31.9326 46.1953 31.8281 c46.2925 31.6299 46.4634 31.415 46.6304 31.2842 c46.8203 31.1357 46.9951 30.7119 47.2388 30.6533 c47.416 30.6113 47.6226 30.7578 47.7817 30.7959 c47.9619 30.8389 48.1792 30.7861 48.353 30.8486 c48.5747 30.9277 48.4805 31.1855 48.6411 31.2988 c48.7456 31.373 48.9282 31.3086 49.0474 31.3496 c49.2471 31.4189 49.3862 31.6123 49.4233 31.8096 c49.439 31.8916 49.4331 31.9541 49.4619 32.0303 c49.5005 32.1328 49.5732 32.1904 49.5522 32.3232 c49.5425 32.3848 49.5005 32.4434 49.4878 32.5098 c49.4658 32.624 49.4897 32.7334 49.4883 32.8467 c49.4854 33.0469 49.5049 33.2256 49.4102 33.3965 c49.0303 34.084 48.1738 34.3252 47.4355 34.1855 c47.2559 34.1514 47.1489 34.0596 46.9937 33.9785 c46.8232 33.8906 46.855 33.8125 46.6753 33.7549 c46.5942 33.7285 46.4595 33.6309 46.4604 33.5313 c46.4619 33.416 46.4653 33.4805 46.4722 33.3623 C46.4517 33.3516 46.4507 33.3672 46.4419 33.3877 CF38.7974 33.3896 m38.8149 33.3174 38.8047 33.2627 38.7715 33.1992 c38.7188 33.0986 38.6592 33.1367 38.6064 33.0713 c38.5562 33.0088 38.5073 32.7949 38.5273 32.709 C38.3584 32.6514 38.5181 32.4824 38.5122 32.3594 c38.5098 32.3096 38.4717 32.2539 38.4673 32.1982 c38.4575 32.0791 38.4844 31.9326 38.5352 31.8281 c38.6323 31.6299 38.8032 31.415 38.9702 31.2842 c39.1602 31.1357 39.335 30.7119 39.5786 30.6533 c39.7559 30.6113 39.9624 30.7578 40.1216 30.7959 c40.3018 30.8389 40.519 30.7861 40.6929 30.8486 c40.9146 30.9277 40.8203 31.1855 40.981 31.2988 c41.0854 31.373 41.2681 31.3086 41.3872 31.3496 c41.5869 31.4189 41.7261 31.6123 41.7632 31.8096 c41.7788 31.8916 41.7729 31.9541 41.8018 32.0303 c41.8403 32.1328 41.9131 32.1904 41.8921 32.3232 c41.8823 32.3848 41.8403 32.4434 41.8276 32.5098 c41.8057 32.624 41.8296 32.7334 41.8281 32.8467 c41.8252 33.0469 41.8447 33.2256 41.75 33.3965 c41.3701 34.084 40.5137 34.3252 39.7754 34.1855 c39.5957 34.1514 39.4888 34.0596 39.3335 33.9785 c39.1631 33.8906 39.1948 33.8125 39.0151 33.7549 c38.9341 33.7285 38.7993 33.6309 38.8003 33.5313 c38.8018 33.416 38.8052 33.4805 38.812 33.3623 C38.7915 33.3516 38.7905 33.3672 38.7817 33.3877 CF31.1367 33.3896 m31.1543 33.3174 31.144 33.2627 31.1108 33.1992 c31.0581 33.0986 30.9985 33.1367 30.9458 33.0713 c30.8955 33.0088 30.8467 32.7949 30.8667 32.709 C30.6978 32.6514 30.8574 32.4824 30.8516 32.3594 c30.8491 32.3096 30.811 32.2539 30.8066 32.1982 c30.7969 32.0791 30.8237 31.9326 30.8745 31.8281 c30.9717 31.6299 31.1426 31.415 31.3096 31.2842 c31.4995 31.1357 31.6743 30.7119 31.918 30.6533 c32.0952 30.6113 32.3018 30.7578 32.4609 30.7959 c32.6411 30.8389 32.8584 30.7861 33.0322 30.8486 c33.2539 30.9277 33.1597 31.1855 33.3203 31.2988 c33.4248 31.373 33.6074 31.3086 33.7266 31.3496 c33.9263 31.4189 34.0654 31.6123 34.1025 31.8096 c34.1182 31.8916 34.1123 31.9541 34.1411 32.0303 c34.1797 32.1328 34.2524 32.1904 34.2314 32.3232 c34.2217 32.3848 34.1797 32.4434 34.167 32.5098 c34.145 32.624 34.1689 32.7334 34.1675 32.8467 c34.1646 33.0469 34.1841 33.2256 34.0894 33.3965 c33.7095 34.084 32.853 34.3252 32.1147 34.1855 c31.9351 34.1514 31.8281 34.0596 31.6729 33.9785 c31.5024 33.8906 31.5342 33.8125 31.3545 33.7549 c31.2734 33.7285 31.1387 33.6309 31.1396 33.5313 c31.1411 33.416 31.1445 33.4805 31.1514 33.3623 C31.1309 33.3516 31.1299 33.3672 31.1211 33.3877 CF23.4766 33.3896 m23.4941 33.3174 23.4839 33.2627 23.4507 33.1992 c23.3979 33.0986 23.3384 33.1367 23.2856 33.0713 c23.2354 33.0088 23.1865 32.7949 23.2065 32.709 C23.0376 32.6514 23.1973 32.4824 23.1914 32.3594 c23.189 32.3096 23.1509 32.2539 23.1465 32.1982 c23.1367 32.0791 23.1636 31.9326 23.2144 31.8281 c23.3115 31.6299 23.4824 31.415 23.6494 31.2842 c23.8394 31.1357 24.0142 30.7119 24.2578 30.6533 c24.4351 30.6113 24.6416 30.7578 24.8008 30.7959 c24.981 30.8389 25.1982 30.7861 25.3721 30.8486 c25.5938 30.9277 25.4995 31.1855 25.6602 31.2988 c25.7646 31.373 25.9473 31.3086 26.0664 31.3496 c26.2661 31.4189 26.4053 31.6123 26.4424 31.8096 c26.458 31.8916 26.4521 31.9541 26.481 32.0303 c26.5195 32.1328 26.5923 32.1904 26.5713 32.3232 c26.5615 32.3848 26.5195 32.4434 26.5068 32.5098 c26.4849 32.624 26.5088 32.7334 26.5073 32.8467 c26.5044 33.0469 26.5239 33.2256 26.4292 33.3965 c26.0493 34.084 25.1929 34.3252 24.4546 34.1855 c24.2749 34.1514 24.168 34.0596 24.0127 33.9785 c23.8423 33.8906 23.874 33.8125 23.6943 33.7549 c23.6133 33.7285 23.4785 33.6309 23.4795 33.5313 c23.481 33.416 23.4844 33.4805 23.4912 33.3623 C23.4707 33.3516 23.4697 33.3672 23.4609 33.3877 CF15.8159 33.3896 m15.8335 33.3174 15.8232 33.2627 15.79 33.1992 c15.7373 33.0986 15.6777 33.1367 15.625 33.0713 c15.5747 33.0088 15.5259 32.7949 15.5459 32.709 C15.377 32.6514 15.5366 32.4824 15.5308 32.3594 c15.5283 32.3096 15.4902 32.2539 15.4858 32.1982 c15.4761 32.0791 15.5029 31.9326 15.5537 31.8281 c15.6509 31.6299 15.8218 31.415 15.9888 31.2842 c16.1787 31.1357 16.3535 30.7119 16.5972 30.6533 c16.7744 30.6113 16.981 30.7578 17.1401 30.7959 c17.3203 30.8389 17.5376 30.7861 17.7114 30.8486 c17.9331 30.9277 17.8389 31.1855 17.9995 31.2988 c18.104 31.373 18.2866 31.3086 18.4058 31.3496 c18.6055 31.4189 18.7446 31.6123 18.7817 31.8096 c18.7974 31.8916 18.7915 31.9541 18.8203 32.0303 c18.8589 32.1328 18.9316 32.1904 18.9106 32.3232 c18.9009 32.3848 18.8589 32.4434 18.8462 32.5098 c18.8242 32.624 18.8481 32.7334 18.8467 32.8467 c18.8438 33.0469 18.8633 33.2256 18.7686 33.3965 c18.3887 34.084 17.5322 34.3252 16.7939 34.1855 c16.6143 34.1514 16.5073 34.0596 16.3521 33.9785 c16.1816 33.8906 16.2134 33.8125 16.0337 33.7549 c15.9526 33.7285 15.8179 33.6309 15.8188 33.5313 c15.8203 33.416 15.8237 33.4805 15.8306 33.3623 C15.8101 33.3516 15.8091 33.3672 15.8003 33.3877 CF8.15576 33.3896 m8.17334 33.3174 8.16309 33.2627 8.12988 33.1992 c8.07715 33.0986 8.01758 33.1367 7.96484 33.0713 c7.91455 33.0088 7.86572 32.7949 7.88574 32.709 C7.7168 32.6514 7.87646 32.4824 7.87061 32.3594 c7.86816 32.3096 7.83008 32.2539 7.82568 32.1982 c7.81592 32.0791 7.84277 31.9326 7.89355 31.8281 c7.99072 31.6299 8.16162 31.415 8.32861 31.2842 c8.51855 31.1357 8.69336 30.7119 8.93701 30.6533 c9.11426 30.6113 9.3208 30.7578 9.47998 30.7959 c9.66016 30.8389 9.87744 30.7861 10.0513 30.8486 c10.2729 30.9277 10.1787 31.1855 10.3394 31.2988 c10.4438 31.373 10.6265 31.3086 10.7456 31.3496 c10.9453 31.4189 11.0845 31.6123 11.1216 31.8096 c11.1372 31.8916 11.1313 31.9541 11.1602 32.0303 c11.1987 32.1328 11.2715 32.1904 11.2505 32.3232 c11.2407 32.3848 11.1987 32.4434 11.186 32.5098 c11.1641 32.624 11.188 32.7334 11.1865 32.8467 c11.1836 33.0469 11.2031 33.2256 11.1084 33.3965 c10.7285 34.084 9.87207 34.3252 9.13379 34.1855 c8.9541 34.1514 8.84717 34.0596 8.69189 33.9785 c8.52148 33.8906 8.55322 33.8125 8.37354 33.7549 c8.29248 33.7285 8.15771 33.6309 8.15869 33.5313 c8.16016 33.416 8.16357 33.4805 8.17041 33.3623 C8.1499 33.3516 8.14893 33.3672 8.14014 33.3877 CF0.495117 33.3896 m0.512695 33.3174 0.502441 33.2627 0.469238 33.1992 c0.416504 33.0986 0.356934 33.1367 0.304199 33.0713 c0.253906 33.0088 0.205078 32.7949 0.225098 32.709 C0.056152 32.6514 0.215332 32.4824 0.209961 32.3594 c0.20752 32.3096 0.169434 32.2539 0.165039 32.1982 c0.155273 32.0791 0.182129 31.9326 0.23291 31.8281 c0.330078 31.6299 0.500977 31.415 0.667969 31.2842 c0.85791 31.1357 1.03271 30.7119 1.27637 30.6533 c1.45361 30.6113 1.66016 30.7578 1.81934 30.7959 c1.99951 30.8389 2.2168 30.7861 2.39063 30.8486 c2.6123 30.9277 2.51807 31.1855 2.67871 31.2988 c2.7832 31.373 2.96582 31.3086 3.08496 31.3496 c3.28467 31.4189 3.42383 31.6123 3.46094 31.8096 c3.47656 31.8916 3.4707 31.9541 3.49951 32.0303 c3.53809 32.1328 3.61084 32.1904 3.58984 32.3232 c3.58008 32.3848 3.53809 32.4434 3.52539 32.5098 c3.50342 32.624 3.52734 32.7334 3.52588 32.8467 c3.52295 33.0469 3.54248 33.2256 3.44775 33.3965 c3.06787 34.084 2.21143 34.3252 1.47314 34.1855 c1.29346 34.1514 1.18652 34.0596 1.03125 33.9785 c0.86084 33.8906 0.892578 33.8125 0.712891 33.7549 c0.631836 33.7285 0.49707 33.6309 0.498047 33.5313 c0.499512 33.416 0.50293 33.4805 0.509766 33.3623 C0.489258 33.3516 0.488281 33.3672 0.479492 33.3877 CF69.439 25.7363 m69.4565 25.6641 69.4463 25.6094 69.4131 25.5459 c69.3604 25.4453 69.3008 25.4834 69.248 25.418 c69.1978 25.3555 69.1489 25.1416 69.1689 25.0557 C69 24.998 69.1592 24.8291 69.1538 24.7061 c69.1514 24.6563 69.1133 24.6006 69.1089 24.5449 c69.0991 24.4258 69.126 24.2793 69.1768 24.1748 c69.2739 23.9766 69.4448 23.7617 69.6118 23.6309 c69.8018 23.4824 69.9766 23.0586 70.2202 23 c70.3975 22.958 70.604 23.1045 70.7632 23.1426 c70.9434 23.1855 71.1606 23.1328 71.3345 23.1953 c71.5562 23.2744 71.4619 23.5322 71.6226 23.6455 c71.7271 23.7197 71.9097 23.6553 72.0288 23.6963 c72.2285 23.7656 72.3677 23.959 72.4048 24.1563 c72.4204 24.2383 72.4146 24.3008 72.4434 24.377 c72.4819 24.4795 72.5547 24.5371 72.5337 24.6699 c72.5239 24.7314 72.4819 24.79 72.4692 24.8564 c72.4473 24.9707 72.4712 25.0801 72.4697 25.1934 c72.4668 25.3936 72.4863 25.5723 72.3916 25.7432 c72.0117 26.4307 71.1553 26.6719 70.417 26.5322 c70.2373 26.498 70.1304 26.4063 69.9751 26.3252 c69.8047 26.2373 69.8364 26.1592 69.6567 26.1016 c69.5757 26.0752 69.4409 25.9775 69.4419 25.8779 c69.4434 25.7627 69.4468 25.8271 69.4536 25.709 C69.4331 25.6982 69.4321 25.7139 69.4233 25.7344 CF61.7783 25.7363 m61.7959 25.6641 61.7856 25.6094 61.7524 25.5459 c61.6997 25.4453 61.6401 25.4834 61.5874 25.418 c61.5371 25.3555 61.4883 25.1416 61.5083 25.0557 C61.3394 24.998 61.499 24.8291 61.4932 24.7061 c61.4907 24.6563 61.4526 24.6006 61.4482 24.5449 c61.4385 24.4258 61.4653 24.2793 61.5161 24.1748 c61.6133 23.9766 61.7842 23.7617 61.9512 23.6309 c62.1411 23.4824 62.3159 23.0586 62.5596 23 c62.7368 22.958 62.9434 23.1045 63.1025 23.1426 c63.2827 23.1855 63.5 23.1328 63.6738 23.1953 c63.8955 23.2744 63.8013 23.5322 63.9619 23.6455 c64.0664 23.7197 64.249 23.6553 64.3682 23.6963 c64.5679 23.7656 64.707 23.959 64.7441 24.1563 c64.7598 24.2383 64.7539 24.3008 64.7827 24.377 c64.8213 24.4795 64.894 24.5371 64.873 24.6699 c64.8633 24.7314 64.8213 24.79 64.8086 24.8564 c64.7866 24.9707 64.8105 25.0801 64.8091 25.1934 c64.8062 25.3936 64.8257 25.5723 64.731 25.7432 c64.3511 26.4307 63.4946 26.6719 62.7563 26.5322 c62.5767 26.498 62.4697 26.4063 62.3145 26.3252 c62.144 26.2373 62.1758 26.1592 61.9961 26.1016 c61.915 26.0752 61.7803 25.9775 61.7813 25.8779 c61.7827 25.7627 61.7861 25.8271 61.793 25.709 C61.7725 25.6982 61.7715 25.7139 61.7627 25.7344 CF54.1182 25.7363 m54.1357 25.6641 54.1255 25.6094 54.0923 25.5459 c54.0396 25.4453 53.98 25.4834 53.9272 25.418 c53.877 25.3555 53.8281 25.1416 53.8481 25.0557 C53.6792 24.998 53.8389 24.8291 53.833 24.7061 c53.8306 24.6563 53.7925 24.6006 53.7881 24.5449 c53.7783 24.4258 53.8052 24.2793 53.856 24.1748 c53.9531 23.9766 54.124 23.7617 54.291 23.6309 c54.481 23.4824 54.6558 23.0586 54.8994 23 c55.0767 22.958 55.2832 23.1045 55.4424 23.1426 c55.6226 23.1855 55.8398 23.1328 56.0137 23.1953 c56.2354 23.2744 56.1411 23.5322 56.3018 23.6455 c56.4063 23.7197 56.5889 23.6553 56.708 23.6963 c56.9077 23.7656 57.0469 23.959 57.084 24.1563 c57.0996 24.2383 57.0938 24.3008 57.1226 24.377 c57.1611 24.4795 57.2339 24.5371 57.2129 24.6699 c57.2031 24.7314 57.1611 24.79 57.1484 24.8564 c57.1265 24.9707 57.1504 25.0801 57.1489 25.1934 c57.146 25.3936 57.1655 25.5723 57.0708 25.7432 c56.6909 26.4307 55.8345 26.6719 55.0962 26.5322 c54.9165 26.498 54.8096 26.4063 54.6543 26.3252 c54.4839 26.2373 54.5156 26.1592 54.3359 26.1016 c54.2549 26.0752 54.1201 25.9775 54.1211 25.8779 c54.1226 25.7627 54.126 25.8271 54.1328 25.709 C54.1123 25.6982 54.1113 25.7139 54.1025 25.7344 CF46.4575 25.7363 m46.4751 25.6641 46.4648 25.6094 46.4316 25.5459 c46.3789 25.4453 46.3193 25.4834 46.2666 25.418 c46.2163 25.3555 46.1675 25.1416 46.1875 25.0557 C46.0186 24.998 46.1782 24.8291 46.1724 24.7061 c46.1699 24.6563 46.1318 24.6006 46.1274 24.5449 c46.1177 24.4258 46.1445 24.2793 46.1953 24.1748 c46.2925 23.9766 46.4634 23.7617 46.6304 23.6309 c46.8203 23.4824 46.9951 23.0586 47.2388 23 c47.416 22.958 47.6226 23.1045 47.7817 23.1426 c47.9619 23.1855 48.1792 23.1328 48.353 23.1953 c48.5747 23.2744 48.4805 23.5322 48.6411 23.6455 c48.7456 23.7197 48.9282 23.6553 49.0474 23.6963 c49.2471 23.7656 49.3862 23.959 49.4233 24.1563 c49.439 24.2383 49.4331 24.3008 49.4619 24.377 c49.5005 24.4795 49.5732 24.5371 49.5522 24.6699 c49.5425 24.7314 49.5005 24.79 49.4878 24.8564 c49.4658 24.9707 49.4897 25.0801 49.4883 25.1934 c49.4854 25.3936 49.5049 25.5723 49.4102 25.7432 c49.0303 26.4307 48.1738 26.6719 47.4355 26.5322 c47.2559 26.498 47.1489 26.4063 46.9937 26.3252 c46.8232 26.2373 46.855 26.1592 46.6753 26.1016 c46.5942 26.0752 46.4595 25.9775 46.4604 25.8779 c46.4619 25.7627 46.4653 25.8271 46.4722 25.709 C46.4517 25.6982 46.4507 25.7139 46.4419 25.7344 CF38.7974 25.7363 m38.8149 25.6641 38.8047 25.6094 38.7715 25.5459 c38.7188 25.4453 38.6592 25.4834 38.6064 25.418 c38.5562 25.3555 38.5073 25.1416 38.5273 25.0557 C38.3584 24.998 38.5181 24.8291 38.5122 24.7061 c38.5098 24.6563 38.4717 24.6006 38.4673 24.5449 c38.4575 24.4258 38.4844 24.2793 38.5352 24.1748 c38.6323 23.9766 38.8032 23.7617 38.9702 23.6309 c39.1602 23.4824 39.335 23.0586 39.5786 23 c39.7559 22.958 39.9624 23.1045 40.1216 23.1426 c40.3018 23.1855 40.519 23.1328 40.6929 23.1953 c40.9146 23.2744 40.8203 23.5322 40.981 23.6455 c41.0854 23.7197 41.2681 23.6553 41.3872 23.6963 c41.5869 23.7656 41.7261 23.959 41.7632 24.1563 c41.7788 24.2383 41.7729 24.3008 41.8018 24.377 c41.8403 24.4795 41.9131 24.5371 41.8921 24.6699 c41.8823 24.7314 41.8403 24.79 41.8276 24.8564 c41.8057 24.9707 41.8296 25.0801 41.8281 25.1934 c41.8252 25.3936 41.8447 25.5723 41.75 25.7432 c41.3701 26.4307 40.5137 26.6719 39.7754 26.5322 c39.5957 26.498 39.4888 26.4063 39.3335 26.3252 c39.1631 26.2373 39.1948 26.1592 39.0151 26.1016 c38.9341 26.0752 38.7993 25.9775 38.8003 25.8779 c38.8018 25.7627 38.8052 25.8271 38.812 25.709 C38.7915 25.6982 38.7905 25.7139 38.7817 25.7344 CF31.1367 25.7363 m31.1543 25.6641 31.144 25.6094 31.1108 25.5459 c31.0581 25.4453 30.9985 25.4834 30.9458 25.418 c30.8955 25.3555 30.8467 25.1416 30.8667 25.0557 C30.6978 24.998 30.8574 24.8291 30.8516 24.7061 c30.8491 24.6563 30.811 24.6006 30.8066 24.5449 c30.7969 24.4258 30.8237 24.2793 30.8745 24.1748 c30.9717 23.9766 31.1426 23.7617 31.3096 23.6309 c31.4995 23.4824 31.6743 23.0586 31.918 23 c32.0952 22.958 32.3018 23.1045 32.4609 23.1426 c32.6411 23.1855 32.8584 23.1328 33.0322 23.1953 c33.2539 23.2744 33.1597 23.5322 33.3203 23.6455 c33.4248 23.7197 33.6074 23.6553 33.7266 23.6963 c33.9263 23.7656 34.0654 23.959 34.1025 24.1563 c34.1182 24.2383 34.1123 24.3008 34.1411 24.377 c34.1797 24.4795 34.2524 24.5371 34.2314 24.6699 c34.2217 24.7314 34.1797 24.79 34.167 24.8564 c34.145 24.9707 34.1689 25.0801 34.1675 25.1934 c34.1646 25.3936 34.1841 25.5723 34.0894 25.7432 c33.7095 26.4307 32.853 26.6719 32.1147 26.5322 c31.9351 26.498 31.8281 26.4063 31.6729 26.3252 c31.5024 26.2373 31.5342 26.1592 31.3545 26.1016 c31.2734 26.0752 31.1387 25.9775 31.1396 25.8779 c31.1411 25.7627 31.1445 25.8271 31.1514 25.709 C31.1309 25.6982 31.1299 25.7139 31.1211 25.7344 CF23.4766 25.7363 m23.4941 25.6641 23.4839 25.6094 23.4507 25.5459 c23.3979 25.4453 23.3384 25.4834 23.2856 25.418 c23.2354 25.3555 23.1865 25.1416 23.2065 25.0557 C23.0376 24.998 23.1973 24.8291 23.1914 24.7061 c23.189 24.6563 23.1509 24.6006 23.1465 24.5449 c23.1367 24.4258 23.1636 24.2793 23.2144 24.1748 c23.3115 23.9766 23.4824 23.7617 23.6494 23.6309 c23.8394 23.4824 24.0142 23.0586 24.2578 23 c24.4351 22.958 24.6416 23.1045 24.8008 23.1426 c24.981 23.1855 25.1982 23.1328 25.3721 23.1953 c25.5938 23.2744 25.4995 23.5322 25.6602 23.6455 c25.7646 23.7197 25.9473 23.6553 26.0664 23.6963 c26.2661 23.7656 26.4053 23.959 26.4424 24.1563 c26.458 24.2383 26.4521 24.3008 26.481 24.377 c26.5195 24.4795 26.5923 24.5371 26.5713 24.6699 c26.5615 24.7314 26.5195 24.79 26.5068 24.8564 c26.4849 24.9707 26.5088 25.0801 26.5073 25.1934 c26.5044 25.3936 26.5239 25.5723 26.4292 25.7432 c26.0493 26.4307 25.1929 26.6719 24.4546 26.5322 c24.2749 26.498 24.168 26.4063 24.0127 26.3252 c23.8423 26.2373 23.874 26.1592 23.6943 26.1016 c23.6133 26.0752 23.4785 25.9775 23.4795 25.8779 c23.481 25.7627 23.4844 25.8271 23.4912 25.709 C23.4707 25.6982 23.4697 25.7139 23.4609 25.7344 CF15.8159 25.7363 m15.8335 25.6641 15.8232 25.6094 15.79 25.5459 c15.7373 25.4453 15.6777 25.4834 15.625 25.418 c15.5747 25.3555 15.5259 25.1416 15.5459 25.0557 C15.377 24.998 15.5366 24.8291 15.5308 24.7061 c15.5283 24.6563 15.4902 24.6006 15.4858 24.5449 c15.4761 24.4258 15.5029 24.2793 15.5537 24.1748 c15.6509 23.9766 15.8218 23.7617 15.9888 23.6309 c16.1787 23.4824 16.3535 23.0586 16.5972 23 c16.7744 22.958 16.981 23.1045 17.1401 23.1426 c17.3203 23.1855 17.5376 23.1328 17.7114 23.1953 c17.9331 23.2744 17.8389 23.5322 17.9995 23.6455 c18.104 23.7197 18.2866 23.6553 18.4058 23.6963 c18.6055 23.7656 18.7446 23.959 18.7817 24.1563 c18.7974 24.2383 18.7915 24.3008 18.8203 24.377 c18.8589 24.4795 18.9316 24.5371 18.9106 24.6699 c18.9009 24.7314 18.8589 24.79 18.8462 24.8564 c18.8242 24.9707 18.8481 25.0801 18.8467 25.1934 c18.8438 25.3936 18.8633 25.5723 18.7686 25.7432 c18.3887 26.4307 17.5322 26.6719 16.7939 26.5322 c16.6143 26.498 16.5073 26.4063 16.3521 26.3252 c16.1816 26.2373 16.2134 26.1592 16.0337 26.1016 c15.9526 26.0752 15.8179 25.9775 15.8188 25.8779 c15.8203 25.7627 15.8237 25.8271 15.8306 25.709 C15.8101 25.6982 15.8091 25.7139 15.8003 25.7344 CF8.15576 25.7363 m8.17334 25.6641 8.16309 25.6094 8.12988 25.5459 c8.07715 25.4453 8.01758 25.4834 7.96484 25.418 c7.91455 25.3555 7.86572 25.1416 7.88574 25.0557 C7.7168 24.998 7.87646 24.8291 7.87061 24.7061 c7.86816 24.6563 7.83008 24.6006 7.82568 24.5449 c7.81592 24.4258 7.84277 24.2793 7.89355 24.1748 c7.99072 23.9766 8.16162 23.7617 8.32861 23.6309 c8.51855 23.4824 8.69336 23.0586 8.93701 23 c9.11426 22.958 9.3208 23.1045 9.47998 23.1426 c9.66016 23.1855 9.87744 23.1328 10.0513 23.1953 c10.2729 23.2744 10.1787 23.5322 10.3394 23.6455 c10.4438 23.7197 10.6265 23.6553 10.7456 23.6963 c10.9453 23.7656 11.0845 23.959 11.1216 24.1563 c11.1372 24.2383 11.1313 24.3008 11.1602 24.377 c11.1987 24.4795 11.2715 24.5371 11.2505 24.6699 c11.2407 24.7314 11.1987 24.79 11.186 24.8564 c11.1641 24.9707 11.188 25.0801 11.1865 25.1934 c11.1836 25.3936 11.2031 25.5723 11.1084 25.7432 c10.7285 26.4307 9.87207 26.6719 9.13379 26.5322 c8.9541 26.498 8.84717 26.4063 8.69189 26.3252 c8.52148 26.2373 8.55322 26.1592 8.37354 26.1016 c8.29248 26.0752 8.15771 25.9775 8.15869 25.8779 c8.16016 25.7627 8.16357 25.8271 8.17041 25.709 C8.1499 25.6982 8.14893 25.7139 8.14014 25.7344 CF0.495117 25.7363 m0.512695 25.6641 0.502441 25.6094 0.469238 25.5459 c0.416504 25.4453 0.356934 25.4834 0.304199 25.418 c0.253906 25.3555 0.205078 25.1416 0.225098 25.0557 C0.056152 24.998 0.215332 24.8291 0.209961 24.7061 c0.20752 24.6563 0.169434 24.6006 0.165039 24.5449 c0.155273 24.4258 0.182129 24.2793 0.23291 24.1748 c0.330078 23.9766 0.500977 23.7617 0.667969 23.6309 c0.85791 23.4824 1.03271 23.0586 1.27637 23 c1.45361 22.958 1.66016 23.1045 1.81934 23.1426 c1.99951 23.1855 2.2168 23.1328 2.39063 23.1953 c2.6123 23.2744 2.51807 23.5322 2.67871 23.6455 c2.7832 23.7197 2.96582 23.6553 3.08496 23.6963 c3.28467 23.7656 3.42383 23.959 3.46094 24.1563 c3.47656 24.2383 3.4707 24.3008 3.49951 24.377 c3.53809 24.4795 3.61084 24.5371 3.58984 24.6699 c3.58008 24.7314 3.53809 24.79 3.52539 24.8564 c3.50342 24.9707 3.52734 25.0801 3.52588 25.1934 c3.52295 25.3936 3.54248 25.5723 3.44775 25.7432 c3.06787 26.4307 2.21143 26.6719 1.47314 26.5322 c1.29346 26.498 1.18652 26.4063 1.03125 26.3252 c0.86084 26.2373 0.892578 26.1592 0.712891 26.1016 c0.631836 26.0752 0.49707 25.9775 0.498047 25.8779 c0.499512 25.7627 0.50293 25.8271 0.509766 25.709 C0.489258 25.6982 0.488281 25.7139 0.479492 25.7344 CF69.439 18.084 m69.4565 18.0117 69.4463 17.957 69.4131 17.8936 c69.3604 17.793 69.3008 17.8311 69.248 17.7656 c69.1978 17.7031 69.1489 17.4893 69.1689 17.4033 C69 17.3457 69.1592 17.1768 69.1538 17.0537 c69.1514 17.0039 69.1133 16.9482 69.1089 16.8926 c69.0991 16.7734 69.126 16.627 69.1768 16.5225 c69.2739 16.3242 69.4448 16.1094 69.6118 15.9785 c69.8018 15.8301 69.9766 15.4063 70.2202 15.3477 c70.3975 15.3057 70.604 15.4521 70.7632 15.4902 c70.9434 15.5332 71.1606 15.4805 71.3345 15.543 c71.5562 15.6221 71.4619 15.8799 71.6226 15.9932 c71.7271 16.0674 71.9097 16.0029 72.0288 16.0439 c72.2285 16.1133 72.3677 16.3066 72.4048 16.5039 c72.4204 16.5859 72.4146 16.6484 72.4434 16.7246 c72.4819 16.8271 72.5547 16.8848 72.5337 17.0176 c72.5239 17.0791 72.4819 17.1377 72.4692 17.2041 c72.4473 17.3184 72.4712 17.4277 72.4697 17.541 c72.4668 17.7412 72.4863 17.9199 72.3916 18.0908 c72.0117 18.7783 71.1553 19.0195 70.417 18.8799 c70.2373 18.8457 70.1304 18.7539 69.9751 18.6729 c69.8047 18.585 69.8364 18.5068 69.6567 18.4492 c69.5757 18.4229 69.4409 18.3252 69.4419 18.2256 c69.4434 18.1104 69.4468 18.1748 69.4536 18.0566 C69.4331 18.0459 69.4321 18.0615 69.4233 18.082 CF61.7783 18.084 m61.7959 18.0117 61.7856 17.957 61.7524 17.8936 c61.6997 17.793 61.6401 17.8311 61.5874 17.7656 c61.5371 17.7031 61.4883 17.4893 61.5083 17.4033 C61.3394 17.3457 61.499 17.1768 61.4932 17.0537 c61.4907 17.0039 61.4526 16.9482 61.4482 16.8926 c61.4385 16.7734 61.4653 16.627 61.5161 16.5225 c61.6133 16.3242 61.7842 16.1094 61.9512 15.9785 c62.1411 15.8301 62.3159 15.4063 62.5596 15.3477 c62.7368 15.3057 62.9434 15.4521 63.1025 15.4902 c63.2827 15.5332 63.5 15.4805 63.6738 15.543 c63.8955 15.6221 63.8013 15.8799 63.9619 15.9932 c64.0664 16.0674 64.249 16.0029 64.3682 16.0439 c64.5679 16.1133 64.707 16.3066 64.7441 16.5039 c64.7598 16.5859 64.7539 16.6484 64.7827 16.7246 c64.8213 16.8271 64.894 16.8848 64.873 17.0176 c64.8633 17.0791 64.8213 17.1377 64.8086 17.2041 c64.7866 17.3184 64.8105 17.4277 64.8091 17.541 c64.8062 17.7412 64.8257 17.9199 64.731 18.0908 c64.3511 18.7783 63.4946 19.0195 62.7563 18.8799 c62.5767 18.8457 62.4697 18.7539 62.3145 18.6729 c62.144 18.585 62.1758 18.5068 61.9961 18.4492 c61.915 18.4229 61.7803 18.3252 61.7813 18.2256 c61.7827 18.1104 61.7861 18.1748 61.793 18.0566 C61.7725 18.0459 61.7715 18.0615 61.7627 18.082 CF54.1182 18.084 m54.1357 18.0117 54.1255 17.957 54.0923 17.8936 c54.0396 17.793 53.98 17.8311 53.9272 17.7656 c53.877 17.7031 53.8281 17.4893 53.8481 17.4033 C53.6792 17.3457 53.8389 17.1768 53.833 17.0537 c53.8306 17.0039 53.7925 16.9482 53.7881 16.8926 c53.7783 16.7734 53.8052 16.627 53.856 16.5225 c53.9531 16.3242 54.124 16.1094 54.291 15.9785 c54.481 15.8301 54.6558 15.4063 54.8994 15.3477 c55.0767 15.3057 55.2832 15.4521 55.4424 15.4902 c55.6226 15.5332 55.8398 15.4805 56.0137 15.543 c56.2354 15.6221 56.1411 15.8799 56.3018 15.9932 c56.4063 16.0674 56.5889 16.0029 56.708 16.0439 c56.9077 16.1133 57.0469 16.3066 57.084 16.5039 c57.0996 16.5859 57.0938 16.6484 57.1226 16.7246 c57.1611 16.8271 57.2339 16.8848 57.2129 17.0176 c57.2031 17.0791 57.1611 17.1377 57.1484 17.2041 c57.1265 17.3184 57.1504 17.4277 57.1489 17.541 c57.146 17.7412 57.1655 17.9199 57.0708 18.0908 c56.6909 18.7783 55.8345 19.0195 55.0962 18.8799 c54.9165 18.8457 54.8096 18.7539 54.6543 18.6729 c54.4839 18.585 54.5156 18.5068 54.3359 18.4492 c54.2549 18.4229 54.1201 18.3252 54.1211 18.2256 c54.1226 18.1104 54.126 18.1748 54.1328 18.0566 C54.1123 18.0459 54.1113 18.0615 54.1025 18.082 CF46.4575 18.084 m46.4751 18.0117 46.4648 17.957 46.4316 17.8936 c46.3789 17.793 46.3193 17.8311 46.2666 17.7656 c46.2163 17.7031 46.1675 17.4893 46.1875 17.4033 C46.0186 17.3457 46.1782 17.1768 46.1724 17.0537 c46.1699 17.0039 46.1318 16.9482 46.1274 16.8926 c46.1177 16.7734 46.1445 16.627 46.1953 16.5225 c46.2925 16.3242 46.4634 16.1094 46.6304 15.9785 c46.8203 15.8301 46.9951 15.4063 47.2388 15.3477 c47.416 15.3057 47.6226 15.4521 47.7817 15.4902 c47.9619 15.5332 48.1792 15.4805 48.353 15.543 c48.5747 15.6221 48.4805 15.8799 48.6411 15.9932 c48.7456 16.0674 48.9282 16.0029 49.0474 16.0439 c49.2471 16.1133 49.3862 16.3066 49.4233 16.5039 c49.439 16.5859 49.4331 16.6484 49.4619 16.7246 c49.5005 16.8271 49.5732 16.8848 49.5522 17.0176 c49.5425 17.0791 49.5005 17.1377 49.4878 17.2041 c49.4658 17.3184 49.4897 17.4277 49.4883 17.541 c49.4854 17.7412 49.5049 17.9199 49.4102 18.0908 c49.0303 18.7783 48.1738 19.0195 47.4355 18.8799 c47.2559 18.8457 47.1489 18.7539 46.9937 18.6729 c46.8232 18.585 46.855 18.5068 46.6753 18.4492 c46.5942 18.4229 46.4595 18.3252 46.4604 18.2256 c46.4619 18.1104 46.4653 18.1748 46.4722 18.0566 C46.4517 18.0459 46.4507 18.0615 46.4419 18.082 CF38.7974 18.084 m38.8149 18.0117 38.8047 17.957 38.7715 17.8936 c38.7188 17.793 38.6592 17.8311 38.6064 17.7656 c38.5562 17.7031 38.5073 17.4893 38.5273 17.4033 C38.3584 17.3457 38.5181 17.1768 38.5122 17.0537 c38.5098 17.0039 38.4717 16.9482 38.4673 16.8926 c38.4575 16.7734 38.4844 16.627 38.5352 16.5225 c38.6323 16.3242 38.8032 16.1094 38.9702 15.9785 c39.1602 15.8301 39.335 15.4063 39.5786 15.3477 c39.7559 15.3057 39.9624 15.4521 40.1216 15.4902 c40.3018 15.5332 40.519 15.4805 40.6929 15.543 c40.9146 15.6221 40.8203 15.8799 40.981 15.9932 c41.0854 16.0674 41.2681 16.0029 41.3872 16.0439 c41.5869 16.1133 41.7261 16.3066 41.7632 16.5039 c41.7788 16.5859 41.7729 16.6484 41.8018 16.7246 c41.8403 16.8271 41.9131 16.8848 41.8921 17.0176 c41.8823 17.0791 41.8403 17.1377 41.8276 17.2041 c41.8057 17.3184 41.8296 17.4277 41.8281 17.541 c41.8252 17.7412 41.8447 17.9199 41.75 18.0908 c41.3701 18.7783 40.5137 19.0195 39.7754 18.8799 c39.5957 18.8457 39.4888 18.7539 39.3335 18.6729 c39.1631 18.585 39.1948 18.5068 39.0151 18.4492 c38.9341 18.4229 38.7993 18.3252 38.8003 18.2256 c38.8018 18.1104 38.8052 18.1748 38.812 18.0566 C38.7915 18.0459 38.7905 18.0615 38.7817 18.082 CF31.1367 18.084 m31.1543 18.0117 31.144 17.957 31.1108 17.8936 c31.0581 17.793 30.9985 17.8311 30.9458 17.7656 c30.8955 17.7031 30.8467 17.4893 30.8667 17.4033 C30.6978 17.3457 30.8574 17.1768 30.8516 17.0537 c30.8491 17.0039 30.811 16.9482 30.8066 16.8926 c30.7969 16.7734 30.8237 16.627 30.8745 16.5225 c30.9717 16.3242 31.1426 16.1094 31.3096 15.9785 c31.4995 15.8301 31.6743 15.4063 31.918 15.3477 c32.0952 15.3057 32.3018 15.4521 32.4609 15.4902 c32.6411 15.5332 32.8584 15.4805 33.0322 15.543 c33.2539 15.6221 33.1597 15.8799 33.3203 15.9932 c33.4248 16.0674 33.6074 16.0029 33.7266 16.0439 c33.9263 16.1133 34.0654 16.3066 34.1025 16.5039 c34.1182 16.5859 34.1123 16.6484 34.1411 16.7246 c34.1797 16.8271 34.2524 16.8848 34.2314 17.0176 c34.2217 17.0791 34.1797 17.1377 34.167 17.2041 c34.145 17.3184 34.1689 17.4277 34.1675 17.541 c34.1646 17.7412 34.1841 17.9199 34.0894 18.0908 c33.7095 18.7783 32.853 19.0195 32.1147 18.8799 c31.9351 18.8457 31.8281 18.7539 31.6729 18.6729 c31.5024 18.585 31.5342 18.5068 31.3545 18.4492 c31.2734 18.4229 31.1387 18.3252 31.1396 18.2256 c31.1411 18.1104 31.1445 18.1748 31.1514 18.0566 C31.1309 18.0459 31.1299 18.0615 31.1211 18.082 CF23.4766 18.084 m23.4941 18.0117 23.4839 17.957 23.4507 17.8936 c23.3979 17.793 23.3384 17.8311 23.2856 17.7656 c23.2354 17.7031 23.1865 17.4893 23.2065 17.4033 C23.0376 17.3457 23.1973 17.1768 23.1914 17.0537 c23.189 17.0039 23.1509 16.9482 23.1465 16.8926 c23.1367 16.7734 23.1636 16.627 23.2144 16.5225 c23.3115 16.3242 23.4824 16.1094 23.6494 15.9785 c23.8394 15.8301 24.0142 15.4063 24.2578 15.3477 c24.4351 15.3057 24.6416 15.4521 24.8008 15.4902 c24.981 15.5332 25.1982 15.4805 25.3721 15.543 c25.5938 15.6221 25.4995 15.8799 25.6602 15.9932 c25.7646 16.0674 25.9473 16.0029 26.0664 16.0439 c26.2661 16.1133 26.4053 16.3066 26.4424 16.5039 c26.458 16.5859 26.4521 16.6484 26.481 16.7246 c26.5195 16.8271 26.5923 16.8848 26.5713 17.0176 c26.5615 17.0791 26.5195 17.1377 26.5068 17.2041 c26.4849 17.3184 26.5088 17.4277 26.5073 17.541 c26.5044 17.7412 26.5239 17.9199 26.4292 18.0908 c26.0493 18.7783 25.1929 19.0195 24.4546 18.8799 c24.2749 18.8457 24.168 18.7539 24.0127 18.6729 c23.8423 18.585 23.874 18.5068 23.6943 18.4492 c23.6133 18.4229 23.4785 18.3252 23.4795 18.2256 c23.481 18.1104 23.4844 18.1748 23.4912 18.0566 C23.4707 18.0459 23.4697 18.0615 23.4609 18.082 CF15.8159 18.084 m15.8335 18.0117 15.8232 17.957 15.79 17.8936 c15.7373 17.793 15.6777 17.8311 15.625 17.7656 c15.5747 17.7031 15.5259 17.4893 15.5459 17.4033 C15.377 17.3457 15.5366 17.1768 15.5308 17.0537 c15.5283 17.0039 15.4902 16.9482 15.4858 16.8926 c15.4761 16.7734 15.5029 16.627 15.5537 16.5225 c15.6509 16.3242 15.8218 16.1094 15.9888 15.9785 c16.1787 15.8301 16.3535 15.4063 16.5972 15.3477 c16.7744 15.3057 16.981 15.4521 17.1401 15.4902 c17.3203 15.5332 17.5376 15.4805 17.7114 15.543 c17.9331 15.6221 17.8389 15.8799 17.9995 15.9932 c18.104 16.0674 18.2866 16.0029 18.4058 16.0439 c18.6055 16.1133 18.7446 16.3066 18.7817 16.5039 c18.7974 16.5859 18.7915 16.6484 18.8203 16.7246 c18.8589 16.8271 18.9316 16.8848 18.9106 17.0176 c18.9009 17.0791 18.8589 17.1377 18.8462 17.2041 c18.8242 17.3184 18.8481 17.4277 18.8467 17.541 c18.8438 17.7412 18.8633 17.9199 18.7686 18.0908 c18.3887 18.7783 17.5322 19.0195 16.7939 18.8799 c16.6143 18.8457 16.5073 18.7539 16.3521 18.6729 c16.1816 18.585 16.2134 18.5068 16.0337 18.4492 c15.9526 18.4229 15.8179 18.3252 15.8188 18.2256 c15.8203 18.1104 15.8237 18.1748 15.8306 18.0566 C15.8101 18.0459 15.8091 18.0615 15.8003 18.082 CF8.15576 18.084 m8.17334 18.0117 8.16309 17.957 8.12988 17.8936 c8.07715 17.793 8.01758 17.8311 7.96484 17.7656 c7.91455 17.7031 7.86572 17.4893 7.88574 17.4033 C7.7168 17.3457 7.87646 17.1768 7.87061 17.0537 c7.86816 17.0039 7.83008 16.9482 7.82568 16.8926 c7.81592 16.7734 7.84277 16.627 7.89355 16.5225 c7.99072 16.3242 8.16162 16.1094 8.32861 15.9785 c8.51855 15.8301 8.69336 15.4063 8.93701 15.3477 c9.11426 15.3057 9.3208 15.4521 9.47998 15.4902 c9.66016 15.5332 9.87744 15.4805 10.0513 15.543 c10.2729 15.6221 10.1787 15.8799 10.3394 15.9932 c10.4438 16.0674 10.6265 16.0029 10.7456 16.0439 c10.9453 16.1133 11.0845 16.3066 11.1216 16.5039 c11.1372 16.5859 11.1313 16.6484 11.1602 16.7246 c11.1987 16.8271 11.2715 16.8848 11.2505 17.0176 c11.2407 17.0791 11.1987 17.1377 11.186 17.2041 c11.1641 17.3184 11.188 17.4277 11.1865 17.541 c11.1836 17.7412 11.2031 17.9199 11.1084 18.0908 c10.7285 18.7783 9.87207 19.0195 9.13379 18.8799 c8.9541 18.8457 8.84717 18.7539 8.69189 18.6729 c8.52148 18.585 8.55322 18.5068 8.37354 18.4492 c8.29248 18.4229 8.15771 18.3252 8.15869 18.2256 c8.16016 18.1104 8.16357 18.1748 8.17041 18.0566 C8.1499 18.0459 8.14893 18.0615 8.14014 18.082 CF0.495117 18.084 m0.512695 18.0117 0.502441 17.957 0.469238 17.8936 c0.416504 17.793 0.356934 17.8311 0.304199 17.7656 c0.253906 17.7031 0.205078 17.4893 0.225098 17.4033 C0.056152 17.3457 0.215332 17.1768 0.209961 17.0537 c0.20752 17.0039 0.169434 16.9482 0.165039 16.8926 c0.155273 16.7734 0.182129 16.627 0.23291 16.5225 c0.330078 16.3242 0.500977 16.1094 0.667969 15.9785 c0.85791 15.8301 1.03271 15.4063 1.27637 15.3477 c1.45361 15.3057 1.66016 15.4521 1.81934 15.4902 c1.99951 15.5332 2.2168 15.4805 2.39063 15.543 c2.6123 15.6221 2.51807 15.8799 2.67871 15.9932 c2.7832 16.0674 2.96582 16.0029 3.08496 16.0439 c3.28467 16.1133 3.42383 16.3066 3.46094 16.5039 c3.47656 16.5859 3.4707 16.6484 3.49951 16.7246 c3.53809 16.8271 3.61084 16.8848 3.58984 17.0176 c3.58008 17.0791 3.53809 17.1377 3.52539 17.2041 c3.50342 17.3184 3.52734 17.4277 3.52588 17.541 c3.52295 17.7412 3.54248 17.9199 3.44775 18.0908 c3.06787 18.7783 2.21143 19.0195 1.47314 18.8799 c1.29346 18.8457 1.18652 18.7539 1.03125 18.6729 c0.86084 18.585 0.892578 18.5068 0.712891 18.4492 c0.631836 18.4229 0.49707 18.3252 0.498047 18.2256 c0.499512 18.1104 0.50293 18.1748 0.509766 18.0566 C0.489258 18.0459 0.488281 18.0615 0.479492 18.082 CF69.439 10.4307 m69.4565 10.3584 69.4463 10.3037 69.4131 10.2402 c69.3604 10.1396 69.3008 10.1777 69.248 10.1123 c69.1978 10.0498 69.1489 9.83594 69.1689 9.75 C69 9.69238 69.1592 9.52344 69.1538 9.40039 c69.1514 9.35059 69.1133 9.29492 69.1089 9.23926 c69.0991 9.12012 69.126 8.97363 69.1768 8.86914 c69.2739 8.6709 69.4448 8.45605 69.6118 8.3252 c69.8018 8.17676 69.9766 7.75293 70.2202 7.69434 c70.3975 7.65234 70.604 7.79883 70.7632 7.83691 c70.9434 7.87988 71.1606 7.82715 71.3345 7.88965 c71.5562 7.96875 71.4619 8.22656 71.6226 8.33984 c71.7271 8.41406 71.9097 8.34961 72.0288 8.39063 c72.2285 8.45996 72.3677 8.65332 72.4048 8.85059 c72.4204 8.93262 72.4146 8.99512 72.4434 9.07129 c72.4819 9.17383 72.5547 9.23145 72.5337 9.36426 c72.5239 9.42578 72.4819 9.48438 72.4692 9.55078 c72.4473 9.66504 72.4712 9.77441 72.4697 9.8877 c72.4668 10.0879 72.4863 10.2666 72.3916 10.4375 c72.0117 11.125 71.1553 11.3662 70.417 11.2266 c70.2373 11.1924 70.1304 11.1006 69.9751 11.0195 c69.8047 10.9316 69.8364 10.8535 69.6567 10.7959 c69.5757 10.7695 69.4409 10.6719 69.4419 10.5723 c69.4434 10.457 69.4468 10.5215 69.4536 10.4033 C69.4331 10.3926 69.4321 10.4082 69.4233 10.4287 CF61.7783 10.4307 m61.7959 10.3584 61.7856 10.3037 61.7524 10.2402 c61.6997 10.1396 61.6401 10.1777 61.5874 10.1123 c61.5371 10.0498 61.4883 9.83594 61.5083 9.75 C61.3394 9.69238 61.499 9.52344 61.4932 9.40039 c61.4907 9.35059 61.4526 9.29492 61.4482 9.23926 c61.4385 9.12012 61.4653 8.97363 61.5161 8.86914 c61.6133 8.6709 61.7842 8.45605 61.9512 8.3252 c62.1411 8.17676 62.3159 7.75293 62.5596 7.69434 c62.7368 7.65234 62.9434 7.79883 63.1025 7.83691 c63.2827 7.87988 63.5 7.82715 63.6738 7.88965 c63.8955 7.96875 63.8013 8.22656 63.9619 8.33984 c64.0664 8.41406 64.249 8.34961 64.3682 8.39063 c64.5679 8.45996 64.707 8.65332 64.7441 8.85059 c64.7598 8.93262 64.7539 8.99512 64.7827 9.07129 c64.8213 9.17383 64.894 9.23145 64.873 9.36426 c64.8633 9.42578 64.8213 9.48438 64.8086 9.55078 c64.7866 9.66504 64.8105 9.77441 64.8091 9.8877 c64.8062 10.0879 64.8257 10.2666 64.731 10.4375 c64.3511 11.125 63.4946 11.3662 62.7563 11.2266 c62.5767 11.1924 62.4697 11.1006 62.3145 11.0195 c62.144 10.9316 62.1758 10.8535 61.9961 10.7959 c61.915 10.7695 61.7803 10.6719 61.7813 10.5723 c61.7827 10.457 61.7861 10.5215 61.793 10.4033 C61.7725 10.3926 61.7715 10.4082 61.7627 10.4287 CF54.1182 10.4307 m54.1357 10.3584 54.1255 10.3037 54.0923 10.2402 c54.0396 10.1396 53.98 10.1777 53.9272 10.1123 c53.877 10.0498 53.8281 9.83594 53.8481 9.75 C53.6792 9.69238 53.8389 9.52344 53.833 9.40039 c53.8306 9.35059 53.7925 9.29492 53.7881 9.23926 c53.7783 9.12012 53.8052 8.97363 53.856 8.86914 c53.9531 8.6709 54.124 8.45605 54.291 8.3252 c54.481 8.17676 54.6558 7.75293 54.8994 7.69434 c55.0767 7.65234 55.2832 7.79883 55.4424 7.83691 c55.6226 7.87988 55.8398 7.82715 56.0137 7.88965 c56.2354 7.96875 56.1411 8.22656 56.3018 8.33984 c56.4063 8.41406 56.5889 8.34961 56.708 8.39063 c56.9077 8.45996 57.0469 8.65332 57.084 8.85059 c57.0996 8.93262 57.0938 8.99512 57.1226 9.07129 c57.1611 9.17383 57.2339 9.23145 57.2129 9.36426 c57.2031 9.42578 57.1611 9.48438 57.1484 9.55078 c57.1265 9.66504 57.1504 9.77441 57.1489 9.8877 c57.146 10.0879 57.1655 10.2666 57.0708 10.4375 c56.6909 11.125 55.8345 11.3662 55.0962 11.2266 c54.9165 11.1924 54.8096 11.1006 54.6543 11.0195 c54.4839 10.9316 54.5156 10.8535 54.3359 10.7959 c54.2549 10.7695 54.1201 10.6719 54.1211 10.5723 c54.1226 10.457 54.126 10.5215 54.1328 10.4033 C54.1123 10.3926 54.1113 10.4082 54.1025 10.4287 CF46.4575 10.4307 m46.4751 10.3584 46.4648 10.3037 46.4316 10.2402 c46.3789 10.1396 46.3193 10.1777 46.2666 10.1123 c46.2163 10.0498 46.1675 9.83594 46.1875 9.75 C46.0186 9.69238 46.1782 9.52344 46.1724 9.40039 c46.1699 9.35059 46.1318 9.29492 46.1274 9.23926 c46.1177 9.12012 46.1445 8.97363 46.1953 8.86914 c46.2925 8.6709 46.4634 8.45605 46.6304 8.3252 c46.8203 8.17676 46.9951 7.75293 47.2388 7.69434 c47.416 7.65234 47.6226 7.79883 47.7817 7.83691 c47.9619 7.87988 48.1792 7.82715 48.353 7.88965 c48.5747 7.96875 48.4805 8.22656 48.6411 8.33984 c48.7456 8.41406 48.9282 8.34961 49.0474 8.39063 c49.2471 8.45996 49.3862 8.65332 49.4233 8.85059 c49.439 8.93262 49.4331 8.99512 49.4619 9.07129 c49.5005 9.17383 49.5732 9.23145 49.5522 9.36426 c49.5425 9.42578 49.5005 9.48438 49.4878 9.55078 c49.4658 9.66504 49.4897 9.77441 49.4883 9.8877 c49.4854 10.0879 49.5049 10.2666 49.4102 10.4375 c49.0303 11.125 48.1738 11.3662 47.4355 11.2266 c47.2559 11.1924 47.1489 11.1006 46.9937 11.0195 c46.8232 10.9316 46.855 10.8535 46.6753 10.7959 c46.5942 10.7695 46.4595 10.6719 46.4604 10.5723 c46.4619 10.457 46.4653 10.5215 46.4722 10.4033 C46.4517 10.3926 46.4507 10.4082 46.4419 10.4287 CF38.7974 10.4307 m38.8149 10.3584 38.8047 10.3037 38.7715 10.2402 c38.7188 10.1396 38.6592 10.1777 38.6064 10.1123 c38.5562 10.0498 38.5073 9.83594 38.5273 9.75 C38.3584 9.69238 38.5181 9.52344 38.5122 9.40039 c38.5098 9.35059 38.4717 9.29492 38.4673 9.23926 c38.4575 9.12012 38.4844 8.97363 38.5352 8.86914 c38.6323 8.6709 38.8032 8.45605 38.9702 8.3252 c39.1602 8.17676 39.335 7.75293 39.5786 7.69434 c39.7559 7.65234 39.9624 7.79883 40.1216 7.83691 c40.3018 7.87988 40.519 7.82715 40.6929 7.88965 c40.9146 7.96875 40.8203 8.22656 40.981 8.33984 c41.0854 8.41406 41.2681 8.34961 41.3872 8.39063 c41.5869 8.45996 41.7261 8.65332 41.7632 8.85059 c41.7788 8.93262 41.7729 8.99512 41.8018 9.07129 c41.8403 9.17383 41.9131 9.23145 41.8921 9.36426 c41.8823 9.42578 41.8403 9.48438 41.8276 9.55078 c41.8057 9.66504 41.8296 9.77441 41.8281 9.8877 c41.8252 10.0879 41.8447 10.2666 41.75 10.4375 c41.3701 11.125 40.5137 11.3662 39.7754 11.2266 c39.5957 11.1924 39.4888 11.1006 39.3335 11.0195 c39.1631 10.9316 39.1948 10.8535 39.0151 10.7959 c38.9341 10.7695 38.7993 10.6719 38.8003 10.5723 c38.8018 10.457 38.8052 10.5215 38.812 10.4033 C38.7915 10.3926 38.7905 10.4082 38.7817 10.4287 CF31.1367 10.4307 m31.1543 10.3584 31.144 10.3037 31.1108 10.2402 c31.0581 10.1396 30.9985 10.1777 30.9458 10.1123 c30.8955 10.0498 30.8467 9.83594 30.8667 9.75 C30.6978 9.69238 30.8574 9.52344 30.8516 9.40039 c30.8491 9.35059 30.811 9.29492 30.8066 9.23926 c30.7969 9.12012 30.8237 8.97363 30.8745 8.86914 c30.9717 8.6709 31.1426 8.45605 31.3096 8.3252 c31.4995 8.17676 31.6743 7.75293 31.918 7.69434 c32.0952 7.65234 32.3018 7.79883 32.4609 7.83691 c32.6411 7.87988 32.8584 7.82715 33.0322 7.88965 c33.2539 7.96875 33.1597 8.22656 33.3203 8.33984 c33.4248 8.41406 33.6074 8.34961 33.7266 8.39063 c33.9263 8.45996 34.0654 8.65332 34.1025 8.85059 c34.1182 8.93262 34.1123 8.99512 34.1411 9.07129 c34.1797 9.17383 34.2524 9.23145 34.2314 9.36426 c34.2217 9.42578 34.1797 9.48438 34.167 9.55078 c34.145 9.66504 34.1689 9.77441 34.1675 9.8877 c34.1646 10.0879 34.1841 10.2666 34.0894 10.4375 c33.7095 11.125 32.853 11.3662 32.1147 11.2266 c31.9351 11.1924 31.8281 11.1006 31.6729 11.0195 c31.5024 10.9316 31.5342 10.8535 31.3545 10.7959 c31.2734 10.7695 31.1387 10.6719 31.1396 10.5723 c31.1411 10.457 31.1445 10.5215 31.1514 10.4033 C31.1309 10.3926 31.1299 10.4082 31.1211 10.4287 CF23.4766 10.4307 m23.4941 10.3584 23.4839 10.3037 23.4507 10.2402 c23.3979 10.1396 23.3384 10.1777 23.2856 10.1123 c23.2354 10.0498 23.1865 9.83594 23.2065 9.75 C23.0376 9.69238 23.1973 9.52344 23.1914 9.40039 c23.189 9.35059 23.1509 9.29492 23.1465 9.23926 c23.1367 9.12012 23.1636 8.97363 23.2144 8.86914 c23.3115 8.6709 23.4824 8.45605 23.6494 8.3252 c23.8394 8.17676 24.0142 7.75293 24.2578 7.69434 c24.4351 7.65234 24.6416 7.79883 24.8008 7.83691 c24.981 7.87988 25.1982 7.82715 25.3721 7.88965 c25.5938 7.96875 25.4995 8.22656 25.6602 8.33984 c25.7646 8.41406 25.9473 8.34961 26.0664 8.39063 c26.2661 8.45996 26.4053 8.65332 26.4424 8.85059 c26.458 8.93262 26.4521 8.99512 26.481 9.07129 c26.5195 9.17383 26.5923 9.23145 26.5713 9.36426 c26.5615 9.42578 26.5195 9.48438 26.5068 9.55078 c26.4849 9.66504 26.5088 9.77441 26.5073 9.8877 c26.5044 10.0879 26.5239 10.2666 26.4292 10.4375 c26.0493 11.125 25.1929 11.3662 24.4546 11.2266 c24.2749 11.1924 24.168 11.1006 24.0127 11.0195 c23.8423 10.9316 23.874 10.8535 23.6943 10.7959 c23.6133 10.7695 23.4785 10.6719 23.4795 10.5723 c23.481 10.457 23.4844 10.5215 23.4912 10.4033 C23.4707 10.3926 23.4697 10.4082 23.4609 10.4287 CF15.8159 10.4307 m15.8335 10.3584 15.8232 10.3037 15.79 10.2402 c15.7373 10.1396 15.6777 10.1777 15.625 10.1123 c15.5747 10.0498 15.5259 9.83594 15.5459 9.75 C15.377 9.69238 15.5366 9.52344 15.5308 9.40039 c15.5283 9.35059 15.4902 9.29492 15.4858 9.23926 c15.4761 9.12012 15.5029 8.97363 15.5537 8.86914 c15.6509 8.6709 15.8218 8.45605 15.9888 8.3252 c16.1787 8.17676 16.3535 7.75293 16.5972 7.69434 c16.7744 7.65234 16.981 7.79883 17.1401 7.83691 c17.3203 7.87988 17.5376 7.82715 17.7114 7.88965 c17.9331 7.96875 17.8389 8.22656 17.9995 8.33984 c18.104 8.41406 18.2866 8.34961 18.4058 8.39063 c18.6055 8.45996 18.7446 8.65332 18.7817 8.85059 c18.7974 8.93262 18.7915 8.99512 18.8203 9.07129 c18.8589 9.17383 18.9316 9.23145 18.9106 9.36426 c18.9009 9.42578 18.8589 9.48438 18.8462 9.55078 c18.8242 9.66504 18.8481 9.77441 18.8467 9.8877 c18.8438 10.0879 18.8633 10.2666 18.7686 10.4375 c18.3887 11.125 17.5322 11.3662 16.7939 11.2266 c16.6143 11.1924 16.5073 11.1006 16.3521 11.0195 c16.1816 10.9316 16.2134 10.8535 16.0337 10.7959 c15.9526 10.7695 15.8179 10.6719 15.8188 10.5723 c15.8203 10.457 15.8237 10.5215 15.8306 10.4033 C15.8101 10.3926 15.8091 10.4082 15.8003 10.4287 CF8.15576 10.4307 m8.17334 10.3584 8.16309 10.3037 8.12988 10.2402 c8.07715 10.1396 8.01758 10.1777 7.96484 10.1123 c7.91455 10.0498 7.86572 9.83594 7.88574 9.75 C7.7168 9.69238 7.87646 9.52344 7.87061 9.40039 c7.86816 9.35059 7.83008 9.29492 7.82568 9.23926 c7.81592 9.12012 7.84277 8.97363 7.89355 8.86914 c7.99072 8.6709 8.16162 8.45605 8.32861 8.3252 c8.51855 8.17676 8.69336 7.75293 8.93701 7.69434 c9.11426 7.65234 9.3208 7.79883 9.47998 7.83691 c9.66016 7.87988 9.87744 7.82715 10.0513 7.88965 c10.2729 7.96875 10.1787 8.22656 10.3394 8.33984 c10.4438 8.41406 10.6265 8.34961 10.7456 8.39063 c10.9453 8.45996 11.0845 8.65332 11.1216 8.85059 c11.1372 8.93262 11.1313 8.99512 11.1602 9.07129 c11.1987 9.17383 11.2715 9.23145 11.2505 9.36426 c11.2407 9.42578 11.1987 9.48438 11.186 9.55078 c11.1641 9.66504 11.188 9.77441 11.1865 9.8877 c11.1836 10.0879 11.2031 10.2666 11.1084 10.4375 c10.7285 11.125 9.87207 11.3662 9.13379 11.2266 c8.9541 11.1924 8.84717 11.1006 8.69189 11.0195 c8.52148 10.9316 8.55322 10.8535 8.37354 10.7959 c8.29248 10.7695 8.15771 10.6719 8.15869 10.5723 c8.16016 10.457 8.16357 10.5215 8.17041 10.4033 C8.1499 10.3926 8.14893 10.4082 8.14014 10.4287 CF0.495117 10.4307 m0.512695 10.3584 0.502441 10.3037 0.469238 10.2402 c0.416504 10.1396 0.356934 10.1777 0.304199 10.1123 c0.253906 10.0498 0.205078 9.83594 0.225098 9.75 C0.056152 9.69238 0.215332 9.52344 0.209961 9.40039 c0.20752 9.35059 0.169434 9.29492 0.165039 9.23926 c0.155273 9.12012 0.182129 8.97363 0.23291 8.86914 c0.330078 8.6709 0.500977 8.45605 0.667969 8.3252 c0.85791 8.17676 1.03271 7.75293 1.27637 7.69434 c1.45361 7.65234 1.66016 7.79883 1.81934 7.83691 c1.99951 7.87988 2.2168 7.82715 2.39063 7.88965 c2.6123 7.96875 2.51807 8.22656 2.67871 8.33984 c2.7832 8.41406 2.96582 8.34961 3.08496 8.39063 c3.28467 8.45996 3.42383 8.65332 3.46094 8.85059 c3.47656 8.93262 3.4707 8.99512 3.49951 9.07129 c3.53809 9.17383 3.61084 9.23145 3.58984 9.36426 c3.58008 9.42578 3.53809 9.48438 3.52539 9.55078 c3.50342 9.66504 3.52734 9.77441 3.52588 9.8877 c3.52295 10.0879 3.54248 10.2666 3.44775 10.4375 c3.06787 11.125 2.21143 11.3662 1.47314 11.2266 c1.29346 11.1924 1.18652 11.1006 1.03125 11.0195 c0.86084 10.9316 0.892578 10.8535 0.712891 10.7959 c0.631836 10.7695 0.49707 10.6719 0.498047 10.5723 c0.499512 10.457 0.50293 10.5215 0.509766 10.4033 C0.489258 10.3926 0.488281 10.4082 0.479492 10.4287 CF69.439 2.77832 m69.4565 2.70605 69.4468 2.65137 69.4131 2.58789 c69.3608 2.4873 69.3003 2.52539 69.248 2.45996 c69.1973 2.39746 69.1489 2.18359 69.1689 2.09766 C69 2.04004 69.1587 1.87109 69.1538 1.74805 c69.1514 1.69824 69.1133 1.64258 69.1089 1.58691 c69.0986 1.46777 69.126 1.32129 69.1768 1.2168 c69.2739 1.01855 69.4448 0.803711 69.6118 0.672852 c69.8018 0.524414 69.9766 0.100586 70.2202 0.041992 c70.3975 0 70.604 0.146484 70.7632 0.18457 c70.9434 0.227539 71.1606 0.174805 71.3345 0.237305 c71.5562 0.316406 71.4619 0.574219 71.6226 0.6875 c71.7271 0.761719 71.9097 0.697266 72.0288 0.738281 c72.2285 0.808594 72.3682 1.00098 72.4048 1.19824 c72.4204 1.28027 72.4146 1.34277 72.4434 1.41895 c72.4814 1.52148 72.5547 1.5791 72.5337 1.71191 c72.5239 1.77344 72.4824 1.83203 72.4692 1.89844 c72.4478 2.0127 72.4712 2.12207 72.4697 2.23535 c72.4668 2.43555 72.4863 2.61426 72.3916 2.78516 c72.0117 3.47266 71.1553 3.71387 70.417 3.57422 c70.2373 3.54004 70.1304 3.44824 69.9751 3.36719 c69.8047 3.2793 69.8364 3.20117 69.6567 3.14355 c69.5757 3.11719 69.4414 3.01953 69.4419 2.91992 c69.4438 2.80469 69.4468 2.86914 69.4536 2.75098 C69.4331 2.74023 69.4321 2.75586 69.4233 2.77637 cF61.7783 2.77832 m61.7959 2.70605 61.7856 2.65137 61.7524 2.58789 c61.6997 2.4873 61.6401 2.52539 61.5874 2.45996 c61.5371 2.39746 61.4883 2.18359 61.5083 2.09766 C61.3394 2.04004 61.4985 1.87109 61.4932 1.74805 c61.4907 1.69824 61.4526 1.64258 61.4482 1.58691 c61.4385 1.46777 61.4653 1.32129 61.5161 1.2168 c61.6133 1.01855 61.7842 0.803711 61.9512 0.672852 c62.1411 0.524414 62.3159 0.100586 62.5596 0.041992 c62.7368 0 62.9434 0.146484 63.1025 0.18457 c63.2827 0.227539 63.5 0.174805 63.6738 0.237305 c63.8955 0.316406 63.8013 0.574219 63.9619 0.6875 c64.0664 0.761719 64.249 0.697266 64.3682 0.738281 c64.5679 0.807617 64.707 1.00098 64.7441 1.19824 c64.7598 1.28027 64.7539 1.34277 64.7827 1.41895 c64.8213 1.52148 64.894 1.5791 64.873 1.71191 c64.8633 1.77344 64.8213 1.83203 64.8086 1.89844 c64.7866 2.0127 64.8105 2.12207 64.8091 2.23535 c64.8062 2.43555 64.8257 2.61426 64.731 2.78516 c64.3511 3.47266 63.4946 3.71387 62.7563 3.57422 c62.5767 3.54004 62.4697 3.44824 62.3145 3.36719 c62.144 3.2793 62.1758 3.20117 61.9961 3.14355 c61.915 3.11719 61.7803 3.01953 61.7813 2.91992 c61.7827 2.80469 61.7861 2.86914 61.793 2.75098 C61.7725 2.74023 61.7715 2.75586 61.7627 2.77637 CF54.1182 2.77832 m54.1357 2.70605 54.1255 2.65137 54.0923 2.58789 c54.0396 2.4873 53.98 2.52539 53.9272 2.45996 c53.877 2.39746 53.8281 2.18359 53.8481 2.09766 C53.6792 2.04004 53.8384 1.87109 53.833 1.74805 c53.8306 1.69824 53.7925 1.64258 53.7881 1.58691 c53.7783 1.46777 53.8052 1.32129 53.856 1.2168 c53.9531 1.01855 54.124 0.803711 54.291 0.672852 c54.481 0.524414 54.6558 0.100586 54.8994 0.041992 c55.0767 0 55.2832 0.146484 55.4424 0.18457 c55.6226 0.227539 55.8398 0.174805 56.0137 0.237305 c56.2354 0.316406 56.1411 0.574219 56.3018 0.6875 c56.4063 0.761719 56.5889 0.697266 56.708 0.738281 c56.9077 0.807617 57.0469 1.00098 57.084 1.19824 c57.0996 1.28027 57.0938 1.34277 57.1226 1.41895 c57.1611 1.52148 57.2339 1.5791 57.2129 1.71191 c57.2031 1.77344 57.1611 1.83203 57.1484 1.89844 c57.1265 2.0127 57.1504 2.12207 57.1489 2.23535 c57.146 2.43555 57.1655 2.61426 57.0708 2.78516 c56.6909 3.47266 55.8345 3.71387 55.0962 3.57422 c54.9165 3.54004 54.8096 3.44824 54.6543 3.36719 c54.4839 3.2793 54.5156 3.20117 54.3359 3.14355 c54.2549 3.11719 54.1201 3.01953 54.1211 2.91992 c54.1226 2.80469 54.126 2.86914 54.1328 2.75098 C54.1123 2.74023 54.1113 2.75586 54.1025 2.77637 CF46.4575 2.77832 m46.4751 2.70605 46.4648 2.65137 46.4316 2.58789 c46.3789 2.4873 46.3193 2.52539 46.2666 2.45996 c46.2163 2.39746 46.1675 2.18359 46.1875 2.09766 C46.0186 2.04004 46.1777 1.87109 46.1724 1.74805 c46.1699 1.69824 46.1318 1.64258 46.1274 1.58691 c46.1177 1.46777 46.1445 1.32129 46.1953 1.2168 c46.2925 1.01855 46.4634 0.803711 46.6304 0.672852 c46.8203 0.524414 46.9951 0.100586 47.2388 0.041992 c47.416 0 47.6226 0.146484 47.7817 0.18457 c47.9619 0.227539 48.1792 0.174805 48.353 0.237305 c48.5747 0.316406 48.4805 0.574219 48.6411 0.6875 c48.7456 0.761719 48.9282 0.697266 49.0474 0.738281 c49.2471 0.807617 49.3862 1.00098 49.4233 1.19824 c49.439 1.28027 49.4331 1.34277 49.4619 1.41895 c49.5005 1.52148 49.5732 1.5791 49.5522 1.71191 c49.5425 1.77344 49.5005 1.83203 49.4878 1.89844 c49.4658 2.0127 49.4897 2.12207 49.4883 2.23535 c49.4854 2.43555 49.5049 2.61426 49.4102 2.78516 c49.0303 3.47266 48.1738 3.71387 47.4355 3.57422 c47.2559 3.54004 47.1489 3.44824 46.9937 3.36719 c46.8232 3.2793 46.855 3.20117 46.6753 3.14355 c46.5942 3.11719 46.4595 3.01953 46.4604 2.91992 c46.4619 2.80469 46.4653 2.86914 46.4722 2.75098 C46.4517 2.74023 46.4507 2.75586 46.4419 2.77637 CF38.7974 2.77832 m38.8149 2.70605 38.8047 2.65137 38.7715 2.58789 c38.7188 2.4873 38.6592 2.52539 38.6064 2.45996 c38.5562 2.39746 38.5073 2.18359 38.5273 2.09766 C38.3584 2.04004 38.5176 1.87109 38.5122 1.74805 c38.5098 1.69824 38.4717 1.64258 38.4673 1.58691 c38.4575 1.46777 38.4844 1.32129 38.5352 1.2168 c38.6323 1.01855 38.8032 0.803711 38.9702 0.672852 c39.1602 0.524414 39.335 0.100586 39.5786 0.041992 c39.7559 0 39.9624 0.146484 40.1216 0.18457 c40.3018 0.227539 40.519 0.174805 40.6929 0.237305 c40.9146 0.316406 40.8203 0.574219 40.981 0.6875 c41.0854 0.761719 41.2681 0.697266 41.3872 0.738281 c41.5869 0.807617 41.7261 1.00098 41.7632 1.19824 c41.7788 1.28027 41.7729 1.34277 41.8018 1.41895 c41.8403 1.52148 41.9131 1.5791 41.8921 1.71191 c41.8823 1.77344 41.8403 1.83203 41.8276 1.89844 c41.8057 2.0127 41.8296 2.12207 41.8281 2.23535 c41.8252 2.43555 41.8447 2.61426 41.75 2.78516 c41.3701 3.47266 40.5137 3.71387 39.7754 3.57422 c39.5957 3.54004 39.4888 3.44824 39.3335 3.36719 c39.1631 3.2793 39.1948 3.20117 39.0151 3.14355 c38.9341 3.11719 38.7993 3.01953 38.8003 2.91992 c38.8018 2.80469 38.8052 2.86914 38.812 2.75098 C38.7915 2.74023 38.7905 2.75586 38.7817 2.77637 CF31.1367 2.77832 m31.1543 2.70605 31.144 2.65137 31.1108 2.58789 c31.0581 2.4873 30.9985 2.52539 30.9458 2.45996 c30.8955 2.39746 30.8467 2.18359 30.8667 2.09766 C30.6978 2.04004 30.8569 1.87109 30.8516 1.74805 c30.8491 1.69824 30.811 1.64258 30.8066 1.58691 c30.7969 1.46777 30.8237 1.32129 30.8745 1.2168 c30.9717 1.01855 31.1426 0.803711 31.3096 0.672852 c31.4995 0.524414 31.6743 0.100586 31.918 0.041992 c32.0952 0 32.3018 0.146484 32.4609 0.18457 c32.6411 0.227539 32.8584 0.174805 33.0322 0.237305 c33.2539 0.316406 33.1597 0.574219 33.3203 0.6875 c33.4248 0.761719 33.6074 0.697266 33.7266 0.738281 c33.9263 0.807617 34.0654 1.00098 34.1025 1.19824 c34.1182 1.28027 34.1123 1.34277 34.1411 1.41895 c34.1797 1.52148 34.2524 1.5791 34.2314 1.71191 c34.2217 1.77344 34.1797 1.83203 34.167 1.89844 c34.145 2.0127 34.1689 2.12207 34.1675 2.23535 c34.1646 2.43555 34.1841 2.61426 34.0894 2.78516 c33.7095 3.47266 32.853 3.71387 32.1147 3.57422 c31.9351 3.54004 31.8281 3.44824 31.6729 3.36719 c31.5024 3.2793 31.5342 3.20117 31.3545 3.14355 c31.2734 3.11719 31.1387 3.01953 31.1396 2.91992 c31.1411 2.80469 31.1445 2.86914 31.1514 2.75098 C31.1309 2.74023 31.1299 2.75586 31.1211 2.77637 CF23.4766 2.77832 m23.4941 2.70605 23.4839 2.65137 23.4507 2.58789 c23.3979 2.4873 23.3384 2.52539 23.2856 2.45996 c23.2354 2.39746 23.1865 2.18359 23.2065 2.09766 C23.0376 2.04004 23.1968 1.87109 23.1914 1.74805 c23.189 1.69824 23.1509 1.64258 23.1465 1.58691 c23.1367 1.46777 23.1636 1.32129 23.2144 1.2168 c23.3115 1.01855 23.4824 0.803711 23.6494 0.672852 c23.8394 0.524414 24.0142 0.100586 24.2578 0.041992 c24.4351 0 24.6416 0.146484 24.8008 0.18457 c24.981 0.227539 25.1982 0.174805 25.3721 0.237305 c25.5938 0.316406 25.4995 0.574219 25.6602 0.6875 c25.7646 0.761719 25.9473 0.697266 26.0664 0.738281 c26.2661 0.807617 26.4053 1.00098 26.4424 1.19824 c26.458 1.28027 26.4521 1.34277 26.481 1.41895 c26.5195 1.52148 26.5923 1.5791 26.5713 1.71191 c26.5615 1.77344 26.5195 1.83203 26.5068 1.89844 c26.4849 2.0127 26.5088 2.12207 26.5073 2.23535 c26.5044 2.43555 26.5239 2.61426 26.4292 2.78516 c26.0493 3.47266 25.1929 3.71387 24.4546 3.57422 c24.2749 3.54004 24.168 3.44824 24.0127 3.36719 c23.8423 3.2793 23.874 3.20117 23.6943 3.14355 c23.6133 3.11719 23.4785 3.01953 23.4795 2.91992 c23.481 2.80469 23.4844 2.86914 23.4912 2.75098 C23.4707 2.74023 23.4697 2.75586 23.4609 2.77637 CF15.8159 2.77832 m15.8335 2.70605 15.8232 2.65137 15.79 2.58789 c15.7373 2.4873 15.6777 2.52539 15.625 2.45996 c15.5747 2.39746 15.5259 2.18359 15.5459 2.09766 C15.377 2.04004 15.5361 1.87109 15.5308 1.74805 c15.5283 1.69824 15.4902 1.64258 15.4858 1.58691 c15.4761 1.46777 15.5029 1.32129 15.5537 1.2168 c15.6509 1.01855 15.8218 0.803711 15.9888 0.672852 c16.1787 0.524414 16.3535 0.100586 16.5972 0.041992 c16.7744 0 16.981 0.146484 17.1401 0.18457 c17.3203 0.227539 17.5376 0.174805 17.7114 0.237305 c17.9331 0.316406 17.8389 0.574219 17.9995 0.6875 c18.104 0.761719 18.2866 0.697266 18.4058 0.738281 c18.6055 0.807617 18.7446 1.00098 18.7817 1.19824 c18.7974 1.28027 18.7915 1.34277 18.8203 1.41895 c18.8589 1.52148 18.9316 1.5791 18.9106 1.71191 c18.9009 1.77344 18.8589 1.83203 18.8462 1.89844 c18.8242 2.0127 18.8481 2.12207 18.8467 2.23535 c18.8438 2.43555 18.8633 2.61426 18.7686 2.78516 c18.3887 3.47266 17.5322 3.71387 16.7939 3.57422 c16.6143 3.54004 16.5073 3.44824 16.3521 3.36719 c16.1816 3.2793 16.2134 3.20117 16.0337 3.14355 c15.9526 3.11719 15.8179 3.01953 15.8188 2.91992 c15.8203 2.80469 15.8237 2.86914 15.8306 2.75098 C15.8101 2.74023 15.8091 2.75586 15.8003 2.77637 CF8.15576 2.77832 m8.17334 2.70605 8.16309 2.65137 8.12988 2.58789 c8.07715 2.4873 8.01758 2.52539 7.96484 2.45996 c7.91455 2.39746 7.86572 2.18359 7.88574 2.09766 C7.7168 2.04004 7.87598 1.87109 7.87061 1.74805 c7.86816 1.69824 7.83008 1.64258 7.82568 1.58691 c7.81592 1.46777 7.84277 1.32129 7.89355 1.2168 c7.99072 1.01855 8.16162 0.803711 8.32861 0.672852 c8.51855 0.524414 8.69336 0.100586 8.93701 0.041992 c9.11426 0 9.3208 0.146484 9.47998 0.18457 c9.66016 0.227539 9.87744 0.174805 10.0513 0.237305 c10.2729 0.316406 10.1787 0.574219 10.3394 0.6875 c10.4438 0.761719 10.6265 0.697266 10.7456 0.738281 c10.9453 0.807617 11.0845 1.00098 11.1216 1.19824 c11.1372 1.28027 11.1313 1.34277 11.1602 1.41895 c11.1987 1.52148 11.2715 1.5791 11.2505 1.71191 c11.2407 1.77344 11.1987 1.83203 11.186 1.89844 c11.1641 2.0127 11.188 2.12207 11.1865 2.23535 c11.1836 2.43555 11.2031 2.61426 11.1084 2.78516 c10.7285 3.47266 9.87207 3.71387 9.13379 3.57422 c8.9541 3.54004 8.84717 3.44824 8.69189 3.36719 c8.52148 3.2793 8.55322 3.20117 8.37354 3.14355 c8.29248 3.11719 8.15771 3.01953 8.15869 2.91992 c8.16016 2.80469 8.16357 2.86914 8.17041 2.75098 C8.1499 2.74023 8.14893 2.75586 8.14014 2.77637 CF0.495117 2.77832 m0.512695 2.70605 0.50293 2.65137 0.469238 2.58789 c0.416992 2.4873 0.356445 2.52539 0.304199 2.45996 c0.253418 2.39746 0.205078 2.18359 0.225098 2.09766 C0.056152 2.04004 0.214844 1.87109 0.209961 1.74805 c0.20752 1.69824 0.169434 1.64258 0.165039 1.58691 c0.154785 1.46777 0.182129 1.32129 0.23291 1.2168 c0.330078 1.01855 0.500977 0.803711 0.667969 0.672852 c0.85791 0.524414 1.03271 0.100586 1.27637 0.041992 c1.45361 0 1.66016 0.146484 1.81934 0.18457 c1.99951 0.227539 2.2168 0.174805 2.39063 0.237305 c2.6123 0.316406 2.51807 0.574219 2.67871 0.6875 c2.7832 0.761719 2.96582 0.697266 3.08496 0.738281 c3.28467 0.808594 3.42432 1.00098 3.46094 1.19824 c3.47656 1.28027 3.4707 1.34277 3.49951 1.41895 c3.5376 1.52148 3.61084 1.5791 3.58984 1.71191 c3.58008 1.77344 3.53857 1.83203 3.52539 1.89844 c3.50391 2.0127 3.52734 2.12207 3.52588 2.23535 c3.52295 2.43555 3.54248 2.61426 3.44775 2.78516 c3.06787 3.47266 2.21143 3.71387 1.47314 3.57422 c1.29346 3.54004 1.18652 3.44824 1.03125 3.36719 c0.86084 3.2793 0.892578 3.20117 0.712891 3.14355 c0.631836 3.11719 0.497559 3.01953 0.498047 2.91992 c0.5 2.80469 0.50293 2.86914 0.509766 2.75098 C0.489258 2.74023 0.488281 2.75586 0.479492 2.77637 cF%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Waves Pattern)(Waves Pattern) 16.5288 5.83691 69.5884 62.1177 [%AI3_Tile(0 O 0 R 0.7765 0.0431 0.1098 0.0039 k 0.7765 0.0431 0.1098 0.0039 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR16.5288 5.83691 m16.5288 62.1177 L69.5884 62.1177 L69.5884 5.83691 L16.5288 5.83691 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1.25 w 4 M []0 d0 XR66.1079 63.5161 m66.6782 61.8623 68.312 61.3062 69.5884 62.1177 C68.4126 62.749 68.9067 64.2759 70.6567 63.9658 c73.2075 63.5151 72.9673 60.3872 71.5415 58.8247 c69.48 56.5693 65.3013 54.4048 53.4595 64.1436 CS39.5776 63.5161 m40.1479 61.8623 41.7817 61.3062 43.0591 62.1177 C41.8823 62.749 42.3745 64.2759 44.1265 63.9658 c46.6763 63.5151 46.436 60.3872 45.0103 58.8247 c42.9507 56.5693 38.771 54.4048 26.9282 64.1436 cS13.0454 63.5161 m13.6167 61.8623 15.2515 61.3062 16.5269 62.1177 C15.3501 62.749 15.8433 64.2759 17.5952 63.9658 c20.144 63.5151 19.9038 60.3872 18.478 58.8247 c16.4185 56.5693 12.2407 54.4048 0.396973 64.1436 cS80.3853 40.064 m78.3267 37.8101 74.147 35.645 62.3052 45.3838 C57.1235 49.6465 52.8296 49.9897 50.3267 48.5435 c48.7661 47.6416 48.0776 45.7476 48.4224 44.7554 c48.9937 43.1025 50.6274 42.5454 51.9028 43.3574 C50.7271 43.9888 51.2202 45.5161 52.9712 45.2051 c55.522 44.7544 55.2808 41.6274 53.855 40.064 c51.7954 37.8091 47.6167 35.645 35.7739 45.3838 c30.5894 49.6465 26.2974 49.9897 23.7935 48.5435 c22.2319 47.6416 21.5464 45.7476 21.8901 44.7554 c22.4624 43.1025 24.0962 42.5454 25.3696 43.3574 C24.1929 43.9888 24.688 45.5161 26.4399 45.2051 c28.9888 44.7544 28.7485 41.6274 27.3228 40.064 c25.2632 37.8101 21.0845 35.645 9.24268 45.3838 cS71.1489 26.623 m65.9653 30.8862 61.6743 31.229 59.1694 29.7832 c57.6099 28.8818 56.9233 26.9878 57.2661 25.9956 c57.8384 24.3418 59.4722 23.7856 60.7466 24.5977 C59.5698 25.229 60.0649 26.7559 61.8169 26.4458 c64.3657 25.9946 64.1245 22.8667 62.6997 21.3042 c60.6401 19.0493 56.4614 16.8843 44.6187 26.623 C39.4351 30.8862 35.1431 31.229 32.6401 29.7832 c31.0776 28.8818 30.3921 26.9878 30.7349 25.9956 c31.3062 24.3418 32.9409 23.7856 34.2163 24.5977 C33.0405 25.229 33.5337 26.7559 35.2847 26.4458 c37.8345 25.9946 37.5942 22.8667 36.1694 21.3042 c34.1099 19.0493 29.9292 16.8843 18.0874 26.623 c12.9019 30.8862 8.60986 31.229 6.10791 29.7832 cS79.9956 7.86328 m74.8091 12.1265 70.5181 12.4692 68.0161 11.0234 c66.4556 10.1211 65.769 8.22705 66.1118 7.23486 c66.6841 5.58301 68.3179 5.02588 69.5923 5.83691 C68.4165 6.46826 68.9106 7.99609 70.6606 7.68506 c73.2095 7.23389 72.9712 4.10791 71.5454 2.54443 c69.4849 0.289551 65.3052 -1.875 53.4653 7.86328 C48.2798 12.1265 43.9868 12.4692 41.4849 11.0234 c39.9253 10.1211 39.2368 8.22705 39.5815 7.23486 c40.1519 5.58301 41.7876 5.02588 43.063 5.83691 C41.8862 6.46826 42.3784 7.99609 44.1313 7.68506 c46.6802 7.23389 46.4399 4.10791 45.0142 2.54443 c42.9546 0.289551 38.7759 -1.875 26.9331 7.86328 c21.7476 12.1265 17.4556 12.4692 14.9526 11.0234 c13.3911 10.1211 12.7065 8.22705 13.0493 7.23486 c13.6216 5.58301 15.2554 5.02588 16.5288 5.83691 C15.3521 6.46826 15.8472 7.99609 17.5991 7.68506 c20.1479 7.23389 19.9077 4.10791 18.48 2.54443 cS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 2)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4268.2314 4367.5566 m-4159.6592 4367.5566 L-4159.6592 4366.144 L-4268.2314 4366.144 L-4268.2314 4367.5566 Lnu0 O0 0 0 1 k-4159.6592 4366.1816 m-4159.7109 4366.144 L-4159.8438 4366.248 L-4159.6592 4366.1816 Lf-4160.5342 4366.4121 m-4160.5083 4366.4316 -4160.5205 4366.4629 -4160.4946 4366.4824 C-4159.9814 4366.1855 L-4160.2109 4366.0176 -4160.3828 4366.5249 -4160.5342 4366.4121 cf-4160.6855 4366.3828 m-4160.8843 4366.3135 -4160.9668 4366.4521 -4161.0132 4366.5 C-4160.9434 4366.3921 -4160.6416 4366.5332 -4160.6855 4366.3828 Cf-4178.2212 4366.4521 m-4178.2026 4366.4512 -4178.1782 4366.4473 -4178.1592 4366.4434 C-4178.1904 4366.4385 -4178.2109 4366.4434 -4178.2212 4366.4521 Cf-4182.7964 4366.9248 m-4182.8442 4367.0356 L-4181.9907 4366.8379 -4181.0273 4367.0391 -4180.125 4366.9521 C-4180.1855 4366.9922 L-4177.8945 4367.0352 -4175.7822 4366.8496 -4173.5088 4366.7646 C-4173.5444 4366.7773 -4173.5566 4366.8096 -4173.5933 4366.8223 c-4173.4834 4366.7842 -4173.3618 4366.7129 -4173.2388 4366.7217 C-4173.207 4366.7471 -4173.2734 4366.7744 -4173.3125 4366.7852 C-4172.833 4366.9688 -4171.9028 4366.6689 -4171.6025 4366.8105 C-4171.4678 4366.79 -4171.4082 4366.7144 -4171.4834 4366.6553 C-4169.7041 4366.6089 -4167.8013 4366.5732 -4165.9893 4366.4297 C-4165.9019 4366.4551 -4165.8862 4366.5049 -4165.9102 4366.5684 C-4164.3613 4366.2705 -4162.7378 4366.3892 -4161.1533 4366.4375 C-4161.0923 4366.3594 -4161.3145 4366.3545 -4161.1587 4366.2725 C-4161.668 4366.1753 -4162.0918 4366.4653 -4162.5537 4366.3223 C-4162.4946 4366.2471 L-4162.8311 4366.1992 -4162.5625 4366.4375 -4162.9116 4366.3398 C-4163.0488 4366.2773 -4162.877 4366.2441 -4162.9414 4366.2383 C-4163.6558 4366.2695 -4164.4014 4366.2012 -4165.0742 4366.3848 C-4165.2402 4366.2207 -4165.8418 4366.3789 -4166.1064 4366.2217 C-4166.291 4366.2871 -4166.4766 4366.2705 -4166.5469 4366.3789 C-4169.0479 4366.293 -4171.6025 4366.4512 -4174.165 4366.4385 C-4175.3638 4366.7568 -4176.7998 4366.3779 -4178.2227 4366.4844 C-4178.2324 4366.4736 -4178.2305 4366.4609 -4178.2212 4366.4521 C-4178.6855 4366.5303 -4179.3613 4366.5674 -4179.915 4366.5273 C-4180.3838 4366.6621 L-4183.7158 4366.3857 -4187.1201 4366.5801 -4190.5044 4366.4653 c-4194.3496 4366.3857 -4197.7188 4366.1577 -4201.4639 4366.5762 C-4201.459 4366.5444 -4201.4893 4366.5273 -4201.3926 4366.5156 C-4202.4731 4366.5791 -4203.458 4366.4653 -4204.4756 4366.5313 C-4204.4727 4366.5 L-4206.998 4366.7612 -4209.7295 4366.4653 -4212.1636 4366.7471 C-4215.1274 4366.7188 -4218.4785 4366.7471 -4221.6157 4366.8276 C-4221.6084 4366.7646 L-4224.1187 4366.8975 -4226.5444 4366.5645 -4229.0488 4366.6641 C-4231.625 4366.5215 -4234.3457 4367.0249 -4236.9434 4366.834 C-4238.5508 4366.5249 -4240.6621 4367.186 -4242.1719 4366.8672 C-4245.2734 4366.3848 -4248.2822 4366.6953 -4251.3828 4366.9844 C-4254.2432 4366.8125 -4257.0996 4367.2539 -4259.8701 4366.9028 C-4261.1826 4367.1279 -4262.6323 4366.625 -4264.0933 4366.6895 C-4264.041 4366.7676 L-4264.5654 4366.5313 -4265.209 4367.0977 -4265.5361 4366.7471 C-4265.4814 4366.7305 L-4265.7588 4366.5527 -4266.126 4367.1514 -4266.2949 4366.9385 C-4266.3398 4367.0273 L-4266.6758 4367.0527 -4266.3794 4366.9272 -4266.6387 4366.8921 C-4266.7363 4366.9028 -4266.6758 4367.0527 -4266.8794 4367.002 C-4266.9238 4366.6416 -4267.7026 4367.0801 -4267.7256 4366.6753 C-4267.542 4366.6753 -4268.0137 4366.5186 -4267.6011 4366.4336 C-4267.7188 4366.3921 -4268.2822 4366.4121 -4268.2314 4366.584 C-4268.2793 4366.7666 -4268.4995 4366.9258 -4268.1572 4367.0664 C-4268.0884 4366.9336 L-4267.9731 4367.0664 -4268.001 4367 -4267.9595 4367.0996 C-4267.5122 4367.1172 -4267.4521 4367.3105 -4267.1318 4367.3896 C-4267.1348 4367.3857 -4267.1377 4367.3828 -4267.1333 4367.376 C-4266.9141 4367.2168 -4266.6104 4367.3105 -4266.4375 4367.334 C-4266.3672 4367.4082 L-4266.2617 4367.5625 -4265.8584 4367.1055 -4265.9946 4367.3711 C-4265.085 4367.3052 -4264.043 4367.3081 -4263.0264 4367.3052 C-4262.8843 4367.2041 -4262.249 4367.3145 -4262.4707 4367.1201 c-4262.2163 4367.3418 -4261.46 4367.3975 -4261.1797 4367.3892 C-4261.1899 4367.4097 -4261.2021 4367.4336 -4261.2461 4367.4258 C-4260.7012 4367.7129 -4260.6006 4367.1592 -4260.0898 4367.5112 C-4260.0103 4367.2612 -4259.1626 4367.5903 -4258.874 4367.2983 C-4258.8105 4367.3535 -4258.79 4367.4028 -4258.8125 4367.4473 C-4257.8936 4367.4521 -4256.8789 4367.5425 -4256.1011 4367.5537 C-4255.4365 4367.3364 -4254.4922 4367.6523 -4253.9209 4367.3516 C-4253.4478 4367.416 -4252.6816 4367.54 -4252.0215 4367.4199 C-4252.085 4367.4561 L-4251.3398 4367.4385 -4250.4082 4367.4229 -4249.8965 4367.2344 C-4249.6763 4367.5225 -4249.3545 4367.4653 -4249.0317 4367.5566 C-4248.5342 4367.4229 -4247.5293 4367.4629 -4246.7695 4367.3418 C-4246.6533 4367.4746 -4246.1426 4367.2852 -4246.1035 4367.4785 C-4243.9756 4367.1055 -4241.3442 4367.2354 -4239.0718 4367.5176 C-4239.1045 4367.5313 L-4238.8096 4367.4258 -4238.4697 4367.1914 -4238.1699 4367.0537 C-4238.1406 4367.0713 -4238.1436 4367.1025 -4238.207 4367.1025 C-4237.792 4367.0664 -4237.4033 4367.2563 -4236.9893 4367.2207 C-4236.9922 4367.2524 -4236.9922 4367.2524 -4237.0596 4367.2832 C-4236.6709 4367.1973 -4236.2559 4367.4375 -4235.7964 4367.2881 C-4235.7715 4367.3394 L-4235.4785 4367.2676 L-4235.4858 4367.3311 -4235.4971 4367.4272 -4235.6533 4367.4063 C-4232.0898 4367.4688 -4228.4116 4367.1377 -4224.7529 4367.1855 C-4224.8877 4367.2461 L-4224.1782 4367.1377 L-4224.1816 4367.1699 -4224.2158 4367.1855 -4224.2495 4367.2002 C-4223.3457 4367.3081 -4222.4082 4367.1279 -4221.5273 4367.1553 C-4221.5317 4367.186 -4221.665 4367.248 -4221.542 4367.2832 C-4220.8896 4367.1089 -4220.4946 4367.5098 -4220.168 4367.1484 C-4220.1377 4367.1641 -4220.1172 4367.2461 -4220.1836 4367.2754 C-4218.3701 4367.1553 -4216.5078 4367.1621 -4214.6807 4367.2207 C-4213.1587 4366.8936 -4211.458 4367.1895 -4209.877 4366.9297 C-4209.8853 4366.9951 L-4207.8389 4366.7666 -4205.668 4367.0112 -4203.5469 4366.9653 C-4202.666 4366.9912 -4202.0708 4366.9141 -4201.1855 4366.9097 C-4201.1636 4366.9912 L-4199.6738 4366.6816 -4198.0322 4367.2695 -4196.4785 4366.9287 C-4196.585 4367.0391 L-4196.3442 4366.8682 -4195.6455 4367.0996 -4195.7373 4366.8057 C-4195.4629 4366.894 L-4194.4067 4366.5073 -4193.541 4367.0732 -4192.2471 4366.8223 C-4192.332 4366.8921 L-4191.9878 4366.8379 -4191.5869 4366.7944 -4191.332 4366.8594 C-4191.3716 4366.8691 -4191.3535 4366.8896 -4191.4346 4366.9082 C-4190.3574 4367.1836 -4189.1582 4366.8789 -4188.0215 4366.8896 C-4188.1499 4367.019 L-4187.6006 4366.8672 -4186.5923 4367.0088 -4185.8701 4366.9385 C-4185.9141 4367 L-4185.5483 4366.9141 L-4185.5391 4367.0356 L-4184.5986 4367.0444 -4183.7139 4366.9385 -4182.7964 4366.9248 Cf-4173.3125 4366.7852 m-4173.3154 4366.7842 -4173.3193 4366.7842 -4173.3228 4366.7813 C-4173.3506 4366.792 -4173.3369 4366.79 -4173.3125 4366.7852 Cf-4267.0166 4367.416 m-4267.0596 4367.4082 -4267.0957 4367.4004 -4267.1318 4367.3896 C-4267.123 4367.416 -4267.0532 4367.4097 -4267.0166 4367.416 cfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8141 8237.5195 m-7945.0332 8237.5195 L-7945.0332 8177.4902 L-8141 8177.4902 L-8141 8237.5195 Lnu0 O0.05 0.7 0.9 0 k-8120.96 8230.8955 m-8132.9639 8226.0898 -8138.4199 8229.7021 v-8133.6582 8229.5449 -8129.4912 8231.3584 v-8138.6182 8231.7275 -8141 8236.8398 v-8138.0234 8233.9424 -8131.0781 8235.2471 v-8124.1357 8236.5518 -8107.6685 8240.2129 -8112.8252 8234.6162 C-8116.0791 8233.2871 -8117.7061 8232.5586 -8120.96 8230.8955 Cf0.055556 0.84 1 0.17 k-8111.9961 8235.749 m-8114.1016 8234.0449 -8124.7441 8233.1914 -8123.4082 8229.2529 c-8122.0723 8225.3154 -8119.4971 8223.7803 Y-8117.6094 8223.7705 -8116.6665 8223.7441 -8114.7773 8223.6387 C-8112.7656 8233.1318 -8111.9961 8235.749 Vf0.05 0.7 0.9 0 k-8119.6641 8217.0352 m-8121.1621 8223.6094 -8121.9102 8224.8418 -8123.4082 8229.2529 C-8121.4229 8223.9375 -8114.9844 8227.1367 v-8108.1191 8230.5469 -8086.1914 8226.7344 -8100.6309 8216.9883 C-8108.2441 8217.7178 -8112.0508 8217.8418 -8119.6641 8217.0352 Cf0.055556 0.84 1 0.17 k-8123.9395 8198.7646 m-8121.7524 8199.9258 -8123.9355 8203.6357 v-8130.7813 8215.2607 -8129.6582 8222.1953 -8122.4814 8220.96 c-8115.3047 8219.7246 -8100.1719 8216.4629 -8096.8955 8220.2686 C-8098.9912 8211.6934 -8101.0435 8206.9561 -8103.1387 8197.0918 C-8120.4814 8191.4082 -8123.9395 8198.7646 vf0.05 0.7 0.9 0 k-7965.0723 8225.1074 m-7953.0664 8225.0674 -7947.6094 8230.3809 v-7952.3701 8228.1504 -7956.5381 8228.7031 v-7947.4121 8232.6455 -7945.0332 8237.2061 v-7948.0059 8233.9043 -7954.9512 8233.5869 v-7961.8965 8233.2695 -7978.3652 8235.502 -7973.2061 8228.1436 C-7969.9531 8226.8203 -7968.3252 8226.2021 -7965.0723 8225.1074 Cf0.055556 0.84 1 0.17 k-7974.0332 8229.7148 m-7971.9307 8227.4688 -7961.2852 8229.3174 -7962.6221 8223.8838 c-7963.9595 8218.4502 -7966.5313 8215.502 Y-7968.6274 8214.4795 -7969.6758 8213.9766 -7971.7715 8213.0029 C-7973.2666 8225.8047 -7974.0332 8229.7148 Vf0.05 0.7 0.9 0 k-7966.3633 8208.7129 m-7964.8662 8214.7227 -7964.1191 8217.7979 -7962.6221 8223.8838 C-7964.6523 8215.9443 -7971.0449 8218.1738 v-7980.6563 8221.5264 -7998.0996 8213.502 -7985.3984 8205.0527 C-7977.7852 8205.9531 -7973.9766 8206.6738 -7966.3633 8208.7129 Cf0.055556 0.84 1 0.17 k-7962.0938 8197.6973 m-7964.0264 8197.3486 -7962.0957 8200.4658 v-7955.3496 8211.3555 -7958.9688 8216.8799 -7966.1445 8211.9551 c-7973.3203 8207.0283 -7986.2949 8206.2852 -7989.5713 8209.5791 C-7987.1289 8201.6221 -7985.3359 8198.1074 -7982.8926 8193.3633 C-7965.5527 8192.5293 -7962.0938 8197.6973 vfu0.05 0.7 0.9 0 k-7977.4277 8198.8906 m-7991.8345 8199.5498 -8006.0845 8203.9424 -8019.8652 8208.1895 c-8035.4668 8212.9971 -8050.2051 8217.5391 -8065.1953 8217.1826 c-8070.2734 8217.0625 -8079.0762 8215.0566 -8088.3955 8212.9326 c-8105.1255 8209.1191 -8117.4551 8206.6201 -8124.5449 8208.0137 C-8125.6865 8208.1563 -8127.4863 8208.623 V-8127.7852 8211.7354 -8128.2598 8213.7598 Y-8124.8242 8203.8242 -8080.5723 8219.6992 -8065.2637 8220.0625 c-8035.9629 8220.7578 -8007.0166 8203.1299 -7977.2959 8201.7666 c-7960.2471 8200.9863 -7958.2988 8210.2754 Y-7958.8262 8207.6201 -7959.4404 8204.0898 V-7961.3857 8202.3799 -7962.8164 8201.3887 Y-7966.0762 8199.7373 -7970.7383 8198.584 -7977.4277 8198.8906 cf-8108.8848 8180.5986 m-8095.8828 8181.8857 -8082.5156 8185.1025 -8075.6255 8188.6016 c-8058.3325 8197.3857 -8039.5723 8194.7959 -8023.5039 8191.1035 C-8020.3438 8190.373 L-8005.0684 8186.8203 -7974.6387 8179.7451 -7962.6074 8185.3643 C-7961.5615 8185.665 -7959.9824 8186.707 V-7958.5977 8185.5166 -7956.7383 8186.1602 -7957.8906 8185.0713 c-7968.8496 8174.7002 -8007.0234 8184.3643 -8024.1484 8188.2979 c-8040.8721 8192.1387 -8058.4111 8194.1152 -8074.3213 8186.0342 c-8089.3535 8178.3994 -8130.4902 8173.1357 -8134.9609 8181.2246 c-8135.2578 8181.7617 -8134.5547 8181.8604 -8133.4473 8182.8203 C-8131.9785 8181.9453 -8130.71 8181.4883 Y-8127.6895 8180.2998 -8120.7485 8179.4248 -8108.8848 8180.5986 cf0.02 0.28 0.72 0 k-7959.9824 8186.707 m-7961.5615 8185.665 -7962.6074 8185.3643 Y-7974.6387 8179.7451 -8005.0684 8186.8203 -8020.3438 8190.373 C-8023.5039 8191.1035 L-8039.5723 8194.7959 -8058.3325 8197.3857 -8075.6255 8188.6016 c-8082.5156 8185.1025 -8095.8828 8181.8857 -8108.8848 8180.5986 c-8120.7485 8179.4248 -8127.6895 8180.2998 -8130.71 8181.4883 C-8131.9785 8181.9453 -8133.4473 8182.8203 V-8131.8018 8184.2451 -8129.2598 8187.5723 -8127.7524 8197.0723 c-8127.0684 8201.3867 -8127.1904 8205.5391 -8127.4863 8208.623 C-8125.6865 8208.1563 -8124.5449 8208.0137 Y-8117.4551 8206.6201 -8105.1255 8209.1191 -8088.3955 8212.9326 c-8079.0762 8215.0566 -8070.2734 8217.0625 -8065.1953 8217.1826 c-8050.2051 8217.5391 -8035.4668 8212.9971 -8019.8652 8208.1895 c-8006.0845 8203.9424 -7991.8345 8199.5498 -7977.4277 8198.8906 c-7970.7383 8198.584 -7966.0762 8199.7373 -7962.8164 8201.3887 C-7961.3857 8202.3799 -7959.4404 8204.0898 V-7960.1328 8200.1113 -7960.9385 8195.0215 -7961.2256 8191.3691 c-7961.4346 8188.7178 -7960.7891 8187.4014 -7959.9824 8186.707 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8141 8240.2129 m-8115.1089 8240.2129 L-8115.1089 8214.373 L-8141 8214.373 L-8141 8240.2129 Ln*u0 O0.62 0.04 0.93 0 k-8115.4077 8218.5938 m-8115.2969 8218.5098 -8115.1973 8218.4189 -8115.1089 8218.3213 C-8115.1089 8215.6016 L-8115.7085 8214.8594 -8116.7285 8214.373 -8117.5703 8214.373 c-8118.1948 8214.373 -8118.8989 8214.7383 -8119.1328 8215.0264 C-8119.2632 8215.1553 -8119.4199 8215.207 -8119.5752 8215.207 c-8119.7329 8215.207 -8119.8613 8215.1553 -8119.9141 8215.0498 c-8120.0957 8214.6602 -8120.4351 8214.3994 -8120.9048 8214.3994 c-8121.6592 8214.3994 -8124.5239 8217.0811 -8124.5239 8217.8379 c-8124.5239 8217.9678 -8124.4199 8218.0205 -8124.2373 8218.0205 c-8124.0029 8218.0205 -8123.6128 8217.916 -8123.2476 8217.7344 C-8123.0132 8217.6309 -8121.9199 8216.8223 -8121.6328 8216.8223 c-8121.2949 8216.8223 -8121.0605 8217.6309 -8120.7207 8217.6309 c-8120.4351 8217.6309 -8119.3408 8216.6406 -8119.0796 8216.457 c-8118.8452 8216.3008 -8118.0908 8215.5469 -8117.4399 8215.5469 c-8116.5288 8215.5469 -8115.6157 8216.0391 -8115.6157 8217.0303 c-8115.6157 8217.5518 -8116.4238 8219.0879 -8119.2632 8219.583 c-8119.5239 8219.6338 -8120.8765 8219.6104 -8121.1895 8219.6338 c-8121.5029 8219.6602 -8123.0391 8219.1914 -8123.3789 8219.1143 c-8124.4199 8218.8799 -8124.4985 8218.8799 -8126.4512 8218.8799 c-8126.5825 8218.8799 -8126.6606 8218.8799 -8126.6606 8218.8008 c-8126.6606 8218.749 -8126.6333 8218.6709 -8126.5557 8218.5664 C-8126.2949 8218.1768 -8126.0605 8217.6563 -8126.0605 8217.0566 c-8126.0605 8215.7275 -8127.4155 8214.373 -8128.9263 8214.373 c-8131.8428 8214.373 -8131.8428 8216.0928 -8131.8428 8216.3271 c-8131.8428 8216.875 -8131.5039 8217.9941 -8130.2549 8217.9941 c-8129.5508 8217.9941 -8129.2637 8217.6563 -8129.2637 8217.3438 c-8129.2637 8217.1094 -8129.3945 8216.9258 -8129.5771 8216.8477 c-8129.8389 8216.7441 -8129.9419 8216.6123 -8129.9419 8216.4834 c-8129.9419 8216.2227 -8129.5771 8215.9883 -8129.1343 8215.9883 c-8128.3262 8215.9883 -8127.5708 8216.7695 -8127.5708 8217.4219 c-8127.5708 8219.5059 -8131.9209 8220.1055 -8132.1548 8220.1035 c-8134.0254 8220.0928 -8135.2549 8221.1357 -8135.2168 8223.165 c-8135.1938 8224.5195 -8136.3892 8228.0625 -8138.2646 8228.0625 c-8138.8389 8228.0625 -8139.2813 8227.7246 -8139.2813 8227.0205 c-8139.2813 8226.3691 -8139.0991 8225.9258 -8138.8892 8225.9258 c-8138.7861 8225.9258 -8138.6548 8226.083 -8138.5254 8226.3691 C-8138.4727 8226.5264 -8138.2915 8226.6309 -8138.0825 8226.6309 c-8137.6133 8226.6309 -8137.0151 8226.2148 -8137.0151 8225.041 c-8137.0151 8223.8691 -8137.7183 8223.4014 -8138.4468 8223.4014 c-8139.7754 8223.4014 -8141 8224.5195 -8141 8226.8896 c-8141 8228.8438 -8139.75 8229.7803 -8138.6812 8229.7803 c-8137.6133 8229.7803 -8137.2495 8229.1816 -8136.8848 8228.8955 c-8136.7549 8228.792 -8136.6758 8228.7402 -8136.6245 8228.7402 c-8136.5469 8228.7402 -8136.52 8228.8184 -8136.52 8228.9746 c-8136.52 8229.5986 -8136.0508 8232.3867 -8136.0508 8232.959 c-8136.0508 8233.6875 -8136.0508 8239.6523 -8138.1089 8239.6523 c-8139.0728 8239.6523 -8139.5679 8238.8975 -8139.5679 8238.0107 c-8139.5679 8237.3594 -8138.6289 8236.502 -8138.3169 8236.0576 c-8137.7959 8235.3555 -8137.7959 8234.833 Y-8137.7959 8234.6777 -8137.8477 8234.5986 -8137.9517 8234.5742 C-8138.9678 8234.4434 -8139.1768 8234.3643 -8139.1768 8234.0791 c-8139.1768 8233.6104 -8138.4209 8232.8027 -8138.0303 8232.6211 c-8137.7437 8232.4902 -8137.6133 8232.2041 -8137.6133 8231.917 c-8137.6133 8231.6309 -8137.7437 8231.293 -8138.1865 8231.293 c-8139.2021 8231.293 -8140.9229 8233.9229 -8140.9229 8234.417 c-8140.9229 8234.8867 -8140.6616 8235.2246 -8140.27 8235.4082 c-8140.1665 8235.459 -8140.1143 8235.5898 -8140.1143 8235.7451 c-8140.1143 8235.9023 -8140.1665 8236.0576 -8140.2969 8236.1885 C-8140.5835 8236.4229 -8140.9468 8237.127 -8140.9468 8237.751 c-8140.9468 8238.5918 -8140.4604 8239.6123 -8139.7207 8240.2129 C-8137.0439 8240.2129 L-8136.9341 8240.1211 -8136.8301 8240.0205 -8136.7285 8239.9131 c-8136.4678 8239.6523 -8136.3125 8239.5488 -8136.1812 8239.5488 c-8136.0254 8239.5488 -8135.6089 8240.1475 -8135.4785 8240.1475 c-8134.8008 8240.1475 -8134.8008 8239.6006 -8134.8008 8238.4023 c-8134.8008 8238.2188 -8134.8535 8237.3867 -8134.8535 8237.2305 c-8134.8535 8236.9707 -8134.7754 8236.8398 -8134.6445 8236.8398 c-8134.5396 8236.8398 -8134.4102 8236.9434 -8134.2788 8237.1006 c-8133.5078 8238.0566 -8132.0596 8239.4658 -8130.0928 8240.2129 C-8124.5278 8240.2129 L-8123.3564 8239.752 -8122.4448 8239.0107 -8121.7349 8238.1416 C-8121.5425 8238.9922 -8120.9136 8240.2109 -8118.9766 8240.2109 c-8117.9438 8240.2109 -8117.0239 8239.6621 -8116.6079 8238.833 C-8115.6665 8238.502 -8115.1108 8237.4922 -8115.1108 8236.3447 c-8115.1108 8234.4082 -8116.3301 8233.7793 -8117.1797 8233.5859 C-8116.3096 8232.8789 -8115.5693 8231.9658 -8115.1089 8230.7949 C-8115.1089 8225.2285 L-8115.8564 8223.2617 -8117.2646 8221.8135 -8118.2207 8221.041 c-8118.3774 8220.9111 -8118.4551 8220.8066 -8118.4551 8220.7275 c-8118.4551 8220.3379 -8116.2148 8220.3115 -8115.7461 8220.3115 c-8115.4863 8220.3115 -8115.3564 8220.0781 -8115.3564 8219.8438 c-8115.3564 8219.6338 -8115.4336 8219.4531 -8115.6157 8219.4258 c-8115.8237 8219.4014 -8115.9551 8219.3486 -8115.9551 8219.2188 c-8115.9551 8219.0879 -8115.7988 8218.9053 -8115.4077 8218.5938 cf1 D-8118.2988 8236.7949 m-8118.23 8236.7822 -8118.1743 8236.7725 -8118.1421 8236.7725 c-8117.7783 8236.7725 -8117.2832 8237.1631 -8117.2832 8237.8672 c-8117.2832 8237.9238 -8117.2896 8237.9805 -8117.2998 8238.0371 C-8117.9854 8238.0234 -8118.3662 8237.5371 -8118.3662 8237.1777 c-8118.3662 8237.1152 -8118.3276 8236.9424 -8118.2988 8236.7949 Cf-8115.9185 8236.3711 m-8115.9185 8236.7617 -8116.0835 8237.2559 -8116.3872 8237.6045 C-8116.5181 8236.5723 -8117.4956 8235.9395 -8118.2471 8235.9395 c-8118.8208 8235.9395 -8119.1846 8236.1992 -8119.1846 8236.4863 c-8119.1846 8236.5195 -8119.1846 8236.5947 -8119.1509 8236.6709 C-8119.1812 8236.7891 -8119.1992 8236.9248 -8119.1992 8237.0742 c-8119.1992 8237.7568 -8118.6772 8238.625 -8117.8086 8238.8789 C-8118.1445 8239.1895 -8118.5825 8239.4043 -8118.9502 8239.4043 c-8120.4077 8239.4043 -8120.9292 8238.3867 -8120.9292 8237.5547 c-8120.9292 8237.3379 -8120.9209 8237.1504 -8120.8945 8236.9805 C-8120.4512 8236.3467 -8120.1064 8235.8672 -8119.8179 8235.5059 C-8119.4541 8235.2148 -8118.9736 8234.8711 -8118.3423 8234.4268 C-8118.1709 8234.3994 -8117.9849 8234.3906 -8117.7676 8234.3906 c-8116.9336 8234.3906 -8115.9185 8234.9121 -8115.9185 8236.3711 cf-8117.7261 8223.6201 m-8117.4141 8223.6201 -8115.6157 8224.8184 -8115.6157 8227.9697 c-8115.6157 8230.9355 -8117.3276 8233.8506 -8120.5757 8233.9063 C-8120.5781 8233.8789 -8120.5796 8233.8486 -8120.5796 8233.8193 c-8120.5796 8233.6943 -8120.7769 8231.9727 -8121.8911 8230.6113 C-8121.8086 8230.6211 -8121.7236 8230.627 -8121.6328 8230.627 c-8120.5132 8230.627 -8119.6274 8229.5059 -8119.6274 8228.5166 c-8119.6274 8227.5273 -8120.4351 8225.8867 -8122.9092 8225.8867 c-8125.1797 8225.8867 -8126.2173 8227.7227 -8126.3564 8229.0488 C-8127.6064 8229.3594 -8129.0449 8230.4023 -8129.0449 8232.4121 c-8129.0449 8234.8867 -8127.4048 8235.6943 -8126.4141 8235.6943 c-8125.4238 8235.6943 -8124.3047 8234.8086 -8124.3047 8233.6875 c-8124.3047 8233.6182 -8124.3086 8233.5498 -8124.3145 8233.4863 C-8123.0869 8234.4258 -8121.7246 8234.7422 -8121.5029 8234.7422 c-8121.4751 8234.7422 -8121.4468 8234.7432 -8121.4199 8234.7451 C-8121.5645 8237.8838 -8124.1621 8239.7051 -8127.3516 8239.7051 c-8129.6436 8239.7051 -8132.3008 8238.2715 -8132.3008 8237.2822 c-8132.3008 8236.8662 -8131.5181 8236.7881 -8131.3628 8236.7881 c-8131.2588 8236.7881 -8130.6592 8236.917 Y-8130.5293 8236.917 -8130.4512 8236.8135 -8130.4512 8236.6826 c-8130.4512 8236.4482 -8131.0767 8235.4854 -8132.0132 8235.4854 c-8132.5352 8235.4854 -8133.2383 8235.4336 -8133.4727 8235.1465 c-8133.6289 8234.9648 -8134.1499 8233.792 -8134.1499 8233.5586 c-8134.1499 8233.4268 -8134.0708 8233.3496 -8133.9155 8233.3496 c-8133.7075 8233.3496 -8132.7949 8233.5313 -8132.6133 8233.5313 c-8131.2329 8233.5313 -8130.2168 8232.7246 -8130.2168 8231.2656 c-8130.2168 8231.1104 -8130.2432 8230.5371 -8130.4775 8230.5371 c-8130.6079 8230.5371 -8130.9727 8231.084 -8131.1021 8231.084 c-8131.2329 8231.084 -8131.3101 8231.0059 -8131.3101 8230.875 c-8131.3101 8230.8496 -8131.2075 8230.1982 -8131.2075 8230.0938 c-8131.2075 8229.1309 -8131.8325 8228.8184 -8132.0669 8228.8184 c-8132.5605 8228.8184 -8132.8213 8229.208 -8132.8213 8229.7295 c-8132.8213 8229.8594 -8132.7949 8229.9902 -8132.7695 8230.1465 C-8132.6133 8230.8242 -8132.0669 8231.084 -8132.0669 8231.6309 c-8132.0669 8232.3867 -8133.0557 8232.6465 -8133.8115 8232.6465 c-8134.7231 8232.6465 -8135.2695 8231.0313 -8135.2695 8229.3115 c-8135.2695 8228.2832 -8134.8765 8226.8027 -8134.4009 8225.6357 c-8133.9727 8224.5898 -8132.9492 8224.6113 -8132.5552 8224.5322 c-8132.5449 8224.5313 -8131.5605 8224.3291 -8131.2412 8224.0352 c-8130.8276 8223.6523 -8130.6992 8222.832 -8130.6982 8222.8203 c-8130.6621 8222.4648 -8130.6807 8221.3145 -8129.5845 8220.8789 c-8128.4326 8220.4219 -8127.0088 8220.0518 -8126.0088 8220.0518 c-8124.2896 8220.0518 -8122.6748 8220.5986 -8122.6748 8221.5098 c-8122.6748 8222.2656 -8122.9355 8222.8906 -8123.6909 8222.8906 c-8124.2373 8222.8906 -8124.4985 8222.3438 -8125.1758 8222.1875 C-8125.3325 8222.1611 -8125.4629 8222.1357 -8125.5918 8222.1357 c-8126.1133 8222.1357 -8126.5039 8222.3965 -8126.5039 8222.8906 c-8126.5039 8223.125 -8126.1919 8223.749 -8125.2285 8223.749 c-8125.1235 8223.749 -8124.4717 8223.6465 -8124.4453 8223.6465 c-8124.3154 8223.6465 -8124.2373 8223.7246 -8124.2373 8223.8545 c-8124.2373 8223.9854 -8124.7837 8224.3486 -8124.7837 8224.4795 c-8124.7837 8224.7148 -8124.2109 8224.7402 -8124.0552 8224.7402 c-8123.0918 8224.7402 -8121.7896 8224.1152 -8121.7896 8222.6563 c-8121.7896 8222.4736 -8121.9717 8221.6143 -8121.9717 8221.4063 c-8121.9717 8221.249 -8121.8936 8221.1719 -8121.7637 8221.1719 c-8121.0332 8221.1719 -8119.8096 8221.875 -8119.8096 8223.4375 c-8119.8096 8224.167 -8118.9502 8224.8701 -8118.6108 8224.8701 c-8118.4028 8224.8701 -8117.9604 8223.6201 -8117.7261 8223.6201 cf-8126.3271 8230.0811 m-8126.2246 8230.877 -8125.9595 8231.5469 -8125.6016 8232.1055 C-8125.6357 8232.1016 -8125.6636 8232.0986 -8125.6846 8232.0986 c-8126.0493 8232.0986 -8126.4668 8232.2559 -8126.7012 8232.4902 C-8126.9355 8232.6982 -8127.1436 8232.8027 -8127.3262 8232.8027 c-8127.5869 8232.8027 -8127.8472 8232.543 -8127.8472 8231.9434 c-8127.8472 8230.8379 -8127.0615 8230.3145 -8126.3271 8230.0811 Cf-8122.8311 8228.1777 m-8123.1172 8228.2822 -8123.2476 8228.7246 -8123.2476 8229.1152 c-8123.2476 8229.2188 -8123.23 8229.3633 -8123.1836 8229.5215 C-8123.7646 8229.2002 -8124.4727 8228.9883 -8125.3354 8228.9531 C-8125.1729 8228.1582 -8124.6836 8227.0576 -8123.2739 8227.0576 c-8122.4409 8227.0576 -8122.3101 8227.6826 -8122.3101 8227.7607 c-8122.3101 8227.9434 -8122.4927 8228.0742 -8122.8311 8228.1777 Cf-8125.3936 8229.9131 m-8125.3589 8229.9121 -8125.3247 8229.9121 -8125.2949 8229.9121 c-8123.5078 8229.9121 -8121.7461 8231.6104 -8121.4556 8233.8311 C-8123.5215 8233.4395 -8125.2188 8231.5752 -8125.3936 8229.9131 Cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 D0 J 0 j 1 w 4 M []0 d0 XR-8140.8833 8240.168 m-8049.0479 8240.168 L-8049.0479 8235.8887 L-8140.8833 8235.8887 L-8140.8833 8240.168 Ln0 O0 0 0 1 k-8140.6631 8237.4883 m-8141 8237.5547 -8140.4814 8237.7441 -8140.8833 8237.6016 C-8140.8379 8237.4834 -8140.7725 8237.3945 -8140.6631 8237.4883 Cf-8050.1675 8237.6543 m-8051.2524 8238.417 -8052.6816 8237.6465 -8053.8701 8238.1328 C-8054.0098 8238.165 -8053.8345 8237.7148 -8054.1484 8237.8154 C-8055.3008 8238.4082 -8057.1162 8238.0547 -8058.5195 8237.5977 C-8058.4346 8237.4795 L-8058.7017 8237.3945 -8059.0283 8237.7852 -8059.3115 8237.7305 C-8059.3135 8237.6523 -8059.2207 8237.6191 -8059.2861 8237.5117 C-8059.3574 8237.748 -8059.7983 8237.6211 -8059.9185 8237.7969 C-8060.0303 8237.7051 -8060.0195 8237.5176 -8060.1641 8237.4141 C-8060.3262 8237.6826 L-8060.7769 8238.3223 -8061.4209 8237.6387 -8062.0361 8237.9688 C-8062.0063 8237.9063 -8061.9453 8237.8574 -8061.9941 8237.7969 C-8062.9814 8238.1855 -8064.2168 8238.1133 -8065.3208 8238.2559 C-8065.2769 8238.1611 -8065.2363 8237.9883 -8065.3008 8237.8809 C-8065.3555 8238.1641 -8065.6963 8238.2354 -8065.9922 8238.291 C-8066.1255 8238 -8066.4995 8238.5566 -8066.8467 8238.3965 C-8066.8169 8238.332 L-8067.0732 8238.6367 -8067.1973 8238.1563 -8067.4053 8238.5215 C-8067.5684 8238.293 L-8067.6807 8238.7031 -8067.9395 8238.0801 -8068.1514 8238.2891 C-8068.1445 8238.373 L-8068.3442 8238.4727 -8068.4482 8238.2666 -8068.6338 8238.3359 C-8068.6514 8238.2891 L-8069.0854 8238.3965 -8069.3379 8238.168 -8069.3271 8238.4883 C-8069.4795 8238.2314 -8068.9063 8238.3711 -8069.1455 8237.998 C-8070.5732 8238.3281 -8072.0459 8238.2637 -8073.4834 8238.2695 C-8073.6465 8238.1406 -8073.7505 8238.1016 -8073.7871 8237.9805 C-8073.9307 8238.0449 -8074.3281 8238.0391 -8074.4585 8238.2031 C-8074.4102 8238.1963 -8074.5513 8238.0391 -8074.6274 8238.0234 C-8074.8887 8237.9023 -8074.9131 8238.375 -8075.2002 8238.2314 C-8075.0859 8238.1465 -8075.0469 8238.043 -8075.0854 8237.9238 C-8075.3301 8238.1738 -8075.6577 8238.1338 -8075.9473 8238.2148 C-8075.9023 8238.1611 -8075.8325 8238.1289 -8075.8433 8238.0283 C-8076.1602 8238.3115 -8076.4209 8237.9688 -8076.6982 8238.1475 C-8076.5947 8237.9629 L-8077.0415 8237.7383 -8076.7266 8238.3496 -8077.1128 8238.2168 C-8077.02 8238.1582 -8077.0527 8238.0859 -8077.0361 8238.0107 C-8077.3965 8238.3467 -8077.9795 8238.2354 -8078.3389 8238.3496 C-8078.3174 8238.3242 -8078.3232 8238.2734 Y-8078.7148 8238.3154 -8079.1245 8238.2109 -8079.5552 8238.3574 C-8079.7119 8238.2754 -8079.5039 8237.9063 -8079.9185 8237.9746 C-8079.9033 8238.3457 -8080.6221 8238.127 -8080.3779 8238.5469 C-8080.7319 8238.4863 -8081.2925 8238.3467 -8081.5283 8238.4727 C-8081.3691 8238.332 -8081.7007 8238.0195 -8081.4063 8237.9883 C-8081.6289 8237.7627 L-8081.5957 8237.6113 -8081.3999 8237.8145 -8081.4707 8237.623 C-8081.6182 8237.6387 -8082.0479 8237.7852 -8082.1797 8237.7246 C-8082.4531 8237.9521 -8082.7041 8238.377 -8083.1465 8238.4238 C-8082.9385 8238.2793 -8083.2646 8238.0146 -8083.1235 8237.9512 C-8083.7407 8238.6621 L-8083.8877 8238.6797 -8083.7725 8238.3691 -8083.9854 8238.4658 C-8083.9746 8238.5645 -8084.0674 8238.625 -8084.1318 8238.7051 C-8084.1875 8238.6621 -8084.7441 8238.7969 -8084.8081 8238.4316 C-8084.8735 8238.2891 -8084.5684 8238.3555 -8084.7314 8238.2246 C-8085.0029 8238.2285 -8085.0151 8238.3535 -8085.2871 8238.3594 C-8085.2925 8238.3105 L-8085.4717 8238.2559 -8085.8213 8238.4658 -8085.6265 8238.668 C-8085.5015 8238.6797 -8085.6738 8238.4482 -8085.4888 8238.5547 C-8085.6152 8238.7666 -8085.9312 8238.8262 -8086.2031 8238.8301 C-8086.1104 8238.7715 -8086.1216 8238.6738 -8086.0845 8238.5703 C-8086.4497 8238.8574 -8086.8369 8238.9482 -8087.2451 8239.0684 C-8087.2515 8239.2422 -8087.0928 8238.752 -8087.0327 8238.8438 C-8087.5557 8238.6025 -8088.1128 8239.1855 -8088.5479 8238.833 C-8088.4766 8238.8027 -8088.5098 8239.0801 -8088.5146 8239.0313 C-8088.7666 8239.0098 -8088.7549 8238.7578 -8088.9189 8238.8506 C-8088.9355 8238.7031 -8089.1255 8238.8984 -8089.2944 8238.9434 C-8089.3818 8239.0498 -8089.3384 8238.8711 -8089.1914 8238.8555 C-8089.4268 8238.9805 -8090.3691 8239.207 -8090.9131 8238.9922 C-8090.9023 8239.0898 -8091.2471 8239.3506 -8091.3721 8239.3398 C-8091.3232 8239.1113 L-8091.4375 8238.9746 -8091.7422 8239.1309 -8091.7632 8238.9355 C-8092.0303 8239.2129 -8090.7344 8238.6992 -8091.0957 8238.9131 C-8091.1895 8238.7227 -8091.5991 8239.2773 -8091.5215 8238.9658 C-8091.7725 8238.9746 -8092.0161 8239.2314 -8092.2559 8239.0176 C-8092.1865 8239.0547 -8092.0522 8238.7002 -8092.2549 8238.7168 C-8092.6123 8238.7578 -8092.3564 8238.8262 -8092.6465 8238.9023 C-8092.8281 8238.9961 L-8092.8398 8239.2188 -8093.1475 8238.9658 -8093.0146 8239.2148 C-8093.0586 8239.0313 -8093.5337 8239.3281 -8093.4971 8238.959 C-8093.4473 8238.668 L-8093.6016 8238.6895 -8093.7002 8238.9746 -8093.8213 8239.1025 C-8093.8418 8239.0762 -8093.8823 8239.0176 -8093.8745 8238.9707 C-8093.8994 8239.416 -8094.2432 8238.9336 -8094.4268 8239.2773 C-8094.7505 8239.123 -8095.2495 8239.2637 -8095.4023 8238.9863 C-8095.6514 8239.1211 -8095.8784 8239.2813 -8096.1621 8239.1855 C-8096.1055 8239.1436 -8096.0283 8239.1309 -8096.0122 8239.0352 C-8096.1904 8238.9043 -8096.2344 8239.0215 -8096.3975 8239.0938 C-8096.3608 8239.0273 -8096.7539 8238.833 -8096.9521 8238.6758 C-8097.1992 8238.8086 -8097.1143 8239.0488 -8097.1392 8239.1953 C-8097.3652 8238.7559 -8097.8379 8239.4785 -8098.1211 8239.0801 C-8098.0352 8239.0195 -8097.7598 8238.8643 -8097.9658 8238.7539 C-8098.1919 8238.3154 -8098.4219 8239.0781 -8098.7861 8238.8672 C-8098.6968 8239.2314 L-8098.8594 8239.0059 -8099.2334 8239.4434 -8099.1963 8239.0723 C-8099.3184 8239.2031 -8099.6265 8238.9512 -8099.5859 8239.3066 C-8100.1846 8239.0059 -8101.0425 8239.4883 -8101.4102 8238.8506 C-8101.4961 8238.9102 -8101.7104 8238.8496 -8101.6665 8239.0322 C-8101.5239 8239.2305 -8101.4673 8238.8906 -8101.4141 8239.0254 C-8101.4912 8239.0361 -8101.5078 8239.1338 -8101.5161 8239.1826 C-8101.7021 8239.1016 -8101.8486 8239.0762 -8101.6729 8238.7803 C-8102.0869 8238.5605 -8102.1001 8239.3848 -8102.6274 8239.2461 C-8102.6035 8239.0986 -8102.6436 8239.043 -8102.7979 8239.0664 C-8103.0903 8239.3184 L-8103.4312 8239.2598 -8103.2842 8238.9834 -8103.2925 8238.7344 C-8103.4746 8238.7773 -8103.6973 8238.7656 -8103.7803 8238.9512 C-8104.0015 8238.6387 L-8103.8398 8238.8643 -8104.1514 8238.7891 -8104.2368 8238.8496 C-8104.1514 8238.7891 L-8104.1846 8238.6826 -8104.3955 8238.748 -8104.5024 8238.7793 C-8104.4766 8238.9336 -8104.2617 8238.9961 -8104.1445 8239.041 C-8104.2373 8239.1504 -8104.3823 8239.125 -8104.5059 8239.2539 C-8104.4648 8239.0098 -8104.8027 8239.0801 -8104.9473 8239.0547 C-8105.1133 8239.002 -8105.1348 8239.2734 -8105.1831 8239.2656 C-8105.1875 8239.1387 -8105.4541 8239.2441 -8105.3247 8239.0664 C-8105.2681 8239.0254 -8105.1953 8239.1895 -8105.1016 8239.0781 C-8105.2109 8238.9834 -8105.1982 8238.7627 -8105.4258 8238.9238 C-8105.5967 8239.0449 -8105.3818 8239.4063 -8105.7061 8239.252 C-8105.6211 8239.1914 -8105.6055 8239.0938 -8105.5391 8239.0059 C-8105.8433 8238.8789 L-8105.8564 8239.1016 L-8105.8975 8239.0449 -8105.8691 8239.0254 -8105.8877 8238.9961 C-8105.9785 8239.2305 -8106.3521 8239.0684 -8106.4209 8239.332 C-8106.5742 8239.3555 -8106.7441 8239.1777 -8106.8906 8239.1523 C-8106.8623 8239.1328 L-8107.0415 8239.002 -8107.2793 8239.0879 -8107.4297 8239.2383 C-8107.4219 8239.1895 L-8107.5195 8239.1719 -8107.7505 8239.207 -8107.8735 8239.3379 C-8108.1201 8239.1699 -8107.9561 8238.4971 -8108.2295 8238.7773 C-8108.48 8238.7852 -8108.6221 8239.1855 -8108.5215 8239.3281 C-8108.9717 8239.1777 -8109.4834 8239.541 -8109.9009 8239.1953 C-8109.9658 8239.2852 -8109.9248 8239.3418 -8110.0586 8239.3945 C-8110.7197 8239.3066 -8111.4551 8239.6582 -8111.9814 8239.2207 C-8111.79 8239.127 -8111.9688 8238.998 -8111.9727 8238.8711 C-8112.1309 8239.0703 -8112.1631 8238.6641 -8112.2197 8239.0059 C-8112.2041 8239.207 -8112.2197 8239.3047 -8112.0337 8239.3857 C-8112.4282 8239.4941 -8113.0283 8239.4941 -8113.2471 8239.3066 C-8113.1377 8239.3994 -8113.2227 8239.4609 -8113.3086 8239.5215 C-8113.2803 8239.2002 -8113.5713 8239.1523 -8113.7915 8239.2656 C-8113.8223 8239.4609 L-8113.9658 8239.2598 L-8114.0503 8239.3223 -8114.0591 8239.6699 -8114.2773 8239.4824 C-8114.2891 8239.4063 -8114.3018 8239.3291 -8114.3418 8239.2734 C-8114.5693 8239.4336 -8114.8906 8239.7051 -8115.1377 8239.5391 C-8115.3398 8239.2539 L-8115.4453 8239.2852 -8115.6235 8239.457 -8115.4375 8239.5391 C-8115.8594 8239.3672 -8116.1309 8239.3457 -8116.2646 8239.0986 C-8116.9912 8239.7002 -8118.0459 8239.7246 -8118.8906 8239.6816 C-8118.8652 8239.5352 L-8119.0923 8239.3984 -8118.9834 8239.791 -8119.1416 8239.6895 C-8119.0684 8239.5498 -8119.3145 8239.3857 -8119.1362 8239.2148 C-8119.4609 8239.0605 -8119.5547 8239.4688 -8119.7656 8239.5352 C-8119.7979 8239.7275 -8119.5957 8239.4121 -8119.6367 8239.6563 C-8119.6729 8239.7246 -8120.0859 8239.5059 -8120.1362 8239.7969 C-8120.2178 8239.6826 -8120.1543 8239.4688 -8120.1104 8239.3506 C-8120.3086 8239.4922 L-8120.5513 8239.1523 -8119.7559 8238.8848 -8120.0107 8238.4658 C-8120.1934 8238.5117 L-8120.3682 8238.207 -8119.71 8238.168 -8120.1689 8238.0635 C-8120.3682 8238.207 -8120.5381 8238.6289 -8120.3608 8238.7578 C-8120.7754 8238.8379 -8120.5527 8239.4512 -8120.9985 8239.4268 C-8121.1201 8239.2559 -8120.6416 8239.3857 -8120.7275 8239.1465 C-8120.9375 8238.9121 -8121.1484 8239.2773 -8121.3354 8239.1953 C-8121.1279 8239.3047 -8121.3032 8239.5986 -8121.4375 8239.6523 C-8121.6641 8239.5146 -8121.29 8239.377 -8121.6113 8239.3467 C-8121.6641 8239.5146 -8121.9595 8239.6406 -8121.7041 8239.7578 C-8121.8203 8240.1387 -8122.0381 8239.6523 -8122.2129 8239.9473 C-8122.3174 8239.6797 -8121.8823 8239.3281 -8122.2354 8239.1943 C-8122.1792 8239.4521 -8122.6704 8239.5449 -8122.4839 8239.9277 C-8122.6221 8239.8535 -8122.6367 8239.6504 -8122.5361 8239.4922 C-8122.7334 8239.333 -8123.0151 8239.9629 -8123.0801 8239.4512 C-8123.1479 8239.7148 L-8123.21 8239.6289 -8123.2983 8239.5645 -8123.3994 8239.4219 C-8123.5732 8239.417 -8123.96 8239.7793 -8123.9443 8239.3809 C-8124 8239.4219 -8124.3975 8239.4043 -8124.2441 8239.6797 C-8123.9971 8239.8477 -8123.96 8239.4785 -8123.8223 8239.8506 C-8123.9971 8239.5469 -8124.1787 8239.8906 -8124.3213 8239.9922 C-8124.3447 8239.8379 L-8124.4297 8239.8984 -8124.6255 8239.8643 -8124.6787 8240.0313 C-8124.6133 8239.9434 -8124.6475 8239.8379 -8124.7148 8239.8008 C-8124.8042 8240.0352 L-8125.1494 8240.1523 -8124.8857 8239.623 -8125.2217 8239.6914 C-8124.9663 8239.5098 L-8125.0225 8239.5488 -8125.1367 8239.3291 -8125.2979 8239.4023 C-8125.3604 8239.6162 -8125.4775 8239.873 -8125.5313 8240.0391 C-8125.7207 8240.1328 -8125.6162 8239.7979 -8125.8027 8240.0176 C-8125.5586 8239.7598 L-8125.5215 8239.6895 -8125.7231 8239.4063 -8125.9761 8239.4121 C-8126.1377 8239.4863 -8126.3887 8239.7949 -8126.1338 8239.9121 C-8126.2607 8239.916 -8126.4385 8239.7852 -8126.3379 8239.6289 C-8126.6255 8239.7031 -8126.2998 8239.8594 -8126.5479 8239.9922 C-8126.6494 8239.8496 -8126.9658 8239.6465 -8127.1563 8239.4395 C-8126.8975 8239.0811 L-8127.0693 8239.0781 L-8126.8467 8238.791 -8127.1826 8238.8594 -8127.0566 8238.5566 C-8127.1743 8238.5098 -8127.3169 8238.6123 -8127.4307 8238.6914 C-8127.0864 8239.1758 -8127.8159 8239.3535 -8127.7158 8239.7949 C-8128.1875 8239.916 -8128.0107 8238.7207 -8128.5024 8239.4121 C-8128.4219 8239.5273 -8128.6533 8239.8633 -8128.3564 8239.7354 C-8128.6494 8239.6875 -8128.5557 8240.1787 -8128.9014 8239.9961 C-8128.6455 8239.8145 -8129.1763 8239.5488 -8128.8066 8239.2852 C-8128.8311 8239.4316 -8128.6001 8239.3965 -8128.5435 8239.3555 C-8128.6641 8239.1855 -8128.5186 8238.9102 -8128.8184 8238.9102 C-8129.0015 8238.9521 -8129.2524 8238.9609 -8129.2158 8239.1914 C-8129.2085 8239.4443 -8128.9365 8239.1641 -8129.0537 8239.4199 C-8129.4185 8239.5078 -8129.4795 8239.123 -8129.6304 8239.5723 C-8129.3999 8239.5361 -8129.3423 8239.7969 -8129.3467 8239.9707 C-8129.6143 8240.0762 L-8129.5625 8239.9082 L-8129.9922 8239.7871 -8129.6895 8240.2129 -8130.1055 8240.168 C-8130.3008 8239.8359 L-8130.2017 8239.5498 -8129.6953 8239.9629 -8129.7695 8239.4971 C-8130.04 8239.4785 -8130.1299 8239.7148 -8130.3848 8239.5947 C-8130.3281 8239.5547 -8130.2505 8239.543 -8130.1943 8239.502 C-8130.2915 8239.4863 -8130.3877 8238.8691 -8130.7734 8239.2305 C-8130.9727 8239.3711 -8130.8262 8239.3965 -8130.8311 8239.5703 C-8131.2656 8239.623 -8131.3955 8239.8008 -8131.6753 8239.8281 C-8131.6177 8239.4883 -8132.1699 8239.7949 -8131.8608 8239.4473 C-8131.7188 8239.6465 -8131.0903 8239.627 -8130.9365 8239.3027 C-8131.0947 8238.8994 -8130.5952 8239.3594 -8130.5024 8238.9512 C-8130.8506 8238.9414 -8130.8335 8238.5449 -8130.8896 8238.2852 C-8130.9863 8238.2666 -8131.0801 8238.377 -8131.1377 8238.417 C-8131.1787 8238.6621 -8131.0522 8238.6582 -8131.0449 8238.9102 C-8131.4336 8238.8438 -8131.8081 8238.9805 -8132.0225 8239.2188 C-8132.1523 8239.0977 -8132.1113 8238.8535 -8131.9575 8238.8301 C-8132.4199 8238.9023 -8132.9141 8238.8691 -8133.3535 8238.7949 C-8133.0693 8239.1943 -8133.8433 8238.8887 -8133.6494 8239.2207 C-8133.4141 8239.3105 -8133.2119 8239.5947 -8133.3418 8239.7734 C-8133.4888 8239.748 -8133.3369 8239.5986 -8133.3984 8239.5137 C-8133.5859 8239.7314 -8133.6895 8239.1641 -8133.8735 8239.5078 C-8133.4512 8239.3789 -8133.7915 8239.0215 -8133.7139 8238.709 C-8134.0186 8238.8848 -8133.7007 8238.4863 -8134.0024 8238.4863 C-8134.3057 8238.6602 -8134.6787 8238.7969 -8135.0161 8238.8643 C-8135.4399 8238.5684 -8136.0898 8238.8594 -8136.4683 8238.8711 C-8136.6665 8238.7129 -8136.5322 8238.3594 -8136.7471 8238.2979 C-8136.9995 8238.3047 -8136.5601 8238.6797 -8136.9336 8238.5176 C-8136.8975 8238.4473 L-8137.0107 8238.5293 -8137.5825 8238.207 -8137.6929 8238.7148 C-8137.5776 8238.332 L-8137.6475 8238.2969 -8137.7119 8238.3848 -8137.7695 8238.4258 C-8137.7725 8238.3008 -8137.8535 8238.1875 -8137.7402 8238.1055 C-8137.9707 8237.8418 -8138.2241 8238.1475 -8138.4746 8238.1582 C-8138.3135 8238.3848 L-8138.7422 8238.5625 -8139.0293 8238.3379 -8139.4443 8238.417 C-8139.4316 8238.1953 L-8139.6787 8238.3281 L-8139.6182 8238.1133 -8139.8447 8237.9746 -8139.9751 8238.1543 C-8139.3335 8237.6113 L-8139.1553 8237.7422 -8139.5283 8237.8789 -8139.4165 8238.0977 C-8139.3213 8238.2891 -8138.9375 8238.2285 -8138.8755 8238.0146 C-8139.0225 8237.9902 -8139.0293 8238.0391 -8139.1436 8238.1191 C-8139.1919 8237.8105 -8138.9688 8237.8223 -8138.8584 8237.6162 C-8138.9355 8237.6289 -8139.0449 8237.5352 -8139.0615 8237.6328 C-8138.9102 8237.4824 -8138.7578 8237.459 -8138.5059 8237.4512 C-8138.6763 8237.5723 -8138.4131 8237.6426 -8138.4775 8237.7305 C-8138.4575 8237.459 -8138.2168 8237.375 -8137.9053 8237.4512 C-8137.6831 8237.7656 -8137.3208 8237.249 -8136.96 8237.3359 C-8137.1064 8237.6113 -8137.2935 8237.832 -8137.5127 8237.9434 C-8137.2861 8238.0811 -8137.2607 8237.9355 -8137.0337 8238.0742 C-8136.9238 8237.8691 -8136.8457 8237.5547 -8136.5503 8237.4297 C-8136.5342 8237.6328 L-8136.2666 8237.5293 -8136.2666 8237.2285 -8135.9258 8237.2852 C-8135.3418 8237.3848 -8134.7407 8237.3848 -8134.2949 8237.4102 C-8134.2783 8237.6123 L-8134.0303 8237.1787 -8133.4521 8237.4521 -8133.1182 8237.2598 C-8132.5503 8237.4551 -8131.8848 8237.0664 -8131.5938 8237.416 C-8130.5913 8237.2598 -8129.7148 8237.1074 -8128.6768 8237.1816 C-8128.8516 8237.4766 L-8128.6655 8237.2598 -8128.7305 8237.6465 -8128.5479 8237.6025 C-8128.7578 8237.3672 -8128.2949 8237.2969 -8128.1665 8237.1162 C-8127.7041 8237.3457 -8127.1104 8237.0957 -8126.7007 8236.8887 C-8126.6846 8237.0918 L-8126.2705 8236.7109 -8125.7759 8237.0449 -8125.2598 8237.1074 C-8125.2007 8237.1914 -8125.1074 8237.3818 -8124.9536 8237.3594 C-8124.6738 8237.0313 -8124.5273 8237.0547 -8124.1167 8236.8496 C-8123.8169 8236.8496 -8123.3301 8236.9307 -8123.0254 8237.0586 C-8121.8975 8236.5977 -8120.7456 8236.8926 -8119.5732 8236.6152 C-8119.4888 8236.8535 L-8118.3521 8236.3438 -8116.9541 8236.8066 -8115.9839 8236.5449 C-8116.0776 8236.9521 L-8115.7734 8237.0781 -8115.3843 8236.8457 -8115.4619 8236.5566 C-8115.1567 8236.6816 -8114.7007 8236.3594 -8114.5068 8236.6943 C-8114.1953 8236.7695 -8114.1255 8236.5059 -8113.8662 8236.4512 C-8113.2422 8236.6055 -8113.0107 8236.5703 -8112.4224 8236.4941 C-8112.5684 8236.4688 L-8112.6328 8236.5586 -8112.6387 8236.7314 -8112.4922 8236.7578 C-8112.2725 8236.6445 -8111.6846 8236.8672 -8111.9033 8236.3809 C-8111.2754 8236.6621 -8110.4385 8236.1523 -8109.8271 8236.5313 C-8109.8789 8236.3984 -8109.7246 8236.373 -8109.6602 8236.2832 C-8109.1089 8236.2773 -8108.5293 8236.5488 -8108.0898 8236.3223 C-8108.0024 8236.3887 -8108.2295 8236.5488 -8108.0049 8236.5625 C-8107.8721 8236.5117 -8108.0024 8236.3887 -8107.8384 8236.3145 C-8106.9453 8236.0664 -8106.0303 8236.5703 -8105.2188 8236.5059 C-8103.7754 8236.249 -8102.2695 8236.3789 -8100.8867 8236.3359 C-8100.9023 8236.4336 L-8100.4395 8236.0605 -8099.8159 8236.8154 -8099.4463 8236.2539 C-8099.3369 8236.3467 -8099.0283 8236.2979 -8099.1094 8236.4863 C-8098.7407 8236.2227 -8098.0771 8236.7344 -8097.5439 8236.3994 C-8097.5928 8236.3906 -8097.6211 8236.4102 -8097.6777 8236.4521 C-8097.1392 8236.668 -8096.6641 8236.373 -8096.0957 8236.5684 C-8096.1533 8236.6104 -8096.2583 8236.6406 -8096.2754 8236.7383 C-8096.0557 8236.9258 -8095.7549 8236.3262 -8095.6348 8236.7969 C-8095.5088 8236.793 -8095.5449 8236.5605 -8095.6221 8236.5742 C-8094.3779 8236.7578 -8093.0498 8236.457 -8091.7549 8236.3496 C-8090.8271 8236.6309 -8091.6982 8237.1426 -8090.9663 8236.791 C-8090.9063 8236.8818 -8090.9229 8236.6113 -8090.9131 8236.709 C-8090.6299 8236.5771 -8090.4717 8237.2344 -8090.2754 8236.9883 C-8090.3564 8236.6992 -8090.1445 8236.8262 -8090.1387 8236.6504 C-8089.5713 8236.8379 -8089.4575 8237.0986 -8089.0098 8236.8789 C-8089.0435 8237.0313 L-8088.5186 8236.6016 -8087.9102 8236.832 -8087.4673 8236.3359 C-8084.5728 8236.2461 -8081.7983 8235.9707 -8078.9761 8235.9131 C-8076.1865 8236.0078 -8073.4551 8235.7852 -8070.6221 8236.0488 C-8069.9585 8236.4482 -8069.9087 8236.4375 -8069.1797 8236.2754 C-8069.2095 8236.3398 -8069.2549 8236.3555 -8069.2061 8236.416 C-8069.1699 8236.0879 -8068.6929 8236.3848 -8068.6235 8236.0723 C-8067.5762 8236.1328 -8066.6113 8236.043 -8065.5337 8236.041 C-8065.7041 8236.0762 -8065.7896 8236.3438 -8065.5869 8236.3223 C-8065.3755 8236.1133 L-8065.3408 8236.2051 L-8065.2021 8236.1563 -8065.0513 8235.9941 -8065.1943 8235.8887 C-8062.4873 8235.6055 -8059.8242 8236.2637 -8057.1729 8236.1826 C-8056.5435 8236.3193 -8055.6475 8236.1943 -8054.9629 8236.127 C-8052.9355 8236.5645 -8051.1079 8236.917 -8049.0479 8236.6113 C-8049.3169 8237.459 -8050.1675 8237.6543 Vf-8140.2578 8237.4551 m-8140.1855 8237.6191 -8139.9497 8237.709 -8140.1377 8237.9277 C-8140.1611 8237.7734 -8140.2822 8237.6016 -8140.2578 8237.4551 Cf-8133.9619 8239.1426 m-8133.9536 8239.0938 -8133.8721 8239.209 -8133.8521 8239.2354 C-8133.9297 8239.248 -8134.0024 8239.3857 -8134.0645 8239.3008 C-8133.9854 8239.2891 -8133.9976 8239.2109 -8133.9619 8239.1426 Cf-8132.3521 8239.2402 m-8132.3765 8239.3857 -8132.7207 8239.502 -8132.9238 8239.5195 C-8132.3521 8239.2402 Lf-8130.8521 8239.8418 m-8130.7227 8239.9648 -8130.7583 8240.0322 -8130.9326 8240.0283 C-8130.9453 8239.9512 -8130.8877 8239.9121 -8130.8521 8239.8418 Cf-8130.7456 8239.5098 m-8130.6211 8239.5059 -8130.5591 8239.5918 -8130.4985 8239.6758 C-8130.5029 8239.5498 -8130.7871 8239.7539 -8130.7456 8239.5098 Cf-8127.4893 8239.9336 m-8127.4111 8239.9219 -8127.2417 8239.8008 -8127.1689 8239.9629 C-8127.2505 8239.8496 -8127.5498 8240.1475 -8127.4893 8239.9336 Cf-8125.9761 8239.7129 m-8125.9272 8239.7227 -8125.9072 8239.749 -8125.8506 8239.709 C-8125.7607 8239.7754 -8125.8555 8239.8818 -8125.9312 8239.8955 C-8125.9761 8239.7129 Lf-8098.4287 8239.127 m-8098.5923 8239.1992 L-8098.5684 8239.0547 L-8098.4287 8239.127 Lf-8086.3574 8239.1191 m-8086.1943 8239.0273 -8086.2441 8239.2559 -8086.2168 8239.2773 C-8086.3643 8239.293 -8086.1621 8239.0977 -8086.3574 8239.1191 Cf-8079.8486 8238.3906 m-8079.8984 8238.3945 L-8079.8818 8238.0957 L-8079.8486 8238.3906 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8141 8240.2129 m-8115.0591 8240.2129 L-8115.0591 8214.2686 L-8141 8214.2686 L-8141 8240.2129 Ln*u1 D0 O0.62 0.04 0.93 0 k-8115.9858 8234.1279 m-8115.2168 8234.1709 -8115.0718 8234.959 -8115.4526 8235.0215 c-8115.8086 8235.0801 -8115.9175 8235.2891 -8115.7866 8235.4717 c-8115.6675 8235.6406 -8115.1934 8236.0225 -8115.0635 8236.1523 C-8115.0615 8236.1523 -8115.0635 8238.8809 -8115.0635 8238.8818 c-8115.0703 8239.7227 -8115.6494 8239.6123 -8116.3896 8240.2129 C-8119.1104 8240.2129 L-8119.2085 8240.123 -8119.2993 8240.0234 -8119.3818 8239.9121 c-8119.6943 8239.5225 -8119.8774 8239.3662 -8120.0063 8239.3662 c-8120.1377 8239.3662 -8120.1895 8239.4961 -8120.2158 8239.7051 c-8120.2417 8239.8867 -8120.4238 8239.9648 -8120.6318 8239.9648 c-8120.8662 8239.9648 -8121.1006 8239.835 -8121.1006 8239.5742 c-8121.1006 8239.1055 -8121.1279 8236.8643 -8121.5186 8236.8643 c-8121.5967 8236.8643 -8121.7002 8236.9434 -8121.8311 8237.1006 c-8122.6025 8238.0566 -8124.0513 8239.4658 -8126.0176 8240.2129 C-8131.5835 8240.2129 L-8132.9722 8239.665 -8133.9951 8238.7275 -8134.7495 8237.6465 c-8136.8066 8234.7041 -8137.0142 8234.3906 -8138.3423 8234.3906 c-8139.1768 8234.3906 -8140.1919 8234.9121 -8140.1919 8236.3691 c-8140.1919 8237.0742 -8139.4111 8238.0371 -8138.6553 8238.0371 c-8137.9521 8238.0371 -8137.5615 8237.543 -8137.5615 8237.1777 c-8137.5615 8237.0742 -8137.6665 8236.6563 -8137.6665 8236.5791 c-8137.6665 8236.1357 -8137.3535 8236.1357 -8137.2754 8236.1357 c-8136.9897 8236.1357 -8136.7295 8236.5 -8136.7295 8237.0742 c-8136.7295 8237.8809 -8137.4585 8238.9482 -8138.6294 8238.9482 c-8139.9839 8238.9482 -8141 8237.751 -8141 8236.3447 c-8141 8233.7656 -8138.8374 8233.5059 -8138.2646 8233.5059 c-8137.5361 8233.5059 -8136.6504 8233.7656 -8136.1294 8234.1826 C-8136.0254 8234.2607 -8135.9209 8234.3135 -8135.8433 8234.3135 c-8135.6606 8234.3135 -8135.5303 8234.1035 -8135.5303 8233.8184 c-8135.5303 8233.4023 -8134.4102 8228.9473 -8130.1382 8228.9473 c-8128.8105 8228.9473 -8126.6753 8229.9639 -8126.6753 8232.4121 c-8126.6753 8234.8867 -8128.3154 8235.6943 -8129.3057 8235.6943 c-8130.2959 8235.6943 -8131.4155 8234.8086 -8131.4155 8233.6875 c-8131.4155 8232.3594 -8130.3218 8232.0742 -8129.9038 8232.0742 c-8129.5137 8232.0742 -8129.0713 8232.2031 -8128.9663 8232.4902 C-8128.8623 8232.8281 -8128.7329 8233.0107 -8128.5498 8233.0107 c-8128.4722 8233.0107 -8127.8462 8232.8809 -8127.8462 8232.0469 c-8127.8462 8230.1201 -8129.9038 8229.9111 -8130.4248 8229.9111 c-8132.3535 8229.9111 -8134.6958 8232.125 -8134.6958 8234.6523 c-8134.6958 8237.959 -8131.7534 8239.7051 -8128.7583 8239.7051 c-8125.6064 8239.7051 -8124.4097 8237.9072 -8124.4097 8237.5947 c-8124.4097 8237.3594 -8125.6592 8236.917 -8125.6592 8236.709 c-8125.6592 8236.3711 -8124.9561 8235.5117 -8124.2266 8235.5117 c-8122.6631 8235.5117 -8121.96 8234.2871 -8121.96 8233.5586 c-8121.96 8233.4268 -8122.0386 8233.3496 -8122.1943 8233.3496 c-8122.4033 8233.3496 -8123.2622 8233.5313 -8123.4458 8233.5313 c-8124.0967 8233.5313 -8125.2314 8233.4766 -8125.9678 8232.3691 c-8126.5854 8231.4414 -8126.1143 8230.5264 -8126.3994 8229.7744 c-8126.5352 8229.4141 -8127.9375 8228.1602 -8127.9521 8227.9766 C-8127.9727 8227.998 L-8128.1943 8227.998 -8129.5566 8227.6816 -8130.7842 8226.7441 C-8130.7783 8226.8086 -8130.7744 8226.875 -8130.7744 8226.9453 c-8130.7744 8228.0664 -8131.8936 8228.9512 -8132.8838 8228.9512 c-8133.8745 8228.9512 -8135.5142 8228.1426 -8135.5142 8225.6699 c-8135.5142 8223.6592 -8134.0762 8222.6152 -8132.8262 8222.3066 C-8132.6875 8220.9805 -8131.6494 8219.1426 -8129.3794 8219.1426 c-8126.9058 8219.1426 -8126.0977 8220.7832 -8126.0977 8221.7744 c-8126.0977 8222.7627 -8126.9834 8223.8818 -8128.1025 8223.8818 c-8128.1934 8223.8818 -8128.2783 8223.8789 -8128.3599 8223.8672 C-8127.2471 8225.2295 -8127.0498 8226.9502 -8127.0498 8227.0752 C-8126.6602 8227.7969 -8126.1743 8228.3535 v-8125.3174 8229.3379 -8125.4995 8230.416 -8125.2935 8231.084 c-8124.9185 8232.3115 -8124.4346 8231.0059 -8124.4346 8230.875 c-8124.4346 8230.8486 -8124.5391 8230.1982 -8124.5391 8230.0928 c-8124.5391 8229.1309 -8123.9146 8228.8184 -8123.6802 8228.8184 c-8123.1846 8228.8184 -8122.9248 8229.208 -8122.9248 8229.7295 c-8122.9248 8229.8594 -8122.9502 8229.9883 -8122.9766 8230.1455 C-8123.1328 8230.8232 -8123.6802 8231.084 -8123.6802 8231.6309 c-8123.6802 8232.3867 -8123.0542 8232.6465 -8122.2998 8232.6465 C-8120.8096 8233.1182 -8120.4238 8234.1309 v-8120.0386 8235.1436 -8120.4238 8235.7979 -8120.3721 8236.0576 c-8119.8774 8238.8975 -8118.3408 8239.7051 -8117.8193 8239.7051 c-8116.8286 8239.7051 -8116.3354 8238.793 -8116.3354 8237.8809 c-8116.3354 8237.2305 -8117.0913 8236.4746 -8117.2471 8236.2402 c-8117.4287 8235.9805 -8118.2065 8235.0088 -8118.4272 8234.8262 c-8118.5088 8234.7578 -8118.9038 8234.5371 -8119.0386 8234.2266 C-8119.3335 8233.8389 -8119.3486 8233.6563 -8119.9814 8233.2754 c-8120.5454 8232.9375 -8120.1265 8232.6309 Y-8119.8394 8232.3965 -8119.7881 8231.6943 -8119.7881 8231.1729 c-8119.7881 8230.2344 -8118.8232 8229.6104 -8118.5889 8229.6104 c-8118.4595 8229.6104 -8118.3545 8229.6875 -8118.3545 8229.8184 C-8118.4858 8230.417 -8118.4858 8230.5215 v-8118.4858 8230.5742 -8118.6934 8232.0342 -8118.6665 8232.1729 C-8118.4551 8232.251 -8118.0635 8231.7539 -8117.6416 8231.3594 C-8116.6958 8230.8633 -8115.5674 8228.5439 -8115.5674 8226.5098 c-8115.5674 8223.2285 -8117.4951 8220.5723 -8120.8042 8220.5723 c-8123.3286 8220.5723 -8125.3618 8222.499 -8125.3618 8224.4531 c-8125.3618 8225.1035 -8125.0479 8227.0059 -8123.3286 8227.0059 c-8122.7305 8227.0059 -8122.4697 8226.7441 -8122.4697 8226.4834 c-8122.4697 8226.3027 -8122.5742 8226.0928 -8122.7822 8225.8594 C-8123.0166 8225.624 -8123.1729 8225.208 -8123.1729 8224.8438 c-8123.1729 8224.6104 -8122.9385 8223.4629 -8121.5854 8223.4629 c-8120.4648 8223.4629 -8119.5791 8224.583 -8119.5791 8225.5723 c-8119.5791 8226.5625 -8120.3857 8228.2031 -8122.8608 8228.2031 c-8125.3096 8228.2031 -8126.3247 8226.0684 -8126.3247 8224.7393 c-8126.3247 8220.2852 -8121.6631 8219.7383 -8121.4546 8219.7383 c-8121.1685 8219.7383 -8120.96 8219.6074 -8120.96 8219.4258 c-8120.96 8219.3467 -8121.0122 8219.2432 -8121.0898 8219.1387 C-8121.5073 8218.6182 -8121.7666 8217.7314 -8121.7666 8217.0039 c-8121.7666 8216.4297 -8121.5073 8214.2686 -8118.9282 8214.2686 c-8117.5215 8214.2686 -8116.3232 8215.1016 -8116.3232 8216.457 c-8116.3232 8217.6289 -8117.3921 8218.3584 -8118.1982 8218.3584 c-8118.7715 8218.3584 -8119.1362 8218.0977 -8119.1362 8217.8105 c-8119.1362 8217.7314 -8119.1362 8217.4219 -8118.6934 8217.4219 c-8118.6152 8217.4219 -8118.1982 8217.5254 -8118.0942 8217.5254 c-8117.7295 8217.5254 -8117.2354 8217.1338 -8117.2354 8216.4297 c-8117.2354 8215.5713 -8118.2246 8215.0762 -8118.9014 8215.0762 c-8120.3599 8215.0762 -8120.8818 8216.0918 -8120.8818 8216.9248 c-8120.8818 8218.2539 -8120.5698 8218.4629 -8117.6265 8220.5195 c-8116.5439 8221.2744 -8115.6064 8222.2979 -8115.0591 8223.6855 C-8115.0591 8229.251 L-8115.4951 8230.3945 -8116.1538 8231.3623 -8116.8174 8232.125 C-8118.4351 8233.5605 -8118.5034 8233.9883 -8115.9858 8234.1279 cf0 D-8134.3169 8225.1992 m-8134.3169 8225.7979 -8134.0562 8226.0605 -8133.7959 8226.0605 c-8133.6138 8226.0605 -8133.4058 8225.9551 -8133.1714 8225.7471 C-8132.9375 8225.5127 -8132.5195 8225.3574 -8132.1553 8225.3574 c-8132.1338 8225.3574 -8132.1055 8225.3594 -8132.0713 8225.3633 C-8132.4287 8224.8027 -8132.6943 8224.1328 -8132.7969 8223.3389 C-8133.5313 8223.5723 -8134.3169 8224.0957 -8134.3169 8225.1992 cf-8128.7798 8221.0176 m-8128.7798 8220.9395 -8128.9102 8220.3145 -8129.7432 8220.3145 c-8131.1538 8220.3145 -8131.6431 8221.4141 -8131.8047 8222.2109 C-8130.9424 8222.2441 -8130.2354 8222.457 -8129.6538 8222.7783 C-8129.7002 8222.6201 -8129.7178 8222.4746 -8129.7178 8222.373 c-8129.7178 8221.9824 -8129.5874 8221.5391 -8129.3008 8221.4355 C-8128.9614 8221.3291 -8128.7798 8221.2002 -8128.7798 8221.0176 cf-8127.9258 8227.0879 m-8128.2158 8224.8672 -8129.9785 8223.168 -8131.7646 8223.168 c-8131.7935 8223.168 -8131.8281 8223.1699 -8131.8633 8223.1709 C-8131.6895 8224.832 -8129.9912 8226.6953 -8127.9258 8227.0879 Cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 7)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8090.0845 8240.2129 m-8090.0845 8214.2705 L-8141 8214.2705 L-8141 8240.2129 L-8090.0845 8240.2129 Ln*u0 O0.62 0.04 0.93 0 k-8093.1978 8221.043 m-8093.3535 8220.9121 -8093.4321 8220.8086 -8093.4321 8220.7305 c-8093.4321 8220.3398 -8091.1914 8220.3135 -8090.7222 8220.3135 c-8090.4614 8220.3135 -8090.3325 8220.0791 -8090.3325 8219.8447 c-8090.3325 8219.6357 -8090.4102 8219.4541 -8090.5918 8219.4268 c-8090.8008 8219.4023 -8090.9302 8219.3496 -8090.9302 8219.2188 c-8090.9302 8219.0898 -8090.7744 8218.9072 -8090.3838 8218.5938 C-8090.2734 8218.5117 -8090.1738 8218.4219 -8090.0845 8218.3232 C-8090.0845 8215.6016 L-8090.6831 8214.8594 -8091.7046 8214.375 -8092.5449 8214.375 c-8093.1714 8214.375 -8093.8745 8214.7402 -8094.1089 8215.0264 C-8094.2383 8215.1563 -8094.3945 8215.208 -8094.5503 8215.208 c-8094.7075 8215.208 -8094.8374 8215.1563 -8094.8896 8215.0527 c-8095.0718 8214.6621 -8095.4102 8214.4023 -8095.8794 8214.4023 c-8096.6353 8214.4023 -8099.5 8217.084 -8099.5 8217.8389 c-8099.5 8217.9697 -8099.3955 8218.0215 -8099.2129 8218.0215 c-8098.9785 8218.0215 -8098.5879 8217.917 -8098.2241 8217.7344 C-8097.9897 8217.6309 -8096.8955 8216.8242 -8096.6079 8216.8242 c-8096.2695 8216.8242 -8096.0352 8217.6309 -8095.6978 8217.6309 c-8095.4102 8217.6309 -8094.3169 8216.6406 -8094.0566 8216.459 c-8093.8223 8216.3027 -8093.0664 8215.5469 -8092.4155 8215.5469 c-8091.5039 8215.5469 -8090.5918 8216.041 -8090.5918 8217.0313 c-8090.5918 8217.5527 -8091.3994 8219.0898 -8094.2383 8219.584 c-8094.4995 8219.6357 -8095.8535 8219.6104 -8096.1665 8219.6357 c-8096.4785 8219.6621 -8098.0161 8219.1943 -8098.3535 8219.1152 c-8099.3955 8218.8809 -8099.4736 8218.8809 -8101.4272 8218.8809 c-8101.5576 8218.8809 -8101.6362 8218.8809 -8101.6362 8218.8027 c-8101.6362 8218.751 -8101.6094 8218.6729 -8101.5313 8218.5693 C-8101.2705 8218.1777 -8101.0361 8217.6563 -8101.0361 8217.0576 c-8101.0361 8215.7295 -8102.3906 8214.375 -8103.9014 8214.375 c-8106.8184 8214.375 -8106.8184 8216.0938 -8106.8184 8216.3281 c-8106.8184 8216.875 -8106.4795 8217.9951 -8105.2295 8217.9951 c-8104.5264 8217.9951 -8104.2402 8217.6563 -8104.2402 8217.3438 c-8104.2402 8217.1104 -8104.3706 8216.9277 -8104.5527 8216.8496 c-8104.8135 8216.7451 -8104.9175 8216.6152 -8104.9175 8216.4854 c-8104.9175 8216.2246 -8104.5527 8215.9902 -8104.1094 8215.9902 c-8103.3022 8215.9902 -8102.5474 8216.7715 -8102.5474 8217.4229 c-8102.5474 8219.5059 -8106.8975 8220.1055 -8107.1313 8220.1055 c-8107.4185 8220.1055 -8107.6777 8220.0273 -8107.8862 8219.7148 C-8110.1255 8216.5918 -8114.0273 8214.2754 -8115.54 8214.2715 C-8115.54 8214.2715 L-8115.5415 8214.2715 -8115.5415 8214.2715 -8115.5425 8214.2715 c-8115.5435 8214.2715 -8115.5435 8214.2715 -8115.5439 8214.2715 C-8115.5439 8214.2715 L-8117.5498 8214.2744 -8121.1675 8216.8516 -8123.1978 8219.7148 c-8123.4063 8220.0273 -8123.6665 8220.1055 -8123.9526 8220.1055 c-8125.3071 8220.1055 -8128.8496 8218.9326 -8128.8496 8217.0576 c-8128.8496 8216.4854 -8128.5103 8216.041 -8127.8081 8216.041 c-8127.1558 8216.041 -8126.7134 8216.2246 -8126.7134 8216.4326 c-8126.7134 8216.5371 -8126.8706 8216.667 -8127.1558 8216.7979 C-8127.3135 8216.8496 -8127.4175 8217.0313 -8127.4175 8217.2402 c-8127.4175 8217.709 -8127 8218.3086 -8125.8281 8218.3086 c-8124.6558 8218.3086 -8124.1875 8217.6045 -8124.1875 8216.875 c-8124.1875 8215.5469 -8125.3071 8214.3232 -8127.6777 8214.3232 c-8129.6313 8214.3232 -8130.5679 8215.5723 -8130.5679 8216.6406 c-8130.5679 8217.709 -8129.9697 8218.0742 -8129.6826 8218.4385 c-8129.5786 8218.5693 -8129.5264 8218.6465 -8129.5264 8218.6982 c-8129.5264 8218.7773 -8129.6055 8218.8027 -8129.7607 8218.8027 c-8130.3857 8218.8027 -8133.1729 8219.2715 -8133.7466 8219.2715 c-8134.4751 8219.2715 -8140.4395 8219.2715 -8140.4395 8217.2148 c-8140.4395 8216.249 -8139.6846 8215.7559 -8138.7983 8215.7559 c-8138.1475 8215.7559 -8137.2881 8216.6943 -8136.8457 8217.0059 c-8136.1426 8217.5273 -8135.6206 8217.5273 Y-8135.4648 8217.5273 -8135.3862 8217.4736 -8135.3599 8217.3691 C-8135.2305 8216.3545 -8135.1519 8216.1465 -8134.8662 8216.1465 c-8134.3975 8216.1465 -8133.5898 8216.9023 -8133.4072 8217.293 c-8133.2778 8217.5791 -8132.9902 8217.709 -8132.7041 8217.709 c-8132.4185 8217.709 -8132.0791 8217.5791 -8132.0791 8217.1357 c-8132.0791 8216.1201 -8134.71 8214.4023 -8135.2046 8214.4023 c-8135.6738 8214.4023 -8136.0122 8214.6621 -8136.1943 8215.0527 c-8136.2466 8215.1563 -8136.3774 8215.208 -8136.5327 8215.208 c-8136.6895 8215.208 -8136.8457 8215.1563 -8136.9761 8215.0264 C-8137.21 8214.7402 -8137.9126 8214.375 -8138.5386 8214.375 c-8139.3794 8214.375 -8140.3999 8214.8594 -8141 8215.6016 C-8141 8218.2783 L-8140.9082 8218.3867 -8140.8081 8218.4922 -8140.7002 8218.5938 C-8140.4395 8218.8555 -8140.3359 8219.0107 -8140.3359 8219.1416 c-8140.3359 8219.2979 -8140.9346 8219.7148 -8140.9346 8219.8447 c-8140.9346 8220.5215 -8140.3882 8220.5215 -8139.1895 8220.5215 c-8139.0063 8220.5215 -8138.1738 8220.4697 -8138.0176 8220.4697 c-8137.7568 8220.4697 -8137.6274 8220.5488 -8137.6274 8220.6777 c-8137.6274 8220.7822 -8137.7305 8220.9121 -8137.8862 8221.043 c-8138.8442 8221.8145 -8140.2529 8223.2637 -8141 8225.2295 C-8141 8230.7959 L-8140.4526 8232.1846 -8139.5166 8233.207 -8138.4336 8233.9629 c-8135.4912 8236.0195 -8135.1782 8236.2266 -8135.1782 8237.5547 c-8135.1782 8238.3887 -8135.6992 8239.4043 -8137.1582 8239.4043 c-8137.8354 8239.4043 -8138.8242 8238.9102 -8138.8242 8238.0498 c-8138.8242 8237.3467 -8138.3306 8236.957 -8137.9648 8236.957 c-8137.8618 8236.957 -8137.4438 8237.0605 -8137.3662 8237.0605 c-8136.9238 8237.0605 -8136.9238 8236.748 -8136.9238 8236.6699 c-8136.9238 8236.3838 -8137.2881 8236.123 -8137.8618 8236.123 c-8138.6685 8236.123 -8139.7358 8236.8506 -8139.7358 8238.0234 c-8139.7358 8239.3789 -8138.5386 8240.2119 -8137.1318 8240.2119 c-8134.5537 8240.2119 -8134.2935 8238.0498 -8134.2935 8237.4766 c-8134.2935 8236.748 -8134.5537 8235.8623 -8134.9702 8235.3408 C-8135.0479 8235.2363 -8135.1006 8235.1328 -8135.1006 8235.0557 c-8135.1006 8234.873 -8134.8911 8234.7422 -8134.6055 8234.7422 c-8134.3975 8234.7422 -8129.7344 8234.1953 -8129.7344 8229.7422 c-8129.7344 8228.4141 -8130.7515 8226.2783 -8133.1992 8226.2783 c-8135.6738 8226.2783 -8136.4814 8227.9189 -8136.4814 8228.9082 c-8136.4814 8229.8984 -8135.5962 8231.0176 -8134.4751 8231.0176 c-8133.1206 8231.0176 -8132.8862 8229.8721 -8132.8862 8229.6377 c-8132.8862 8229.2744 -8133.0435 8228.8555 -8133.2778 8228.6221 C-8133.4858 8228.3867 -8133.5898 8228.1787 -8133.5898 8227.9961 c-8133.5898 8227.7344 -8133.3286 8227.4766 -8132.7305 8227.4766 c-8131.0122 8227.4766 -8130.6992 8229.3789 -8130.6992 8230.0273 c-8130.6992 8231.9824 -8132.7305 8233.9082 -8135.2568 8233.9082 c-8138.5649 8233.9082 -8140.4922 8231.2529 -8140.4922 8227.9707 c-8140.4922 8225.6797 -8139.0586 8223.0225 -8138.0698 8223.0225 c-8137.6519 8223.0225 -8137.5742 8223.8027 -8137.5742 8223.96 c-8137.5742 8224.0635 -8137.7046 8224.6631 Y-8137.7046 8224.793 -8137.6006 8224.8711 -8137.4702 8224.8711 c-8137.2358 8224.8711 -8136.2729 8224.2461 -8136.2729 8223.3086 c-8136.2729 8222.7881 -8136.2207 8222.084 -8135.9336 8221.8496 c-8135.7524 8221.6943 -8134.5801 8221.1729 -8134.3457 8221.1729 c-8134.2144 8221.1729 -8134.1367 8221.251 -8134.1367 8221.4082 c-8134.1367 8221.6152 -8134.3193 8222.5273 -8134.3193 8222.709 c-8134.3193 8224.0898 -8133.5122 8225.1055 -8132.0527 8225.1055 c-8131.8975 8225.1055 -8131.3242 8225.0801 -8131.3242 8224.8457 c-8131.3242 8224.7148 -8131.8711 8224.3496 -8131.8711 8224.2207 c-8131.8711 8224.0898 -8131.7935 8224.0107 -8131.6626 8224.0107 c-8131.6367 8224.0107 -8130.9858 8224.1152 -8130.8809 8224.1152 c-8129.9175 8224.1152 -8129.6055 8223.4912 -8129.6055 8223.2568 c-8129.6055 8222.7617 -8129.9951 8222.502 -8130.5166 8222.502 c-8130.6465 8222.502 -8130.7778 8222.5273 -8130.9336 8222.5537 C-8131.6104 8222.709 -8131.8711 8223.2568 -8132.4185 8223.2568 c-8133.1729 8223.2568 -8133.4336 8222.2666 -8133.4336 8221.5117 c-8133.4336 8220.5986 -8131.8184 8220.0527 -8130.0991 8220.0527 c-8128.1465 8220.0527 -8124.5786 8221.46 -8124.5786 8222.1885 C-8125.6982 8225.4707 -8125.8545 8226.0957 v-8125.9063 8226.3291 -8125.9839 8226.4336 -8126.0889 8226.4336 c-8126.4282 8226.4336 -8127.0527 8224.7402 -8127.3394 8224.7402 c-8127.7031 8224.7402 -8127.9121 8225.7832 -8127.9121 8226.9287 c-8127.9121 8230.4443 -8125.6465 8235.5498 -8125.1504 8236.2793 c-8125.0474 8236.4355 -8124.9946 8236.5664 -8124.9946 8236.6953 c-8124.9946 8236.9043 -8125.1504 8237.0605 -8125.3857 8237.0605 c-8125.4639 8237.0605 -8128.8496 8235.8096 -8128.8496 8235.0811 c-8128.8496 8234.9248 -8128.7969 8234.7949 -8128.7969 8234.6641 c-8128.7969 8234.248 -8129.0313 8234.0664 -8129.5786 8234.0664 c-8130.3857 8234.0664 -8130.4385 8234.4297 -8130.4385 8234.6387 c-8130.4385 8234.8477 -8130.3857 8235.1074 -8130.3857 8235.6543 c-8130.3857 8235.8887 -8130.4639 8236.6182 -8130.6729 8236.6699 c-8131.4814 8236.8506 -8132.2617 8237.373 -8132.2617 8237.7373 c-8132.2617 8238.2852 -8131.5054 8239.7168 -8131.1934 8239.7168 c-8130.7246 8239.7168 -8129.7344 8237.4512 -8129.3706 8237.4512 c-8129.1626 8237.4512 -8128.4849 8239.8477 -8128.0425 8239.8477 c-8127.8594 8239.8477 -8127.6514 8239.6123 -8127.6514 8239.248 c-8127.6514 8238.6758 -8128.1465 8237.8418 -8128.1465 8237.4512 c-8128.1465 8237.2686 -8128.0688 8237.1641 -8127.9121 8237.1641 c-8127.5728 8237.1641 -8126.2715 8237.8154 -8124.5786 8238.6758 c-8123.1978 8239.3506 -8122.1816 8240.2119 -8120.4102 8240.2119 c-8117.6504 8240.2119 -8115.6455 8238.3379 -8115.6455 8234.873 c-8115.6455 8233.8047 -8115.8262 8232.6592 -8116.1138 8231.4873 c-8116.2954 8230.7568 -8117.5454 8227.5801 -8117.5454 8226.9033 c-8117.5454 8226.6162 -8117.4414 8226.4863 -8117.2334 8226.4863 c-8117.0513 8226.4863 -8116.2974 8226.7715 -8115.5439 8226.7725 C-8115.5439 8226.7725 L-8115.5435 8226.7725 -8115.5435 8226.7725 -8115.5425 8226.7725 c-8115.5415 8226.7725 -8115.5415 8226.7725 -8115.54 8226.7725 C-8115.54 8226.7725 L-8114.7866 8226.7715 -8114.0337 8226.4863 -8113.8506 8226.4863 c-8113.6426 8226.4863 -8113.5386 8226.6162 -8113.5386 8226.9033 c-8113.5386 8227.5801 -8114.7881 8230.7568 -8114.9702 8231.4873 c-8115.2568 8232.6592 -8115.4395 8233.8047 -8115.4395 8234.873 c-8115.4395 8238.3379 -8113.4336 8240.2119 -8110.6729 8240.2119 c-8108.9023 8240.2119 -8107.8862 8239.3506 -8106.5054 8238.6758 c-8104.8135 8237.8154 -8103.5103 8237.1641 -8103.1719 8237.1641 c-8103.0161 8237.1641 -8102.9375 8237.2686 -8102.9375 8237.4512 c-8102.9375 8237.8418 -8103.4326 8238.6758 -8103.4326 8239.248 c-8103.4326 8239.6123 -8103.2246 8239.8477 -8103.0425 8239.8477 c-8102.5474 8239.8477 -8101.8706 8237.0342 -8101.6362 8237.0342 c-8101.3755 8237.0342 -8101.0098 8238.2578 -8100.7231 8239.3008 c-8100.5938 8239.7949 -8100.2554 8239.9766 -8099.9688 8239.9766 c-8099.6035 8239.9766 -8099.2393 8239.7168 -8099.2393 8239.3506 c-8099.2393 8239.2227 -8099.2915 8239.0664 -8099.3955 8238.9102 c-8101.2705 8236.0449 -8100.8018 8234.6914 -8101.0625 8234.1426 c-8101.1665 8233.9355 -8101.4785 8233.8311 -8101.7656 8233.8311 c-8102.2344 8233.8311 -8102.2344 8233.9629 -8102.2344 8235.0811 c-8102.2344 8235.8096 -8105.6201 8237.0605 -8105.6982 8237.0605 c-8105.9326 8237.0605 -8106.0889 8236.9043 -8106.0889 8236.6953 c-8106.0889 8236.5664 -8106.0366 8236.4355 -8105.9326 8236.2793 c-8105.4375 8235.5498 -8103.1719 8230.4443 -8103.1719 8226.9287 c-8103.1719 8225.7832 -8103.3809 8224.7402 -8103.7446 8224.7402 c-8104.0845 8224.7402 -8104.6313 8226.877 -8105.0215 8226.877 c-8105.2295 8226.877 -8106.0889 8223.2822 -8106.3755 8222.6318 c-8106.4546 8222.4482 -8106.5054 8222.293 -8106.5054 8222.1885 c-8106.5054 8221.46 -8102.9375 8220.0527 -8100.9839 8220.0527 c-8099.2656 8220.0527 -8097.6504 8220.5986 -8097.6504 8221.5117 c-8097.6504 8222.2666 -8097.9111 8222.8926 -8098.6665 8222.8926 c-8099.2129 8222.8926 -8099.4736 8222.3447 -8100.1504 8222.1885 C-8100.3066 8222.1631 -8100.4375 8222.1367 -8100.5674 8222.1367 c-8101.0879 8222.1367 -8101.4785 8222.3975 -8101.4785 8222.8926 c-8101.4785 8223.127 -8101.1665 8223.752 -8100.2031 8223.752 c-8100.0986 8223.752 -8099.4473 8223.6465 -8099.4214 8223.6465 c-8099.2915 8223.6465 -8099.2129 8223.7256 -8099.2129 8223.8555 c-8099.2129 8223.9863 -8099.7598 8224.3496 -8099.7598 8224.4795 c-8099.7598 8224.7148 -8099.1875 8224.7402 -8099.0313 8224.7402 c-8098.0674 8224.7402 -8096.7646 8224.1152 -8096.7646 8222.6582 c-8096.7646 8222.4746 -8096.9473 8221.6152 -8096.9473 8221.4082 c-8096.9473 8221.251 -8096.8687 8221.1729 -8096.7393 8221.1729 c-8096.0098 8221.1729 -8094.7856 8221.877 -8094.7856 8223.4395 c-8094.7856 8224.168 -8093.9258 8224.8711 -8093.5879 8224.8711 c-8093.3794 8224.8711 -8092.9375 8223.6211 -8092.7026 8223.6211 c-8092.3887 8223.6211 -8090.5918 8224.8193 -8090.5918 8227.9707 c-8090.5918 8230.9658 -8092.3374 8233.9082 -8095.6455 8233.9082 c-8098.1719 8233.9082 -8100.3848 8231.5664 -8100.3848 8229.6377 c-8100.3848 8229.1162 -8100.1768 8227.0586 -8098.25 8227.0586 c-8097.4165 8227.0586 -8097.2866 8227.6846 -8097.2866 8227.7617 c-8097.2866 8227.9453 -8097.4688 8228.0752 -8097.8066 8228.1787 C-8098.0938 8228.2832 -8098.2241 8228.7266 -8098.2241 8229.1162 c-8098.2241 8229.5322 -8097.9375 8230.627 -8096.6079 8230.627 c-8095.4878 8230.627 -8094.6035 8229.5078 -8094.6035 8228.5176 c-8094.6035 8227.5273 -8095.4102 8225.8867 -8097.8848 8225.8867 c-8100.3335 8225.8867 -8101.3486 8228.0234 -8101.3486 8229.3506 c-8101.3486 8233.623 -8096.8955 8234.7422 -8096.4785 8234.7422 c-8096.1914 8234.7422 -8095.9834 8234.873 -8095.9834 8235.0557 c-8095.9834 8235.1328 -8096.0352 8235.2363 -8096.1138 8235.3408 C-8096.5303 8235.8623 -8096.7915 8236.748 -8096.7915 8237.4766 c-8096.7915 8238.0498 -8096.5303 8240.2119 -8093.9521 8240.2119 c-8092.5449 8240.2119 -8091.3481 8239.1953 -8091.3481 8237.8418 c-8091.3481 8236.6699 -8092.4155 8235.9414 -8093.2222 8235.9414 c-8093.7959 8235.9414 -8094.1602 8236.2002 -8094.1602 8236.4883 c-8094.1602 8236.5664 -8094.1602 8236.8789 -8093.7178 8236.8789 c-8093.6401 8236.8789 -8093.2222 8236.7744 -8093.1182 8236.7744 c-8092.7534 8236.7744 -8092.2593 8237.1641 -8092.2593 8237.8672 c-8092.2593 8238.623 -8093.2222 8239.4043 -8093.9258 8239.4043 c-8095.3848 8239.4043 -8095.9058 8238.3887 -8095.9058 8237.5547 c-8095.9058 8236.2266 -8095.5928 8236.0195 -8092.6494 8233.9629 c-8091.5674 8233.207 -8090.6313 8232.1846 -8090.0845 8230.7959 C-8090.0845 8225.2295 L-8090.8311 8223.2637 -8092.2402 8221.8145 -8093.1978 8221.043 cf1 D-8116.6338 8234.6641 m-8116.6338 8237.5293 -8118.1978 8238.9629 -8119.1602 8238.9629 c-8119.7075 8238.9629 -8121.6606 8238.1016 -8121.6606 8235.7578 c-8121.6606 8235.2891 -8121.6094 8234.7949 -8121.5835 8234.3789 c-8121.5313 8233.623 -8121.2441 8233.2314 -8120.75 8232.8145 c-8120.4375 8232.5547 -8119.6289 8231.8506 -8119.6289 8230.9658 c-8119.6289 8230.2617 -8120.3066 8229.1162 -8121.6094 8229.1162 c-8122.2085 8229.1162 -8123.6665 8229.3789 -8123.6665 8232.5293 c-8123.6665 8235.1855 -8122.7295 8236.957 -8122.5718 8237.1914 C-8122.4946 8237.3467 -8122.4424 8237.4512 -8122.4424 8237.5293 c-8122.4424 8237.6074 -8122.4946 8237.6592 -8122.5474 8237.6592 c-8123.4849 8237.6592 -8124.9165 8234.3506 -8124.9165 8231.3818 c-8124.9165 8229.1953 -8123.3799 8224.168 -8121.9736 8224.168 c-8120.4897 8224.168 -8116.6338 8229.8203 -8116.6338 8234.6641 cf-8115.54 8224.2715 m-8115.54 8224.2715 L-8115.5415 8224.2715 -8115.5415 8224.2715 -8115.5425 8224.2715 c-8115.5435 8224.2715 -8115.5435 8224.2715 -8115.5439 8224.2715 C-8115.5439 8224.2715 L-8116.5313 8224.2744 -8117.3374 8224.6113 -8117.8584 8225.1582 c-8117.9634 8225.2617 -8118.0928 8225.3398 -8118.2222 8225.3398 c-8118.6401 8225.3398 -8120.8535 8223.6211 -8120.8535 8222.293 c-8120.8535 8220.8867 -8117.6504 8218.9854 -8115.54 8218.4902 C-8115.54 8218.4648 L-8112.8594 8219.3242 -8110.2305 8220.9648 -8110.2305 8222.293 c-8110.2305 8223.6211 -8112.4438 8225.3398 -8112.8618 8225.3398 c-8112.9912 8225.3398 -8113.1206 8225.2617 -8113.2256 8225.1582 c-8113.7466 8224.6113 -8114.5518 8224.2744 -8115.54 8224.2715 Cf-8106.1685 8231.3818 m-8106.1685 8234.3506 -8107.6001 8237.6592 -8108.5366 8237.6592 c-8108.5898 8237.6592 -8108.6416 8237.6074 -8108.6416 8237.5293 c-8108.6416 8237.4512 -8108.5898 8237.3467 -8108.5122 8237.1914 C-8108.3555 8236.957 -8107.4185 8235.1855 -8107.4185 8232.5293 c-8107.4185 8230.9922 -8107.8862 8229.0635 -8109.3711 8229.0635 c-8109.9185 8229.0635 -8111.5854 8229.9238 -8111.5854 8230.8096 c-8111.5854 8230.9922 -8111.4814 8231.7998 -8110.6206 8232.4766 c-8110.1265 8232.8672 -8109.7354 8233.4658 -8109.5015 8234.1953 C-8109.3975 8234.6123 -8109.3184 8235.1074 -8109.3184 8235.6016 c-8109.3184 8236.4102 -8109.6577 8238.9883 -8111.6113 8238.9883 c-8112.6782 8238.9883 -8114.4497 8237.8418 -8114.4497 8234.6641 c-8114.4497 8229.8203 -8110.5942 8224.168 -8109.1104 8224.168 c-8107.7041 8224.168 -8106.1685 8229.1953 -8106.1685 8231.3818 cf*UU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 3 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe Calligr) -(aphic Brush Tool/ 3 pt. Round/ Adobe Calligraphic Brush Tool/ ) -(7 pt. Round/ Adobe ArtOnPath Brush Tool/ Pencil - Thin/ Adobe ) -(ArtOnPath Brush Tool/ Charcoal/ Adobe ArtOnPath Brush Tool/ Ba) -(nner/ Adobe PatternOnPath Brush Tool/ Ornamental Border/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Flat)(1 3 3 9 9 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 5 0.976471 0.741176 0.372549 / ) -( 1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Pencil - Thin)(1 / Unnamed 2/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Ornamental Border)(1 / Unnamed Brush Pat 7/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -(t 2/ / / 5 0.423529 0.72549 0.313726 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 1 1 0 k(CMYK Red)Pc0 0 1 0 k(CMYK Yellow)Pc1 0 1 0 k(CMYK Green)Pc1 0 0 0 k(CMYK Cyan)Pc1 1 0 0 k(CMYK Blue)Pc0 1 0 0 k(CMYK Magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 1)PcBb0 0 0 0 Bh2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 1)PcBb2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 2)PcBb0 0 0 0 Bh2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 2)Pc(Waves Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Waves Pattern)Pc(Polka Dot Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Polka Dot Pattern)Pc0 0.3 0.7 0 k(C=0 M=30 Y=70 K=0)Pc0.05 0.7 0.9 0 k(C=5 M=70 Y=90 K=0)Pc0.05 0.9 0.75 0 k(C=5 M=90 Y=75 K=0)Pc0.3 0 0.95 0 k(C=30 M=0 Y=95 K=0)Pc0.6 0.05 0.95 0 k(C=60 M=5 Y=95 K=0)Pc0.3 0 0.1 0 k(C=30 M=0 Y=10 K=0)Pc0.6 0.1 0.05 0 k(C=60 M=10 Y=5 K=0)Pc0.8 0.05 0.1 0 k(C=80 M=5 Y=10 K=0)Pc0 g(K=100)Pc0.100006 g(K=90)Pc0.200012 g(K=80)Pc0.300003 g(K=70)Pc0.400009 g(K=60)Pc0.5 g(K=50)Pc0.600006 g(K=40)Pc0.700012 g(K=30)Pc0.800003 g(K=20)Pc0.900009 g(K=10)Pc0.950012 g(K=5)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Auu0 D1 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR49.5972 4.60742 m74.4395 4.60742 94.582 24.748 94.582 49.5923 c94.582 74.4346 74.4395 94.5737 49.5972 94.5737 c24.7534 94.5737 4.61377 74.4346 4.61377 49.5923 c4.61377 24.748 24.7534 4.60742 49.5972 4.60742 CF0 O0 0 0 0 k75.8574 37.3574 m75.8574 37.3594 L75.8574 58.6187 L75.8574 69.1167 l75.8574 69.3804 75.75 69.6382 75.5664 69.8237 C69.2129 76.1748 l69.1895 76.1987 69.166 76.2222 69.1367 76.2427 c69.1328 76.2485 69.125 76.2529 69.1191 76.2563 c69.0996 76.2715 69.0801 76.2876 69.0586 76.3022 c69.0508 76.3076 69.041 76.3115 69.0313 76.3169 c69.0137 76.3301 68.9941 76.3423 68.9746 76.3511 c68.9648 76.3569 68.9551 76.3618 68.9473 76.3652 c68.9258 76.3765 68.9082 76.3857 68.8848 76.3931 c68.877 76.397 68.8691 76.3989 68.8613 76.4023 c68.8379 76.4106 68.8145 76.4204 68.793 76.4258 c68.7871 76.4272 68.7793 76.4292 68.7734 76.4312 c68.75 76.439 68.7227 76.4448 68.6973 76.4507 c68.6934 76.4507 68.6875 76.4526 68.6816 76.4526 c68.625 76.4619 68.5664 76.4692 68.5039 76.4692 C65.7852 76.4692 l65.4043 76.4692 65.0566 76.2529 64.8906 75.9121 C49.979 45.8711 L35.0698 75.9121 l34.9009 76.2529 34.5542 76.4692 34.1733 76.4692 C25.1021 76.4692 l24.8384 76.4692 24.5806 76.3638 24.395 76.1768 c24.2075 75.9902 24.1011 75.7319 24.1011 75.4692 C24.1011 37.3594 L24.1011 37.3574 L24.1011 26.7715 l24.1011 26.7363 24.103 26.7051 24.105 26.6699 c24.1304 26.4336 24.2349 26.2227 24.395 26.0645 C24.397 26.0625 l24.4165 26.041 24.4419 26.0176 24.4673 25.9961 c24.4692 25.9961 24.4692 25.9941 24.4712 25.9941 c24.5942 25.8945 24.7427 25.8223 24.9067 25.7891 C24.9087 25.7891 l24.938 25.7832 24.9692 25.7793 25.0005 25.7773 c25.0337 25.7734 25.0679 25.7695 25.1001 25.7695 C31.4526 25.7695 l31.4868 25.7695 31.521 25.7734 31.5532 25.7773 c31.5835 25.7793 31.6118 25.7832 31.6382 25.7891 c31.6431 25.7891 31.647 25.7891 31.6489 25.7891 c31.8101 25.8223 31.9575 25.8945 32.0825 25.9941 c32.0845 25.9941 32.0864 25.9961 32.0874 25.9961 c32.104 26.0117 32.1235 26.0293 32.1411 26.0469 c32.146 26.0527 32.1548 26.0586 32.1606 26.0645 c32.1636 26.0664 32.1675 26.0723 32.1714 26.0762 c32.3462 26.2578 32.4526 26.5 32.4526 26.7715 C32.4526 63.8882 L44.7896 39.0313 l44.9595 38.6914 45.3062 38.4746 45.687 38.4746 C54.2734 38.4746 l54.6523 38.4746 54.998 38.6914 55.166 39.0293 C67.5078 63.8062 L67.5078 37.3574 L67.5078 26.7715 l67.5078 26.7363 67.5078 26.7051 67.5098 26.6699 c67.5352 26.4336 67.6406 26.2227 67.8008 26.0645 c67.8008 26.0625 67.8027 26.0625 67.8047 26.0605 c67.8242 26.0391 67.8477 26.0176 67.8711 25.9961 c67.875 25.9961 67.875 25.9941 y68 25.8945 68.1484 25.8223 68.3105 25.7891 c68.3125 25.7891 68.3145 25.7891 v68.3438 25.7832 68.375 25.7793 68.4043 25.7773 c68.4395 25.7734 68.4727 25.7695 68.5039 25.7695 C74.8574 25.7695 l74.8926 25.7695 74.9238 25.7734 74.957 25.7773 c75.4297 25.8223 75.8066 26.1992 75.8516 26.6699 c75.8555 26.7051 75.8574 26.7363 75.8574 26.7715 c75.8574 37.3574 LfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF